# apiVersion: v1
# kind: Service
# metadata:
#   name: pingdirectory
#   labels:
#     app: pingdirectory
#     provider: PingIdentity
#     tier: backend
# spec:
#   ports:
#   - port: 636
#     name: ldaps
#   - port: 389
#     name: ldap
#   # clusterIP: None
#   selector:
#     app: pingdirectory
# ---
apiVersion: v1
kind: Service
metadata:
  name: pingdirectory
  labels:
    app: pingdirectory
    provider: PingIdentity
    tier: backend
spec:
  type: NodePort
  ports:
    - nodePort: 30389
      port: 1389
      protocol: TCP
      targetPort: 389
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pingdirectory-instance
  labels:
    app: pingdirectory
    provider: PingIdentity
    tier: backend
spec:
  serviceName: pingdirectory
  replicas: ${PINGDIRECTORY_TOPOLOGY_SIZE}
  selector:
    matchLabels:
      app: pingdirectory
  template:
    metadata:
      labels:
        app: pingdirectory
        provider: PingIdentity
        tier: backend
    spec:
      # volumes:
      # - name: in-dir
      #   configMap:
      #     name: server-profile-pingdirectory-kubernetes
      # - name: out-dir 
      #   persistentVolumeClaim:
      #     claimName: out-dir
      terminationGracePeriodSeconds: 300
      containers:
      - name: pingdirectory-container
        image: ${IMAGE}
        imagePullPolicy: Always
        ports:
        - containerPort: 636
          name: ldaps
        - containerPort: 389
          name: ldap
        env:
        - name: LOCATION
          value: "${LOCATION}"
        - name: SERVER_PROFILE_URL
          value: "https://github.com/pingidentity/pingidentity-server-profiles.git"
        - name: SERVER_PROFILE_PATH
          value: baseline/pingdirectory
        - name: TOPOLOGY_SIZE
          value: "${PINGDIRECTORY_TOPOLOGY_SIZE}"
        - name: TOPOLOGY_PREFIX
          value: "pingdirectory-instance-"
        - name: TOPOLOGY_SUFFIX
          value: "pingdirectory"
        # - name: VERBOSE
        #   value: "true"
        # volumeMounts:
        # - name: in-dir
        #   mountPath: /opt/in
        #   readOnly: true
        # - name: out-dir
        #   mountPath: /opt/out
        readinessProbe:
          exec:
            command: [ liveness.sh ]
        livenessProbe:
          exec:
            command: [ liveness.sh ]
          initialDelaySeconds: 300
          periodSeconds: 30
        lifecycle:
          preStop:
            exec:
              command: 
              - /bin/sh
              - -c
              - ${HOOKS_DIR}/90-shudown-sequence.sh
  # volumeClaimTemplates:
  # - metadata:
  #     name: out-dir
  #   spec:
  #     accessModes:
  #     - ReadWriteOnce
  #     resources:
  #       requests:
  #         storage: 1Gi
