##############################################################################
# Aliases of commonly used docker commands and those related to the
# Ping Identity DevOps Program.
#
# Recommend that you source this file from your ~/.bash_profile or ~/.bashrc
# Just add following line without the preceeding comment
#
#  . {path to this directory}/bash_profile_devops
#
##############################################################################

bold=$(tput bold)
normal=$(tput sgr0)

## dhelp
function dhelp () 
{
cat <<EOHELP
+----------------------------------------------------------------------------+
|                   ${bold}Ping Identity Docker Helper Aliases${normal}                      |
+----------------------------------------------------------------------------+
 ${bold}DevOps Information${normal}
 -------------------------------------
 denv - get devops details
 
 ${bold}Container${normal}                                 ${bold}Image${normal}
 -------------------------------------     ----------------------------------
 dce - execute commands (i.e. /bin/sh)     dib - build 
 dci - inspect                             dii - inspect
 dcl - list                                dil - list 
 dcr - remove forcefully                   dir - remove forcefully
 dcp - prune                               dip - prune 
 dct - run top                             dit - tag 
 dcstop  - stop                            diw - remove pingidentity images
 dcstart - start                            
 dck    - stop
 dlogs  - tail logs
 dsa - docker stop all
 dra - docker remove all              
                                          
 ${bold}Volume${normal}                    ${bold}Network${normal}                   ${bold}Service${normal}
 ------------------------  ------------------------  ------------------------
 dvc - create              dnc - create              dsl - list
 dvi - inspect             dni - inspect             dss - scale
 dvl - list                dnl - list                dsr - remove
 dvp - prune               dnp - prune
 dvr - remove              dnr - remove

 ${bold}Docker Compose${normal}
 ------------------------
 dpu - up (detached)
 dpd - down
 dpp - ps
 dpl - logs (w/ -f)

 ${bold}Special${normal}
 ----------------------------------------------------------------------------
 ddc - deep clean (cont, vol, net)
 pingdownload - download product or license to ~/Downloads
 ----------------------------------------------------------------------------
EOHELP
}

## denv
function denv () 
{
    sourcePingIdentityFiles

cat <<EOP1ENV
+-----------------------------------------------------------------------------------------+
|             ${bold}Ping Identity DevOps Information${normal}
|             ${bold}Sourced from ~/.pingidentity/devops${normal}
+-----------------------------------------------------------------------------------------+
|          PING_IDENTITY_DEVOPS_USER: ${PING_IDENTITY_DEVOPS_USER}
|           PING_IDENTITY_DEVOPS_KEY: ${PING_IDENTITY_DEVOPS_KEY}
|           PING_IDENTITY_DEVOPS_TAG: ${PING_IDENTITY_DEVOPS_TAG}
+-----------------------------------------------------------------------------------------+
 To update, run Ping Identity DevOps Setup 
    (found in your the pingidentity-devops-getting-started git repo)/setup

 To use with 'docker run command'
     docker run 
        ... 
        --env-file ~/.pingidentity/devops
        ...

 To use with '.yaml' file (use snippet below)
     pingdirectory:
       env_file:
         - $HOME/.pingidentity/devops
+-----------------------------------------------------------------------------------------+
EOP1ENV
}

function run ()
{
  #date
  echo "Alias Expansion: ${bold}$*${normal}"
  #time $*
  $*
}

# PingDownload alias
alias pingdownload="docker run --rm -v ~/Downloads:/tmp pingidentity/pingdownloader"

# Docker
alias dps="run docker ps"

## container
dsa() { echo "Alias Expansion: ${bold}docker stop all containers${normal}"; docker stop $(docker ps -a -q); }
dra() { echo "Alias Expansion: ${bold}docker remove all containers${normal}"; docker container rm $(docker ps -a -q); }
alias dce="run docker container exec -it"
alias dci="run docker container inspect"
alias dcl="run docker container ls -a"
alias dcr="run docker container rm -f"
alias dcp="run docker container prune -f"
alias dcstop="run docker container stop"
alias dct="run docker container top"
alias dck="dcstop"
alias dcstart="run docker container start"
alias dlogs="run docker logs -f"

## image  
alias dib="run docker image build"
alias dii="run docker image inspect"
alias dil="run docker images"
alias dir="run docker image rm -f"
alias dip="run docker image prune -f"
alias dit="run docker image tag"
alias diw="dip; dir \$(docker images 'pingidentity/*' -q|sort|uniq)"

## volume
alias dvc="run docker volume create"
alias dvi="run docker volume inspect"
alias dvl="run docker volume ls"
alias dvp="run docker volume prune -f"
alias dvr="run docker volume rm"

## network
alias dnc="run docker network create"
alias dni="run docker network inspect"
alias dnl="run docker network ls"
alias dnp="run docker network prune -f"
alias dnr="run docker network rm"


## service
alias dsl="run docker service ls"
alias dss="run docker service scale"
alias dsr="run docker service rm"

## docker-compose
alias dpu="run docker-compose up -d"
alias dpd="run docker-compose down"
alias dpp="run docker-compose ps"
alias dpl="run docker-compose logs -f"

## logs
alias dlf="run docker logs -f"

## deep clean
alias ddc="dcp ; dvp ; dip; dnp"

## kenv
function kenv () 
{
    sourcePingIdentityFiles

cat <<EOP1ENV
+-----------------------------------------------------------------------------------------+
|             ${bold}Ping Identity DevOps Kubernetes Information${normal}
|             ${bold}Sourced from ~/.pingidentity/devops${normal}
+-----------------------------------------------------------------------------------------+
|          PING_IDENTITY_DEVOPS_USER: ${PING_IDENTITY_DEVOPS_USER}
|          PING_IDENTITY_DEVOPS_KEY : ${PING_IDENTITY_DEVOPS_KEY}
+-----------------------------------------------------------------------------------------+
 To use with '.yaml' files (use snippet below)
     env:
        - name: PING_IDENTITY_DEVOPS_USER
          value: "${PING_IDENTITY_DEVOPS_USER}"
        - name: PING_IDENTITY_DEVOPS_KEY
          value: "${PING_IDENTITY_DEVOPS_KEY}"
+-----------------------------------------------------------------------------------------+
EOP1ENV
}

## khelp
function khelp () 
{
cat <<EOHELP
+----------------------------------------------------------------------------+
|                   ${bold}Ping Identity DevOps Kubernetes Aliases${normal}                      |
+----------------------------------------------------------------------------+
 ${bold}DevOps Information${normal}
 -------------------------------------
 kenv - get kubernets info
 
 ${bold}Pods${normal}                      
 -------------------------------------     
 kpe - execute commands (i.e. /bin/sh)      
 kpd - describe                            
 kpl - list                                 
 klogs  - tail logs              

 ${bold}Special${normal}
 ----------------------------------------------------------------------------
 pingdownload - download product or license to ~/Downloads
 ----------------------------------------------------------------------------
EOHELP
}

## container
alias kpe="k exec -it"
alias kpd="k describe"
alias kpl="k get pods"
alias klogs="k logs -f "

##############################################################################
# Aliases of commonly used PingOne For Customer commands
##############################################################################

## p1help
function p1help () 
{
cat <<EOP1HELP
+----------------------------------------------------------------------------+
|                  ${bold}Ping One for Customer Helper Aliases${normal}                      |
+----------------------------------------------------------------------------+
 ${bold}Setup/Authentcation${normal}
 -------------------------------------
 p1env - get setup details
 p1auth - get authentication token
 
 ${bold}Environment${normal}                               ${bold}Populations${normal}
 -------------------------------------     ----------------------------------
 p1e - environment details                 p1p - population details 
 p1en - environment name                   p1pn - population name
                                           p1pc - population user count
 
  ${bold}Users${normal}                                    ${bold}Applications${normal}
 -------------------------------------     ----------------------------------
 p1u - users details (first 100)           p1a - aplication details 
 p1ui - users ids (first 100)              p1an - aplication name

  ${bold}Generic Call${normal}             
 -------------------------------------     
 p14c - Generic Call (any URI after environments/env-guid)

 Examples:
   p14c /passwordPolicies                   # Get Password passwordPolicies
   p14c /users?limit=5                      # Get a page of 5 users
   p14c /users | jq '._links.next.href'     # Get the link for next page of users

EOP1HELP
}

## sourcePingIdentityFiles
function sourcePingIdentityFiles () 
{
    test -f ~/.pingidentity/devops && \
        . ~/.pingidentity/devops && \
        export $(grep "^[A-Z]" ~/.pingidentity/devops | cut -d= -f1)
    test -f ~/.pingidentity/p14c  && \
        . ~/.pingidentity/p14c && \
        export $(grep "^[A-Z]" ~/.pingidentity/p14c | cut -d= -f1)
    test -f ~/.pingidentity/p14c.access_token  && \
        . ~/.pingidentity/p14c.access_token && \
        export $(grep "^[A-Z]" ~/.pingidentity/p14c.access_token | cut -d= -f1)
}

## p1env
function p1env () 
{
    sourcePingIdentityFiles

cat <<EOP1ENV
+-----------------------------------------------------------------------------------------+
              ${bold}Ping One for Environment${normal}
              ${bold}Sourced from ~/.pingidentity/p14c.*${normal}
+-----------------------------------------------------------------------------------------+
              Environment: ${PING_ONE_ENVIRONMENT_ID}
               Population: ${PING_ONE_POPULATION_ID}
              Application: ${PING_ONE_CLIENT_ID}
+-----------------------------------------------------------------------------------------+
    Auth URL: ${PING_ONE_AUTH_URL}
     API URL: ${PING_ONE_API_URL}
  Auth Token: `grep "# Expires" ~/.pingidentity/p14c.access_token`
EOP1ENV
    which pyjwt >/dev/null && pyjwt decode --no-verify ${PING_ONE_AUTH_TOKEN} | jq
    echo "+-----------------------------------------------------------------------------------------+"
}

## _p14c
function _p14c()
{
  _RESOURCE="$1"
  _ATTR="$2"
  _ID="$3"  

  sourcePingIdentityFiles

  test -z "$PING_ONE_AUTH_TOKEN" && echo "No PingOne For Customer Auth Token found, please authenticate with 'p1auth'"

  test -z "${_ATTR}" && _JQ_OPT="."
  test ! -z "${_ATTR}" && _JQ_OPT="-r .${_ATTR}"
  _URL="${PING_ONE_API_URL}"

  case ${_RESOURCE} in
    environments)
        ;;
    populations)
        _URL+="/populations/${PING_ONE_POPULATION_ID}"
        ;;
    applications)
        _URL+="/applications/${PING_ONE_CLIENT_ID}"
        ;;
    users)
        _URL+="/users"
        ;;
    *)
        _URL+="${_RESOURCE}"
        ;;
  esac
  test ! -z ${_ID} && _URL+="/${_ID}"
  # echo "PingOne For Customer URL: ${bold}$_URL ${normal}"
  curl -X GET -H "Authorization: Bearer $PING_ONE_AUTH_TOKEN" "${_URL}" \
    2>/dev/null | jq $_JQ_OPT  
}

function p1auth()
{
  sourcePingIdentityFiles

  _AUTH=$( curl -X POST $PING_ONE_AUTH_URL/as/token \
    -H "Content-Type: application/x-www-form-urlencoded" \
    -d "grant_type=client_credentials&client_id=${PING_ONE_CLIENT_ID}&client_secret=${PING_ONE_CLIENT_SECRET}" \
    2> /dev/null )

  _TOKEN=$( echo ${_AUTH} | jq -r '.access_token' ) 
  _EXPIRES=$( echo ${_AUTH} | jq -r '.expires_in' ) 
 
  echo "########################################################################
# Ping One Access Token
#
# Created: `date`
# Expires: `date -v+${_EXPIRES}S`
########################################################################
PING_ONE_AUTH_TOKEN=$_TOKEN" > ~/.pingidentity/p14c.access_token

  . ~/.pingidentity/p14c.access_token

  p1env
}


alias p1e="_p14c environments" 
alias p1en="_p14c environments name"

alias p1p="_p14c populations" 
alias p1pn="_p14c populations name"
alias p1pc="_p14c populations userCount"

alias p1a="_p14c applications"
alias p1an="_p14c applications name"

alias p1u="_p14c users"
alias p1ui="_p14c users _embedded.users[].id"

alias p14c="_p14c"

##############################################################################
# Aliases of commonly used PingIdentity For Customer commands
##############################################################################

get_value ()
{
    # the following will preserve spaces in the printf
    IFS="%%"
    eval printf '%s' "\${${1}}"
    unset IFS
}


