version: "3.3"

services:
  pingfederate:
    image: pingidentity/pingfederate:${PING_IDENTITY_DEVOPS_TAG}
    command: wait-for pingdirectory:389 -t 800 -- entrypoint.sh start-server
    environment:
      - SERVER_PROFILE_URL=https://github.com/pingidentity/pingidentity-devops-getting-started.git
      - SERVER_PROFILE_PATH=11-docker-compose/11-siem-stack/baseline/pingfederate
      - PF_LOG_LEVEL=DEBUG
      - SOCKET_HOST=logstash
      - SOCKET_PORT_SYSTEM=20513
      - SOCKET_PORT_AUDIT=20514
      - SOCKET_PROTOCOL=TCP
    env_file:
      - ~/.pingidentity/devops
    ports:
      - "9031:9031"
      - "9999:9999"
    networks:
      - pingnet
    depends_on:
      - pingdirectory
#   Use this volume mount to test local configurations
#   volumes:
#     - ./baseline/pingfederate:/opt/in

  pingaccess:
    image: pingidentity/pingaccess:${PING_IDENTITY_DEVOPS_TAG}
    command: wait-for pingdirectory:389 -t 800 -- entrypoint.sh start-server
    environment:
      - SERVER_PROFILE_URL=https://github.com/pingidentity/pingidentity-devops-getting-started.git
      - SERVER_PROFILE_PATH=11-docker-compose/11-siem-stack/baseline/pingaccess
      - PA_LOG_LEVEL=DEBUG
      - SOCKET_HOST=logstash 
      - SOCKET_PORT_SYSTEM=20516
      - SOCKET_PORT_AUDIT=20517
      - SOCKET_PROTOCOL=TCP
    env_file:
      - ~/.pingidentity/devops
    ports:
      - "9000:9000"
      - "3000:3000"
    networks:
      - pingnet
    depends_on:
      - pingdirectory
#   Use this volume mount to test local configurations
#   volumes:
#     - ./baseline/pingaccess:/opt/in

  pingdirectory:
    image: pingidentity/pingdirectory:${PING_IDENTITY_DEVOPS_TAG}
    environment:
      - SERVER_PROFILE_URL=https://github.com/pingidentity/pingidentity-devops-getting-started.git
      - SERVER_PROFILE_PATH=11-docker-compose/11-siem-stack/baseline/pingdirectory
      - ES_ADMIN_PD_USER_PASS=$ES_ADMIN_PD_USER_PASS
    env_file:
      - ~/.pingidentity/devops
    ports:
      - "1636:636"
      - "1443:443"
    networks:
      - pingnet      
  
# TEST AUTHENTICATORS (LOAD)
  authrate_ok:
    image: pingidentity/ldap-sdk-tools
    command: wait-for pingdirectory:389 -t 900 -- authrate -h pingdirectory -p 389 -D cn=administrator -w 2FederateM0re -b dc=example,dc=com -f "(uid=user.[0-4])" -C 2FederateM0re -r 4000
    networks:
      - pingnet

  authrate_ko:
    image: pingidentity/ldap-sdk-tools
    command: wait-for pingdirectory:389 -t 900 -- authrate -h pingdirectory -p 389 -D cn=administrator -w 2FederateM0re -b dc=example,dc=com -f "(uid=user.[0-4])" -C badPassword -r 3000
    networks:
      - pingnet
#END TEST AUTHENTICATORS (LOAD)

#ES Server 1
  es01:
    hostname: es01
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_VERSION
    container_name: es01
    environment:
      - node.name=es01
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
      - xpack.license.self_generated.type=trial
      - xpack.monitoring.collection.enabled=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=/usr/share/elasticsearch/config/certificates/es01/es01.key
      - xpack.security.http.ssl.certificate_authorities=/usr/share/elasticsearch/config/certificates/ca/ca.crt
      - xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/certificates/es01/es01.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=/usr/share/elasticsearch/config/certificates/ca/ca.crt
      - xpack.security.transport.ssl.certificate=/usr/share/elasticsearch/config/certificates/es01/es01.crt
      - xpack.security.transport.ssl.key=/usr/share/elasticsearch/config/certificates/es01/es01.key
      - xpack.security.authc.realms.native.realm1.order=2
      - xpack.security.authc.realms.ldap.ldap1.order=1
      - xpack.security.authc.realms.ldap.ldap1.url=ldaps://pingdirectory:636
      - xpack.security.authc.realms.ldap.ldap1.user_search.base_dn=ou=people,dc=example,dc=com
      - xpack.security.authc.realms.ldap.ldap1.group_search.base_dn=dc=example,dc=com
      - xpack.security.authc.realms.ldap.ldap1.ssl.verification_mode=none
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
      memlock:
        soft: -1
        hard: -1
    volumes: 
      - data01:/usr/share/elasticsearch/data
      - certs:/usr/share/elasticsearch/config/certificates
      - ./elasticsearch-siem/ping_siem_config_bootstrap:/usr/share/elasticsearch/bootstrap
    ports:
      - "9201:9200"
    healthcheck:
      test: curl --cacert /usr/share/elasticsearch/config/certificates/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
      - pingnet

#ES Server 2
  es02:
    hostname: es02
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_VERSION
    container_name: es02
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
      - xpack.license.self_generated.type=trial
      - xpack.monitoring.collection.enabled=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=/usr/share/elasticsearch/config/certificates/es02/es02.key
      - xpack.security.http.ssl.certificate_authorities=/usr/share/elasticsearch/config/certificates/ca/ca.crt
      - xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/certificates/es02/es02.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=/usr/share/elasticsearch/config/certificates/ca/ca.crt
      - xpack.security.transport.ssl.certificate=/usr/share/elasticsearch/config/certificates/es02/es02.crt
      - xpack.security.transport.ssl.key=/usr/share/elasticsearch/config/certificates/es02/es02.key
      - xpack.security.authc.realms.native.realm1.order=2
      - xpack.security.authc.realms.ldap.ldap1.order=1
      - xpack.security.authc.realms.ldap.ldap1.url=ldaps://pingdirectory:636
      - xpack.security.authc.realms.ldap.ldap1.user_search.base_dn=ou=people,dc=example,dc=com
      - xpack.security.authc.realms.ldap.ldap1.group_search.base_dn=ou=Groups,dc=example,dc=com
      - xpack.security.authc.realms.ldap.ldap1.ssl.verification_mode=none
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
      memlock:
        soft: -1
        hard: -1
    volumes: 
      - data02:/usr/share/elasticsearch/data
      - certs:/usr/share/elasticsearch/config/certificates
      - ./elasticsearch-siem/ping_siem_config_bootstrap:/usr/share/elasticsearch/bootstrap
    ports:
      - "9202:9200"
    healthcheck:
      test: curl --cacert /usr/share/elasticsearch/config/certificates/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
    - pingnet

#Generate Certificates if not already on disk, then run the saved state loader to push saved templates and objects into both kibana and elasticsearch
  configure_es_certs_state:
    hostname: configure_es_certs_state
    container_name: configure_es_certs_state
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_VERSION
    environment:
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
    command: >
      bash -c '
        if [[ ! -f /certs/bundle.zip ]]; then
          bin/elasticsearch-certutil cert --silent --pem --in config/certificates/instances.yml -out /certs/bundle.zip;
          unzip /certs/bundle.zip -d /certs;
        fi;
        chown -R 1000:0 /certs

        sh /usr/share/elasticsearch/config/bootstrap/saved_state_loader.sh
      '
    user: "0"
    working_dir: /usr/share/elasticsearch
    volumes: 
      - certs:/certs
      - ./elasticsearch-siem/cert_config:/usr/share/elasticsearch/config/certificates
      - ./elasticsearch-siem/kibana_config:/usr/share/elasticsearch/config/kibana_config
      - ./elasticsearch-siem/ping_siem_config_bootstrap:/usr/share/elasticsearch/config/bootstrap
      - ./elasticsearch-siem/watchers:/usr/share/elasticsearch/watchers
      - ./elasticsearch-siem/ilm_policies:/usr/share/elasticsearch/ilm_policies
      - ./elasticsearch-siem/index_bootstraps:/usr/share/elasticsearch/index_bootstraps
      - ./elasticsearch-siem/index_templates:/usr/share/elasticsearch/index_templates
      - ./elasticsearch-siem/role_bootstraps:/usr/share/elasticsearch/role_bootstraps
    networks:
      - pingnet

#Service that runs and updates both Known TOR and Known Malicious IPs for log enrichment.
  enrichment_service:
    hostname: enrichment_service
    container_name: enrichment_service
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    environment:
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - THREAT_INTEL_PULL_INTERVAL=600
    command: > 
      bash -c '
        sh /usr/share/elasticsearch/config/bootstrap/dep_install.sh
        sh /usr/share/elasticsearch/config/bootstrap/enrichment_wrapper.sh
      '
    user: "0"
    working_dir: /usr/share/elasticsearch
    volumes: 
      - ./elasticsearch-siem/ping_siem_config_bootstrap:/usr/share/elasticsearch/config/bootstrap
      - ./elasticsearch-siem/enrichment_cache:/usr/share/elasticsearch/enrichment
    networks:
      - pingnet
    depends_on:
      - es01
      - es02

#Logstash system is how log4j ships logs into the stack.
  logstash:
    hostname: logstash
    image: docker.elastic.co/logstash/logstash:$ELASTIC_VERSION
    ports:
      - "9600:9600"
      - "20513:20513"
      - "20514:20514"
      - "20516:20515"
      - "20517:20516"
      - "20518:20517"
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./elasticsearch-siem/logstash/conf.d:/etc/logstash/conf.d/logstash.conf
      - certs:/usr/share/elasticsearch/config/certificates
      - ./elasticsearch-siem/enrichment_cache:/etc/logstash/enrichment
      - ./elasticsearch-siem/search_templates:/etc/logstash/templates
      - ./elasticsearch-siem/ping_siem_config_bootstrap:/etc/logstash/bootstrap
    environment:
      - "LS_JAVA_OPTS=-Xmx1g -Xms1g"
      - CONFIG_RELOAD_AUTOMATIC=true
      - CONFIG_RELOAD_INTERVAL=5s
      - LOG_FORMAT=json
      - LOG_LEVEL=info
      - NODE_NAME=logstash
      - XPACK_MANAGEMENT_ENABLED=false
      - XPACK_MONITORING_ENABLED=true
      - XPACK_MONITORING_ELASTICSEARCH_USERNAME=elastic
      - XPACK_MONITORING_ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - XPACK_MONITORING_ELASTICSEARCH_HOSTS="https://es01:9200"
      - XPACK_MONITORING_ELASTICSEARCH_SSL_CERTIFICATE_AUTHORITY=/usr/share/elasticsearch/config/certificates/es01/es01.crt
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - CERTS_DIR=/usr/share/elasticsearch/config/certificates
    networks:
      - pingnet

#Kibana System for visuilizations etc.
  kibana:
    hostname: kibana
    image: docker.elastic.co/kibana/kibana:$ELASTIC_VERSION
    container_name: kibana
    environment:
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=$ELASTIC_PASSWORD
      - ELASTICSEARCH_HOSTS="https://es01:9200"
      - SERVER_PORT=5601
      - SERVER_HOST=0.0.0.0
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/elasticsearch/config/certificates/ca/ca.crt
      - XPACK_MONITORING_ENABLED=true
      - SERVER_NAME=ping-kibana
      - SERVER_SSL_ENABLED=true
      - SERVER_SSL_CERTIFICATE=/usr/share/elasticsearch/config/certificates/kibana/kibana.crt
      - SERVER_SSL_KEY=/usr/share/elasticsearch/config/certificates/kibana/kibana.key
      - CERTS_DIR=/usr/share/elasticsearch/config/certificates
    volumes:
      - certs:/usr/share/elasticsearch/config/certificates    
    ports:
      - "5601:5601"
    networks:
      - pingnet

#private operating network
networks:
  pingnet:

#Persistant volumes for ES01 / ES02 (DATA) and the Certificates
volumes:
  data01:
    driver: local
  data02:
    driver: local
  certs:
    driver: local
