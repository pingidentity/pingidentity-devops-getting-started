version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  front-tier:
  back-tier:

services:

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./configs/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    networks:
      - back-tier
    restart: always
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./configs/alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}
  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana
    user: "104"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      # - grafana_data:/var/lib/grafana
      - ./configs/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./configs/grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always

  pingdirectory:
    image: pingidentity/pingdirectory:${PING_IDENTITY_DEVOPS_TAG}
    environment:
      - SERVER_PROFILE_URL=https://github.com/pingidentity/pingidentity-server-profiles.git
      - SERVER_PROFILE_PATH=baseline/pingdirectory
      - PING_IDENTITY_ACCEPT_EULA=YES
    env_file:
      - ~/.pingidentity/devops
    volumes:
      - ./configs/pingdirectory/pd.profile/dsconfig:/opt/in/pd.profile/dsconfig
    #   - ${HOME}/projects/devops/volumes/replicated-pair.pingdirectory:/opt/out
    #   - ${HOME}/projects/devops/pingidentity-server-profiles/baseline/pingdirectory:/opt/in:ro
    networks:
      - back-tier
    ulimits:
      nproc:
        soft: 16384
        hard: 16384
      nofile:
        soft: 65535
        hard: 65535
    ports:
      - 1389:389
      - 1636:636
      - 1443:443

  pingdirectory-statsd-exporter:
    image: prom/statsd-exporter:v0.14.1
    command: [ "--statsd.mapping-config=/tmp/mapping/pingdirectory-statsd-mapping.yml", "--statsd.listen-udp=:9125", "--web.listen-address=:9102"]
    volumes:
      - ./configs/statsd-exporter/pingdirectory-statsd-mapping.yml:/tmp/mapping/pingdirectory-statsd-mapping.yml
    ports:
      - 9102:9102
    networks:
      - back-tier