{"config":{"lang":["en"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/devops-landing-page.html.</p>"},{"location":"contact-us/community/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/contact-us/community.html.</p>"},{"location":"contact-us/contributing/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/contact-us/contributing.html.</p>"},{"location":"deployment/deployCompose/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deployCompose.html.</p>"},{"location":"deployment/deployFullK8s/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deployFullK8s.html.</p>"},{"location":"deployment/deployHelm/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deployHelm.html.</p>"},{"location":"deployment/deployHelmLocalIngress/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deployHelmLocalIngress.html.</p>"},{"location":"deployment/deployK8s-AKS/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deployK8s-AKS.html.</p>"},{"location":"deployment/deployK8s-AWS/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deployK8s-AWS.html.</p>"},{"location":"deployment/deployK8sCloud/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deployK8sCloud.html.</p>"},{"location":"deployment/deployK8sClusterMetrics/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deployK8sClusterMetrics.html.</p>"},{"location":"deployment/deployK8sUtilitySidecar/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deployK8sUtilitySidecar.html.</p>"},{"location":"deployment/deployLocalK8sCluster/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deployLocalK8sCluster.html.</p>"},{"location":"deployment/deployLocalOpenshift/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deployLocalOpenshift.html.</p>"},{"location":"deployment/deployPACluster/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deployPACluster.html.</p>"},{"location":"deployment/deployPDMultiRegion/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deployPDMultiRegion.html.</p>"},{"location":"deployment/deployPDProxyBackendDiscovery/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deployPDProxyBackendDiscovery.html.</p>"},{"location":"deployment/deployPFMultiRegion/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deployPFMultiRegion.html.</p>"},{"location":"deployment/deploymentPatterns/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/deploymentPatterns.html.</p>"},{"location":"deployment/introduction/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/introduction.html.</p>"},{"location":"deployment/k8sClusterSizing/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/k8sClusterSizing.html.</p>"},{"location":"deployment/pingDataEnvironmentConsiderations/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/pingDataEnvironmentConsiderations.html.</p>"},{"location":"deployment/restorePDMultiRegionSeedFailure/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/deployment/restorePDMultiRegionSeedFailure.html.</p>"},{"location":"docker-builds/","title":"Ping docker-builds Repository Summary","text":"<p>Using the repository</p> <p>This page only describes the repository structure for context and understanding. For instructions on using the repository to build an image, visit this page.</p> <p>In the docker-builds Github repository, we share our Dockerfiles and automation scripts used for building Ping product container images.  You can use these scripts and supporting pieces found in the repository to build an image of your own locally.  For example, you can use this process to build an image for an older version we no longer provide on Docker Hub.</p> <p>The image build process at Ping uses the Docker multi-stage build process.  In summary, we build out image layers that are common to most or all of our products, and from those we add layers to refine and create the image for each product.  In doing so, we ensure that all of our product container images have a similar structure.  For example, all Ping products written in Java use the same Java runtime version in our images, since each product container image has the same JVM base image.</p> <p>As you explore the repository, you will find directories for building each product and supporting image, each with a Dockerfile and supporting scripts.  As these are layered, they build out a complete product image for use in Kubernetes or another container orchestration environment.  For the most part, each directory represents the source for an image, whether a final product image or an intermediate layer.  </p>"},{"location":"docker-builds/#filesystem-layout","title":"Filesystem layout","text":"<p>The repository includes the following directories. This list is not comprehensive; it is focused on those folders of relevance to users:</p> <p>Highlighting</p> <p>The template used for this portal renders a highlight when you hover on a row in a table.  This action is expected, but the rows are not linked in any fashion.</p>"},{"location":"docker-builds/#non-image-related","title":"Non-image related","text":"Repository Directory Description ci_scripts Files and scripts used for building container images, both in an automated build pipeline and local use"},{"location":"docker-builds/#image-directories","title":"Image directories","text":"Repository Directory Description ldap-sdk-tools Files and scripts for an image with LDAP SDK tools available for use with Ping Directory pingbase Base OS, default environment variables, volumes, healthcheck and entrypoint command definitions.  This image provides a base to all Ping Identity container images pingcommon Files and scripts used with all Ping Identity container images pingdatacommon Files and scripts used with all PingData container images (i.e. PingDirectory, PingDataSync, etc.) pingjvm Files and scripts for creating the JVM image that is the foundation for most Ping product container images pingaccess Product-specific files and scripts for PingAccess container image pingauthorize Product-specific files and scripts for PingAuthorize container image pingauthorizepap Product-specific files and scripts for PingAuthorize Policy Editor container image pingcentral Product-specific files and scripts for PingCentral container image pingdataconsole Product-specific files and scripts for Ping Data Console container image pingdatasync Product-specific files and scripts for PingDataSync container image pingdelegator Product-specific files and scripts for PingDelegator container image pingdirectory Product-specific files and scripts for PingDirectory container image pingdirectoryproxy Product-specific files and scripts for PingDirectory Proxy container image pingfederate Product-specific files and scripts for PingFederate container image pingintelligence Product-specific files and scripts for PingIntelligence container image pingtoolkit Files and scripts for a utility image, typically used for an init or task-related container"},{"location":"docker-builds/DOCKER_BUILDS_HOOKS/","title":"Docker Builds - Hooks","text":"<p>Audience - Operators of DevOps Cloud environments. Not intended for Developers and admins of the Ping Identity products.</p> <p>Description - This document describes the many number of scripts that are called in during the lifecycle of a Ping Identity docker image from the initial <code>entrypoint.sh</code> script.</p> <p>Included with the base docker images, there is an example/stub provided for all possible hooks. It is very important that these names be used if a developer wishes to make subtle changes to their server-profile.</p> <p>The full ordered list of scripts that are called depending on what type of image (i.e. pingdirectory or pingdatasync) are:</p> <p></p>"},{"location":"docker-builds/DOCKER_BUILDS_HOOKS/#hooks-details","title":"Hooks Details","text":"<p>Details on hooks can be found within the code of each hook in the Docker-Builds Repo as well in <code>pingidentity-devops-getting-started/docs/docker-images/&lt;image_name&gt;/hooks</code> for each of the products images.</p>"},{"location":"docker-images/","title":"Index","text":"<p>See Using release tags for more information.</p>"},{"location":"docker-images/dockerImageSecurity/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/docker-images/dockerImageSecurity.html.</p>"},{"location":"docker-images/dockerImagesRef/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/docker-images/dockerImagesRef.html.</p>"},{"location":"docker-images/imageSupport/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/docker-images/imageSupport.html.</p>"},{"location":"docker-images/productVersionMatrix/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/docker-images/productVersionMatrix.html.</p>"},{"location":"docker-images/releaseTags/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/docker-images/releaseTags.html.</p>"},{"location":"docker-images/apache-jmeter/","title":"Ping Identity DevOps Docker Image - `apache-jmeter`","text":""},{"location":"docker-images/apache-jmeter/#environment-variables","title":"Environment Variables","text":"<p>The following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description SHIM ${SHIM} IMAGE_VERSION ${IMAGE_VERSION} IMAGE_GIT_REV ${IMAGE_GIT_REV} DATE ${DATE} PING_PRODUCT_VERSION ${VERSION} PING_PRODUCT Apache-JMeter Ping product name JAVA_RAM_PERCENTAGE 90.0 Percentage of the container memory to allocate to PingFederate JVM DO NOT set to 100% or your JVM will exit with OutOfMemory errors and the container will terminate STARTUP_COMMAND ${SERVER_ROOT_DIR}/bin/run.sh The command that the entrypoint will execute in the foreground to instantiate the container"},{"location":"docker-images/apache-jmeter/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all apache-jmeter hook scripts</p> <p>This document is auto-generated from apache-jmeter/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/apache-jmeter/hooks/","title":"Ping Identity DevOps <code>apache-jmeter</code> Hooks","text":"<p>List of available hooks: * 04-check-variables.sh * 17-check-license.sh * LICENSE</p> <p>These hooks will replace hooks defined by parent images (i.e. pingcommon/pingdatacommon)</p> <p>This document is auto-generated from apache-jmeter/opt/staging/hooks</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/apache-jmeter/hooks/04-check-variables.sh/","title":"Ping Identity DevOps <code>apache-jmeter</code> Hook - <code>04-check-variables.sh</code>","text":"<p>This document is auto-generated from apache-jmeter/opt/staging/hooks/04-check-variables.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/apache-jmeter/hooks/17-check-license.sh/","title":"Ping Identity DevOps <code>apache-jmeter</code> Hook - <code>17-check-license.sh</code>","text":"<p>This document is auto-generated from apache-jmeter/opt/staging/hooks/17-check-license.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/apache-jmeter/hooks/LICENSE/","title":"Ping Identity DevOps <code>apache-jmeter</code> Hook - <code>LICENSE</code>","text":"<p>This document is auto-generated from apache-jmeter/opt/staging/hooks/LICENSE</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/ldap-sdk-tools/","title":"Ping Identity Docker Image - <code>ldap-sdk-tools</code>","text":"<p>This docker image provides an alpine image with the LDAP Client SDK tools to be used against other PingDirectory instances.</p>"},{"location":"docker-images/ldap-sdk-tools/#related-docker-images","title":"Related Docker Images","text":"<ul> <li><code>openjdk:8-jre8-alpine</code> - Alpine server to run LDAP SDK Tools from</li> </ul>"},{"location":"docker-images/ldap-sdk-tools/#environment-variables","title":"Environment Variables","text":"<p>The following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description SHIM ${SHIM} IMAGE_VERSION ${IMAGE_VERSION} IMAGE_GIT_REV ${IMAGE_GIT_REV} DATE ${DATE} PING_PRODUCT_VERSION ${VERSION} PATH /opt/tools:${PATH} PING_PRODUCT ldap-sdk-tools Ping product name"},{"location":"docker-images/ldap-sdk-tools/#list-all-available-tools","title":"List all available tools","text":"<p><code>docker run -it --rm pingidentity/ldap-sdk-tools:edge ls</code></p>"},{"location":"docker-images/ldap-sdk-tools/#use-ldapsearch","title":"Use LDAPSearch","text":""},{"location":"docker-images/ldap-sdk-tools/#get-some-help","title":"Get some help","text":"<p><code>docker run -it --rm pingidentity/ldap-sdk-tools:edge ldapsearch --help</code></p>"},{"location":"docker-images/ldap-sdk-tools/#simple-search","title":"Simple search","text":"<pre><code>docker run -it --rm pingidentity/ldap-sdk-tools:edge \\\n    ldapsearch \\\n        -b dc=example,dc=com \\\n        -p 1389 \"(objectClass=*)\"\n</code></pre>"},{"location":"docker-images/ldap-sdk-tools/#save-output-to-host-file","title":"Save output to host file","text":"<pre><code>docker run -it --rm \\\n    -v /tmp:/opt/out \\\n    pingidentity/ldap-sdk-tools:edge \\\n    ldapsearch \\\n        --baseDN dc=example,dc=com \\\n        --port 1389 \\\n        --outputFormat json \"(objectClass=*)\" &gt;/tmp/search-result.json\n</code></pre>"},{"location":"docker-images/ldap-sdk-tools/#use-manage-certificates","title":"Use manage-certificates","text":""},{"location":"docker-images/ldap-sdk-tools/#trusting-certificates","title":"trusting certificates","text":"<pre><code>PWD=2FederateM0re\nmkdir -p /tmp/hibp\ndocker run -it --rm \\\n  -v /tmp/hibp:/opt/out \\\n  pingidentity/ldap-sdk-tools:edge \\\n  manage-certificates trust-server-certificate \\\n    --hostname haveibeenpwned.com \\\n    --port 1443 \\\n    --keystore /opt/out/hibp-2019.jks \\\n    --keystore-password ${PWD}\nls -all /tmp/hibp\nkeytool -list \\\n  -keystore /tmp/hibp/hibp-2019.jks \\\n  -storepass ${PWD}\n</code></pre>"},{"location":"docker-images/ldap-sdk-tools/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all ldap-sdk-tools hook scripts</p> <p>This document is auto-generated from ldap-sdk-tools/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/ldap-sdk-tools/hooks/","title":"Ping Identity DevOps <code>ldap-sdk-tools</code> Hooks","text":"<p>There are no default hooks defined for the <code>ldap-sdk-tools</code> image.</p> <p>Hooks defined by parent images (i.e. pingcommon/pingdatacommon) will be inherited by this image.</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingaccess/","title":"Ping Identity DevOps Docker Image - <code>pingaccess</code>","text":"<p>This docker image includes the Ping Identity PingAccess product binaries and associated hook scripts to create and run both PingAccess Admin and Engine nodes.</p>"},{"location":"docker-images/pingaccess/#related-docker-images","title":"Related Docker Images","text":"<ul> <li><code>pingidentity/pingbase</code> - Parent Image <p>This image inherits, and can use, Environment Variables from pingidentity/pingbase</p> </li> <li><code>pingidentity/pingcommon</code> - Common Ping files (i.e. hook scripts)</li> </ul>"},{"location":"docker-images/pingaccess/#environment-variables","title":"Environment Variables","text":"<p>In addition to environment variables inherited from pingidentity/pingbase, the following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description BASE ${BASE:-/opt} Location of the top level directory where everything is located in image/container ROOT_USER administrator the default administrative user for PingData JAVA_HOME /opt/java STAGING_DIR ${BASE}/staging Path to the staging area where the remote and local server profiles can be merged OUT_DIR ${BASE}/out Path to the runtime volume SERVER_ROOT_DIR ${OUT_DIR}/instance Path from which the runtime executes IN_DIR ${BASE}/in Location of a local server-profile volume SERVER_BITS_DIR ${BASE}/server Path to the server bits BAK_DIR ${BASE}/backup Path to a volume generically used to export or backup data LOGS_DIR ${BASE}/logs Path to a volume generically used for logging PING_IDENTITY_ACCEPT_EULA NO Must be set to 'YES' for the container to start PING_IDENTITY_DEVOPS_FILE devops-secret File name for devops-creds passed as a Docker secret STAGING_MANIFEST ${BASE}/staging-manifest.txt Path to a manifest of files expected in the staging dir on first image startup CLEAN_STAGING_DIR false Whether to clean the staging dir when the image starts SECRETS_DIR /run/secrets Default path to the secrets TOPOLOGY_FILE ${STAGING_DIR}/topology.json Path to the topology file HOOKS_DIR ${STAGING_DIR}/hooks Path where all the hooks scripts are stored CONTAINER_ENV ${STAGING_DIR}/.env Environment Property file use to share variables between scripts in container SERVER_PROFILE_DIR /tmp/server-profile Path where the remote server profile is checked out or cloned before being staged prior to being applied on the runtime SERVER_PROFILE_URL A valid git HTTPS URL (not ssh) SERVER_PROFILE_URL_REDACT true When set to \"true\", the server profile git URL will not be printed to container output. SERVER_PROFILE_BRANCH A valid git branch (optional) SERVER_PROFILE_PATH The subdirectory in the git repo SERVER_PROFILE_UPDATE false Whether to update the server profile upon container restart SECURITY_CHECKS_STRICT false Requires strict checks on security SECURITY_CHECKS_FILENAME .jwk .pin Perform a check for filenames that may violate security (i.e. secret material) UNSAFE_CONTINUE_ON_ERROR If this is set to true, then the container will provide a hard warning and continue. LICENSE_DIR ${SERVER_ROOT_DIR} License directory PD_LICENSE_DIR ${STAGING_DIR}/pd.profile/server-root/pre-setup PD License directory. Separating from above LICENSE_DIR to differentiate for different products STARTUP_FOREGROUND_OPTS The command-line options to provide to the the startup command when the container starts with the server in the foreground. This is the normal start flow for the container STARTUP_BACKGROUND_OPTS The command-line options to provide to the the startup command when the container starts with the server in the background. This is the debug start flow for the container PING_IDENTITY_DEVOPS_KEY_REDACT true TAIL_LOG_FILES A whitespace separated list of log files to tail to the container standard output - DO NOT USE WILDCARDS like /path/to/logs/*.log COLORIZE_LOGS true If 'true', the output logs will be colorized with GREENs and REDs, otherwise, no colorization will be done.  This is good for tools that monitor logs and colorization gets in the way. LOCATION Docker Location default value If PingDirectory is deployed in multi cluster mode, that is, K8S_CLUSTER, K8S_CLUSTERS and K8S_SEED_CLUSTER are defined, LOCATION is ignored and K8S_CLUSTER is used as the location LOCATION_VALIDATION true Any string denoting a logical/physical location MAX_HEAP_SIZE 384m Heap size (for java products) JVM_TUNING AGGRESSIVE JAVA_RAM_PERCENTAGE 75.0 Percentage of the container memory to allocate to PingFederate JVM DO NOT set to 100% or your JVM will exit with OutOfMemory errors and the container will terminate VERBOSE false Triggers verbose messages in scripts using the set -x option. PING_DEBUG false Set the server in debug mode, with increased output PING_PRODUCT The name of Ping product, i.e. PingFederate, PingDirectory - must be a valid Ping product type. This variable should be overridden by child images. PING_PRODUCT_VALIDATION true i.e. PingFederate,PingDirectory ADDITIONAL_SETUP_ARGS List of setup arguments passed to Ping Data setup-arguments.txt file LDAP_PORT 1389 Port over which to communicate for LDAP LDAPS_PORT 1636 Port over which to communicate for LDAPS HTTPS_PORT 1443 Port over which to communicate for HTTPS JMX_PORT 1689 Port for monitoring over JMX protocol ORCHESTRATION_TYPE The type of orchestration tool used to run the container, normally set in the deployment (.yaml) file.  Expected values include: - compose - swarm - kubernetes Defaults to blank (i.e. No type is set) USER_BASE_DN dc=example,dc=com Base DN for user data DOLLAR '$' Variable with a literal value of '$', to avoid unwanted variable substitution PD_ENGINE_PUBLIC_HOSTNAME localhost PD (PingDirectory) public hostname that may be used in redirects PD_ENGINE_PRIVATE_HOSTNAME pingdirectory PD (PingDirectory) private hostname PDP_ENGINE_PUBLIC_HOSTNAME localhost PDP (PingDirectoryProxy) public hostname that may be used in redirects PDP_ENGINE_PRIVATE_HOSTNAME pingdirectoryproxy PDP (PingDirectoryProxy) private hostname PDS_ENGINE_PUBLIC_HOSTNAME localhost PDS (PingDataSync) public hostname that may be used in redirects PDS_ENGINE_PRIVATE_HOSTNAME pingdatasync PDS (PingDataSync) private hostname PAZ_ENGINE_PUBLIC_HOSTNAME localhost PAZ (PingAuthorize) public hostname that may be used in redirects PAZ_ENGINE_PRIVATE_HOSTNAME pingauthorize PAZ (PingAuthorize) private hostname PAZP_ENGINE_PUBLIC_HOSTNAME localhost PAZP (PingAuthorize-PAP) public hostname that may be used in redirects PAZP_ENGINE_PRIVATE_HOSTNAME pingauthorizepap PAZP (PingAuthorize-PAP) private hostname PF_ENGINE_PUBLIC_HOSTNAME localhost PF (PingFederate) engine public hostname that may be used in redirects PF_ENGINE_PRIVATE_HOSTNAME pingfederate PF (PingFederate) engine private hostname PF_ADMIN_PUBLIC_BASEURL https://localhost:9999 PF (PingFederate) admin public baseurl that may be used in redirects PF_ADMIN_PUBLIC_HOSTNAME localhost PF (PingFederate) admin public hostname that may be used in redirects PF_ADMIN_PRIVATE_HOSTNAME pingfederate-admin PF (PingFederate) admin private hostname PA_ENGINE_PUBLIC_HOSTNAME localhost PA (PingAccess) engine public hostname that may be used in redirects PA_ENGINE_PRIVATE_HOSTNAME pingaccess PA (PingAccess) engine private hostname PA_ADMIN_PUBLIC_HOSTNAME localhost PA (PingAccess) admin public hostname that may be used in redirects PA_ADMIN_PRIVATE_HOSTNAME pingaccess-admin PA (PingAccess) admin private hostname ROOT_USER_DN cn=${ROOT_USER} DN of the server root user ENV ${BASE}/.profile PS1 \\${PING_PRODUCT}:\\h:\\w\\n&gt; Default shell prompt (i.e. productName:hostname:workingDir) PATH ${JAVA_HOME}/bin:${BASE}:${SERVER_ROOT_DIR}/bin:${PATH} PATH used by the container SHIM ${SHIM} IMAGE_VERSION ${IMAGE_VERSION} IMAGE_GIT_REV ${IMAGE_GIT_REV} DATE ${DATE} PING_PRODUCT_VERSION ${VERSION} PING_PRODUCT PingAccess Ping product name LICENSE_DIR ${SERVER_ROOT_DIR}/conf License directory LICENSE_FILE_NAME pingaccess.lic Name of license file LICENSE_SHORT_NAME PA Short name used when retrieving license from License Server LICENSE_VERSION ${LICENSE_VERSION} Version used when retrieving license from License Server OPERATIONAL_MODE STANDALONE PA_RUN_PA_OPERATIONAL_MODE will override this value for PingAccess 7.3 and later. PA_ADMIN_PASSWORD_INITIAL 2Access PING_IDENTITY_PASSWORD 2FederateM0re Specify a password for administrator user for interaction with admin API STARTUP_COMMAND ${SERVER_ROOT_DIR}/bin/run.sh The command that the entrypoint will execute in the foreground to instantiate the container TAIL_LOG_FILES ${SERVER_ROOT_DIR}/log/pingaccess.log Files tailed once container has started PA_ADMIN_PORT 9000 Default port for PA Admin API and console Ignored when using PingIdentity Helm charts PA_ADMIN_CLUSTER_PORT 9090 Default port when clustering PA primary administrative node Ignored when using PingIdentity Helm charts JAVA_RAM_PERCENTAGE 60.0 Percentage of the container memory to allocate to PingAccess JVM DO NOT set to 100% or your JVM will exit with OutOfMemory errors and the container will terminate FIPS_MODE_ON false Turns on FIPS mode (currently with the Bouncy Castle FIPS provider) set to exactly \"true\" lowercase to turn on set to anything else to turn off PA_FIPS_MODE_PA_FIPS_MODE will override this for PingAccess 7.3 and later. SHOW_LIBS_VER true Defines a variable to allow showing library versions in the output at startup default to true SHOW_LIBS_VER_PRE_PATCH false Defines a variable to allow showing library version prior to patches being applied default to false This is helpful to ensure that the patch process updates all libraries affected PA_ENGINE_PORT 3000 ADMIN_WAITFOR_TIMEOUT 300 wait-for timeout for 80-post-start.sh hook script How long to wait for the PA Admin console to be available"},{"location":"docker-images/pingaccess/#ports-exposed","title":"Ports Exposed","text":"<p>The following ports are exposed from the container.  If a variable is used, then it may come from a parent container</p> <ul> <li>${PA_ADMIN_PORT}</li> <li>${PA_ENGINE_PORT}</li> <li>${HTTPS_PORT}</li> </ul>"},{"location":"docker-images/pingaccess/#running-a-pingaccess-container","title":"Running a PingAccess container","text":"<p>To run a PingAccess container:</p> <pre><code>  docker run \\\n           --name pingaccess \\\n           --publish 9000:9000 \\\n           --publish 443:1443 \\\n           --detach \\\n           --env SERVER_PROFILE_URL=https://github.com/pingidentity/pingidentity-server-profiles.git \\\n           --env SERVER_PROFILE_PATH=getting-started/pingaccess \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER \\\n           --env PING_IDENTITY_DEVOPS_KEY \\\n           --tmpfs /run/secrets \\\n           pingidentity/pingaccess:edge\n</code></pre> <p>Follow Docker logs with:</p> <pre><code>docker logs -f pingaccess\n</code></pre> <p>If using the command above with the embedded server profile, log in with:</p> <ul> <li>https://localhost:9000</li> <li>Username: Administrator</li> <li>Password: 2FederateM0re</li> </ul>"},{"location":"docker-images/pingaccess/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all pingaccess hook scripts</p> <p>This document is auto-generated from pingaccess/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingaccess/hooks/","title":"Ping Identity DevOps <code>pingaccess</code> Hooks","text":"<p>List of available hooks: * 04-check-variables.sh.pre * 20-restart-sequence.sh.pre * 50-before-post-start.sh * 51-add-engine.sh * 80-post-start.sh * 81-after-start-process.sh * 83-change-password.sh * 85-import-configuration.sh * LICENSE</p> <p>These hooks will replace hooks defined by parent images (i.e. pingcommon/pingdatacommon)</p> <p>This document is auto-generated from pingaccess/opt/staging/hooks</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingaccess/hooks/04-check-variables.sh.pre/","title":"Ping Identity DevOps <code>pingaccess</code> Hook - <code>04-check-variables.sh.pre</code>","text":"<p>This document is auto-generated from pingaccess/opt/staging/hooks/04-check-variables.sh.pre</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingaccess/hooks/20-restart-sequence.sh.pre/","title":"Ping Identity DevOps <code>pingaccess</code> Hook - <code>20-restart-sequence.sh.pre</code>","text":"<p>This document is auto-generated from pingaccess/opt/staging/hooks/20-restart-sequence.sh.pre</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingaccess/hooks/50-before-post-start.sh/","title":"Ping Identity DevOps <code>pingaccess</code> Hook - <code>50-before-post-start.sh</code>","text":"<p>This is called after the start or restart sequence has finished and before  the server within the container starts</p> <p>This document is auto-generated from pingaccess/opt/staging/hooks/50-before-post-start.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingaccess/hooks/51-add-engine.sh/","title":"Ping Identity DevOps <code>pingaccess</code> Hook - <code>51-add-engine.sh</code>","text":"<p>This script is started in the background immediately before  the server within the container is started  This is useful to implement any logic that needs to occur after the  server is up and running  For example, enabling replication in PingDirectory, initializing Sync  Pipes in PingDataSync or issuing admin API calls to PingFederate or PingAccess</p> <p>This document is auto-generated from pingaccess/opt/staging/hooks/51-add-engine.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingaccess/hooks/80-post-start.sh/","title":"Ping Identity DevOps <code>pingaccess</code> Hook - <code>80-post-start.sh</code>","text":"<p>This script is used to import any configurations that are  needed after PingAccess starts</p> <p>This document is auto-generated from pingaccess/opt/staging/hooks/80-post-start.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingaccess/hooks/81-after-start-process.sh/","title":"Ping Identity DevOps <code>pingaccess</code> Hook - <code>81-after-start-process.sh</code>","text":"<p>This document is auto-generated from pingaccess/opt/staging/hooks/81-after-start-process.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingaccess/hooks/83-change-password.sh/","title":"Ping Identity DevOps <code>pingaccess</code> Hook - <code>83-change-password.sh</code>","text":"<p>This document is auto-generated from pingaccess/opt/staging/hooks/83-change-password.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingaccess/hooks/85-import-configuration.sh/","title":"Ping Identity DevOps <code>pingaccess</code> Hook - <code>85-import-configuration.sh</code>","text":"<p>This script is started in the background immediately before  the server within the container is started  This is useful to implement any logic that needs to occur after the  server is up and running  For example, enabling replication in PingDirectory, initializing Sync  Pipes in PingDataSync or issuing admin API calls to PingFederate or PingAccess</p> <p>This document is auto-generated from pingaccess/opt/staging/hooks/85-import-configuration.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingaccess/hooks/LICENSE/","title":"Ping Identity DevOps <code>pingaccess</code> Hook - <code>LICENSE</code>","text":"<p>This document is auto-generated from pingaccess/opt/staging/hooks/LICENSE</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingauthorize/","title":"Ping Identity DevOps Docker Image - <code>pingauthorize</code>","text":"<p>This docker image includes the Ping Identity PingAuthorize product binaries and associated hook scripts to create and run a PingAuthorize instance or instances.</p>"},{"location":"docker-images/pingauthorize/#related-docker-images","title":"Related Docker Images","text":"<ul> <li><code>pingidentity/pingbase</code> - Parent Image <p>This image inherits, and can use, Environment Variables from pingidentity/pingbase</p> </li> <li><code>pingidentity/pingdatacommon</code> - Common Ping files (i.e. hook scripts)</li> </ul>"},{"location":"docker-images/pingauthorize/#environment-variables","title":"Environment Variables","text":"<p>In addition to environment variables inherited from pingidentity/pingbase, the following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description SHIM ${SHIM} --shm-size 256m \\ IMAGE_VERSION ${IMAGE_VERSION} IMAGE_GIT_REV ${IMAGE_GIT_REV} DATE ${DATE} PING_PRODUCT_VERSION ${VERSION} PING_PRODUCT PingAuthorize Ping product name LICENSE_DIR ${PD_LICENSE_DIR} PD License directory. This value is set from the pingbase dockerfile LICENSE_FILE_NAME PingAuthorize.lic Name of license file LICENSE_SHORT_NAME PingAuthorize Short name used when retrieving license from License Server LICENSE_VERSION ${LICENSE_VERSION} Version used when retrieving license from License Server MAX_HEAP_SIZE 1g Minimal Heap size required for PingAuthorize STARTUP_COMMAND ${SERVER_ROOT_DIR}/bin/start-server The command that the entrypoint will execute in the foreground to instantiate the container STARTUP_FOREGROUND_OPTS --nodetach The command-line options to provide to the the startup command when the container starts with the server in the foreground. This is the normal start flow for the container STARTUP_BACKGROUND_OPTS The command-line options to provide to the the startup command when the container starts with the server in the background. This is the debug start flow for the container ROOT_USER_PASSWORD_FILE Location of file with the root user password (i.e. cn=directory manager). Defaults to /SECRETS_DIR/root-user-password ENCRYPTION_PASSWORD_FILE Location of file with the passphrase for setting up encryption Defaults to /SECRETS_DIR/encryption-password KEYSTORE_FILE Location of the keystore file containing the server certificate. If left undefined, the SECRETS_DIR will be checked for a keystore. If that keystore does not exist, the server will generate a self-signed certificate. KEYSTORE_PIN_FILE Location of the pin file for the keystore defined in KEYSTORE_FILE. You must specify a KEYSTORE_PIN_FILE when a KEYSTORE_FILE is present. This value does not need to be defined when allowing the server to generate a self-signed certificate. KEYSTORE_TYPE Format of the keystore defined in KEYSTORE_FILE. One of \"jks\", \"pkcs12\", \"pem\", or \"bcfks\" (in FIPS mode). If not defined, the keystore format will be inferred based on the file extension of the KEYSTORE_FILE, defaulting to \"jks\". TRUSTSTORE_FILE Location of the truststore file for the server. If left undefined, the SECRETS_DIR will be checked for a truststore. If that truststore does not exist, the server will generate a truststore, containing its own certificate. TRUSTSTORE_PIN_FILE Location of the pin file for the truststore defined in TRUSTSTORE_FILE. You must specify a TRUSTSTORE_PIN_FILE when a TRUSTSTORE_FILE is present. This value does not need to be defined when allowing the server to generate a truststore. TRUSTSTORE_TYPE Format of the truststore defined in TRUSTSTORE_FILE. One of \"jks\", \"pkcs12\", \"pem\", or \"bcfks\" (in FIPS mode). If not defined, the truststore format will be inferred based on the file extension of the TRUSTSTORE_FILE, defaulting to \"jks\". TAIL_LOG_FILES ${SERVER_ROOT_DIR}/logs/trace ${SERVER_ROOT_DIR}/logs/policy-decision ${SERVER_ROOT_DIR}/logs/ldap-access Files tailed once container has started PD_PROFILE ${STAGING_DIR}/pd.profile Directory for the profile used by the PingData manage-profile tool UNBOUNDID_SKIP_START_PRECHECK_NODETACH true Setting this variable to true speeds up server startup time by skipping an unnecessary JVM check. CERTIFICATE_NICKNAME There is an additional certificate-based variable used to identity the certificate alias used within the <code>KEYSTORE_FILE</code>. That variable is called <code>CERTIFICATE_NICKNAME</code>, which identifies the certificate to use by the server in the <code>KEYSTORE_FILE</code>. If a value is not provided, the container will look at the list certs found in the <code>KEYSTORE_FILE</code> and if one - and only one - certificate is found of type <code>PrivateKeyEntry</code>, that alias will be used. COLUMNS 120 Sets the number of columns in PingAuthorize command-line tool output"},{"location":"docker-images/pingauthorize/#ports-exposed","title":"Ports Exposed","text":"<p>The following ports are exposed from the container.  If a variable is used, then it may come from a parent container</p> <ul> <li>${LDAP_PORT}</li> <li>${LDAPS_PORT}</li> <li>${HTTPS_PORT}</li> <li>${JMX_PORT}</li> </ul>"},{"location":"docker-images/pingauthorize/#running-a-pingauthorize-container","title":"Running a PingAuthorize container","text":"<p>The easiest way to test a simple standalone image of PingAuthorize is to cut/paste the following command into a terminal on a machine with docker.</p> <pre><code>  docker run \\\n           --name pingauthorize \\\n           --publish 1389:1389 \\\n           --publish 8443:1443 \\\n           --detach \\\n           --env SERVER_PROFILE_URL=https://github.com/pingidentity/pingidentity-server-profiles.git \\\n           --env SERVER_PROFILE_PATH=getting-started/pingauthorize \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER \\\n           --env PING_IDENTITY_DEVOPS_KEY \\\n           --tmpfs /run/secrets \\\n          pingidentity/pingauthorize:edge\n</code></pre> <p>You can view the Docker logs with the command:</p> <pre><code>  docker logs -f pingauthorize\n</code></pre> <p>You should see the ouptut from a PingAuthorize install and configuration, ending with a message the the PingAuthorize has started.  After it starts, you will see some typical access logs.  Simply <code>Ctrl-C</code> after to stop tailing the logs.</p>"},{"location":"docker-images/pingauthorize/#stoppingremoving-the-container","title":"Stopping/Removing the container","text":"<p>To stop the container:</p> <pre><code>  docker container stop pingauthorize\n</code></pre> <p>To remove the container:</p> <pre><code>  docker container rm -f pingauthorize\n</code></pre>"},{"location":"docker-images/pingauthorize/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all pingauthorize hook scripts</p> <p>This document is auto-generated from pingauthorize/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingauthorize/hooks/","title":"Ping Identity DevOps <code>pingauthorize</code> Hooks","text":"<p>There are no default hooks defined for the <code>pingauthorize</code> image.</p> <p>Hooks defined by parent images (i.e. pingcommon/pingdatacommon) will be inherited by this image.</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingauthorizepap/","title":"Ping Identity DevOps Docker Image - <code>pingauthorizepap</code>","text":"<p>This docker image includes the Ping Identity PingAuthorize Policy Editor product binaries and associated hook scripts to create and run a PingAuthorize Policy Editor instance.</p>"},{"location":"docker-images/pingauthorizepap/#related-docker-images","title":"Related Docker Images","text":"<ul> <li><code>pingidentity/pingbase</code> - Parent Image <p>This image inherits, and can use, Environment Variables from pingidentity/pingbase</p> </li> <li><code>pingidentity/pingdatacommon</code> - Common Ping files (i.e. hook scripts)</li> </ul>"},{"location":"docker-images/pingauthorizepap/#environment-variables","title":"Environment Variables","text":"<p>In addition to environment variables inherited from pingidentity/pingbase, the following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description SHIM ${SHIM} IMAGE_VERSION ${IMAGE_VERSION} IMAGE_GIT_REV ${IMAGE_GIT_REV} DATE ${DATE} PING_PRODUCT_VERSION ${VERSION} PING_PRODUCT PingAuthorize-PAP Ping product name LICENSE_DIR ${PD_LICENSE_DIR} PD License directory. This value is set from the pingbase dockerfile LICENSE_FILE_NAME PingAuthorize.lic Name of license File LICENSE_SHORT_NAME PingAuthorize Short name used when retrieving license from License Server LICENSE_VERSION ${LICENSE_VERSION} Version used when retrieving license from License Server MAX_HEAP_SIZE 384m Minimal Heap size required for PingAuthorize Policy Editor STARTUP_COMMAND ${SERVER_ROOT_DIR}/bin/start-server The command that the entrypoint executes in the foreground to instantiate the container STARTUP_FOREGROUND_OPTS --nodetach The command-line options to provide to the the startup command when the container starts with the server in the foreground. This is the normal start flow for the container STARTUP_BACKGROUND_OPTS The command-line options to provide to the the startup command when the container starts with the server in the background. This is the debug start flow for the container KEYSTORE_FILE Location of the keystore file containing the server certificate. If left undefined, the SECRETS_DIR will be checked for a keystore. If that keystore does not exist, the server will generate a self-signed certificate. KEYSTORE_PIN_FILE Location of the pin file for the keystore defined in KEYSTORE_FILE. You must specify a KEYSTORE_PIN_FILE when a KEYSTORE_FILE is present. This value does not need to be defined when allowing the server to generate a self-signed certificate. KEYSTORE_TYPE Format of the keystore defined in KEYSTORE_FILE. One of \"jks\" or \"pkcs12\". If not defined, the keystore format will be inferred based on the file extension of the KEYSTORE_FILE, defaulting to \"jks\". TAIL_LOG_FILES ${SERVER_ROOT_DIR}/logs/authorize-pe.log ${SERVER_ROOT_DIR}/logs/management-audit.log ${SERVER_ROOT_DIR}/logs/policy-db.log ${SERVER_ROOT_DIR}/logs/setup.log ${SERVER_ROOT_DIR}/logs/start-server.log ${SERVER_ROOT_DIR}/logs/stop-server.log Files tailed once container has started REST_API_HOSTNAME localhost Hostname used for the REST API (deprecated, use <code>PING_EXTERNAL_BASE_URL</code> instead) DECISION_POINT_SHARED_SECRET 2FederateM0re Defines the shared secret between PAZ and the Policy Editor PING_ENABLE_API_HTTP_CACHE true When set to <code>false</code>, disables the default HTTP API caching in the Policy Manager, Trust Framework, and Test Suite PING_POLICY_DB_SYNC When set to <code>true</code>, the container uses the provided policy database admin credentials to either create a PostgreSQL policy database or upgrade it if it already exists. You must also provide the <code>PING_DB_CONNECTION_STRING</code>, <code>PING_DB_ADMIN_USERNAME</code>, <code>PING_DB_ADMIN_PASSWORD</code> <code>PING_DB_APP_USERNAME</code>, and <code>PING_DB_APP_PASSWORD</code> variables for this to work. PING_DB_CONNECTION_STRING jdbc:h2:file:./Symphonic;ALIAS_COLUMN_NAME=TRUE The JDBC connection string used to connect to the policy database. Use the format <code>jdbc:postgresql://&lt;host&gt;:&lt;port&gt;/&lt;database&gt;</code>. Only H2 embedded files and PostgreSQL are supported. PING_DB_ADMIN_USERNAME sa The database administration username to use when creating or upgrading a policy database. PING_DB_ADMIN_PASSWORD Passw0rd The database administration password to use when creating or upgrading a policy database. PING_DB_APP_USERNAME pap_user The username that the Policy Editor should use when accessing the policy database during server runtime. PING_DB_APP_PASSWORD Symphonic2014! The password that the Policy Editor should use when accessing the policy database during server runtime."},{"location":"docker-images/pingauthorizepap/#ports-exposed","title":"Ports Exposed","text":"<p>The following ports are exposed from the container.  If a variable is used, then it may come from a parent container</p> <ul> <li>${HTTPS_PORT}</li> </ul>"},{"location":"docker-images/pingauthorizepap/#running-a-pingauthorize-policy-editor-container","title":"Running a PingAuthorize Policy Editor container","text":"<p>A PingAuthorize Policy Editor may be set up in one of two modes:</p> <ul> <li>Demo mode: Uses insecure username/password authentication.</li> <li>OIDC mode: Uses an OpenID Connect provider for authentication.</li> </ul> <p>To run a PingAuthorize Policy Editor container in demo mode:</p> <pre><code>  docker run \\\n           --name pingauthorizepap \\\n           --env PING_EXTERNAL_BASE_URL=my-pap-hostname:8443 \\\n           --publish 8443:1443 \\\n           --detach \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER \\\n           --env PING_IDENTITY_DEVOPS_KEY \\\n           --tmpfs /run/secrets \\\n           pingidentity/pingauthorizepap:edge\n</code></pre> <p>Log in with:</p> <ul> <li>https://my-pap-hostname:8443/<ul> <li>Username: admin</li> <li>Password: password123</li> </ul> </li> </ul> <p>To run a PingAuthorize Policy Editor container in OpenID Connect mode, specify the <code>PING_OIDC_CONFIGURATION_ENDPOINT</code> and <code>PING_CLIENT_ID</code> environment variables. To provide scopes other than the default (<code>oidc email profile</code>), specify the <code>PING_SCOPE</code> environment variable:</p> <pre><code>  docker run \\\n           --name pingauthorizepap \\\n           --env PING_EXTERNAL_BASE_URL=my-pe-hostname:8443 \\\n           --env PING_OIDC_CONFIGURATION_ENDPOINT=https://my-oidc-provider/.well-known/openid-configuration \\\n           --env PING_CLIENT_ID=b1929abc-e108-4b4f-83d467059fa1 \\\n           --env PING_SCOPE=\"oidc email profile phone\" \\\n           --publish 8443:1443 \\\n           --detach \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER \\\n           --env PING_IDENTITY_DEVOPS_KEY \\\n           --tmpfs /run/secrets \\\n           pingidentity/pingauthorizepap:edge\n</code></pre> <p>Note: If both <code>PING_OIDC_CONFIGURATION_ENDPOINT</code> and <code>PING_CLIENT_ID</code> are not specified, then Docker sets up the PingAuthorize Policy Editor container in demo mode.</p> <p>Log in with:</p> <ul> <li>https://my-pap-hostname:8443/<ul> <li>Provide credentials as prompted by the OIDC provider</li> </ul> </li> </ul> <p>Follow Docker logs with:</p> <pre><code>docker logs -f pingauthorizepap\n</code></pre>"},{"location":"docker-images/pingauthorizepap/#specifying-the-external-hostname-and-port","title":"Specifying the external hostname and port","text":"<p>The Policy Editor consists of a client-side application that runs in the user's web browser and a backend REST API service that runs within the container. So that the client-side application can successfully make API calls to the backend, the Policy Editor must be configured with an externally accessible hostname:port. If the Policy Editor is configured in OIDC mode, then the external hostname:port pair is also needed so that the Policy Editor can correctly generate its OIDC redirect URI.</p> <p>Use the <code>PING_EXTERNAL_BASE_URL</code> environment variable to specify the Policy Editor's external hostname and port using the form <code>hostname[:port]</code>, where <code>hostname</code> is the hostname of the Docker host and <code>port</code> is the Policy Editor container's published port. If the published port is 443, then it should be omitted.</p> <p>For example:</p> <pre><code>  docker run \\\n           --name pingauthorizepap \\\n           --env PING_EXTERNAL_BASE_URL=my-pap-hostname:8443 \\\n           --publish 8443:1443 \\\n           --detach \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER \\\n           --env PING_IDENTITY_DEVOPS_KEY \\\n           --tmpfs /run/secrets \\\n           pingidentity/pingauthorizepap:edge\n</code></pre>"},{"location":"docker-images/pingauthorizepap/#changing-the-default-periodic-database-backup-schedule-and-location","title":"Changing the default periodic database backup schedule and location","text":"<p>The PAP performs periodic backups of the policy database. The results are placed in the <code>policy-backup</code> directory underneath the instance root.</p> <p>Use the <code>PING_BACKUP_SCHEDULE</code> environment variable to specify the PAP's periodic database backup schedule in the form of a cron expression. The cron expression evaluates against the container timezone, UTC. Use the <code>PING_H2_BACKUP_DIR</code> environment variable to change the backup output directory.</p> <p>For example, to perform backups daily at UTC noon and place backups in <code>/opt/out/backup</code>:</p> <pre><code>  docker run \\\n           --name pingauthorizepap \\\n           --env PING_EXTERNAL_BASE_URL=my-pap-hostname:8443 \\\n           --env PING_BACKUP_SCHEDULE=\"0 0 12 * * ?\" \\\n           --env PING_H2_BACKUP_DIR=/opt/out/backup \\\n           --publish 8443:1443 \\\n           --detach \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER \\\n           --env PING_IDENTITY_DEVOPS_KEY \\\n           --tmpfs /run/secrets \\\n           pingidentity/pingauthorizepap:edge\n</code></pre>"},{"location":"docker-images/pingauthorizepap/#creating-and-upgrading-a-postgresql-policy-database","title":"Creating and upgrading a PostgreSQL policy database","text":"<p>Although the Policy Editor uses an embedded H2 file for its policy database implementation by default, it also has the capability to use a PostgreSQL database. However, this database must first be initialized with database objects.</p> <p>Set the <code>PING_POLICY_DB_SYNC</code> environment variable to <code>true</code>, provide the PostgreSQL JDBC connection string in <code>PING_DB_CONNECTION_STRING</code>, the database administration credentials through <code>PING_DB_ADMIN_USERNAME</code> and <code>PING_DB_ADMIN_PASSWORD</code>, and the server runtime credentials through <code>PING_DB_APP_USERNAME</code> and <code>PING_DB_APP_PASSWORD</code> to indicate that pingauthorizepap should create the necessary policy database objects.</p> <p>Similarly, use the same environment variables with the same values when a new version of the application is released. pingauthorizepap will use the database administration user to perform any necessary upgrades to the database objects.</p> <p>In both scenarios, the database administration user and the server runtime user must exist and be able to sign into the PostgreSQL server. In the create scenario, the database administration user must be able to create databases. In the upgrade scenario, the database administration user must own the database objects. Therefore, it is advisable to continually provide the same administration credentials during creation and upgrades to prevent permissions issues.</p> <p>For example, assume that a system administrator has created a PostgreSQL username <code>pap_admin</code> that can sign into a PostgreSQL server hosted at example.com and listening on port 5432. They have also created the runtime user <code>pap_user</code>.</p> <p>To create the database objects under the database named <code>my_pap_db</code> and start the Policy Editor, use the following command:</p> <pre><code>  docker run \\\n           --name pingauthorizepap \\\n           --env PING_EXTERNAL_BASE_URL=my-pap-hostname:8443 \\\n           --env PING_POLICY_DB_SYNC=true \\\n           --env PING_DB_CONNECTION_STRING=jdbc:postgresql://example.com:5432/my_pap_db \\\n           --env PING_DB_ADMIN_USERNAME=pap_admin \\\n           --env PING_DB_ADMIN_PASSWORD=2FederateM0re \\\n           --env PING_DB_APP_USERNAME=pap_user \\\n           --env PING_DB_APP_PASSWORD=2FederateM0re \\\n           --publish 8443:1443 \\\n           --detach \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER \\\n           --env PING_IDENTITY_DEVOPS_KEY \\\n           --tmpfs /run/secrets \\\n           pingidentity/pingauthorizepap:edge\n</code></pre> <p>Use the same command when a new pingauthorizepap release requires an upgrade to the policy database schema.</p> <p>Note that <code>PING_DB_ADMIN_PASSWORD</code> and <code>PING_DB_APP_PASSWORD</code> are only provided on the command line for illustrative purposes and can instead be provided through a Vault or through a <code>/run/secrets</code> <code>.env</code> file.</p>"},{"location":"docker-images/pingauthorizepap/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all pingauthorizepap hook scripts</p> <p>This document is auto-generated from pingauthorizepap/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingauthorizepap/hooks/","title":"Ping Identity DevOps <code>pingauthorizepap</code> Hooks","text":"<p>List of available hooks: * 18-setup-sequence.sh * 183-run-setup.sh * 184-run-policy-db.sh * 80-post-start.sh * 81-install-policies.sh * pingauthorizepap.lib.sh</p> <p>These hooks will replace hooks defined by parent images (i.e. pingcommon/pingdatacommon)</p> <p>This document is auto-generated from pingauthorizepap/opt/staging/hooks</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingauthorizepap/hooks/18-setup-sequence.sh/","title":"Ping Identity DevOps <code>pingauthorizepap</code> Hook - <code>18-setup-sequence.sh</code>","text":"<p>Quarterbacks all the scripts associated with the setup of a  PingData product</p> <p>This document is auto-generated from pingauthorizepap/opt/staging/hooks/18-setup-sequence.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingauthorizepap/hooks/183-run-setup.sh/","title":"Ping Identity DevOps <code>pingauthorizepap</code> Hook - <code>183-run-setup.sh</code>","text":"<p>This document is auto-generated from pingauthorizepap/opt/staging/hooks/183-run-setup.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingauthorizepap/hooks/184-run-policy-db.sh/","title":"Ping Identity DevOps <code>pingauthorizepap</code> Hook - <code>184-run-policy-db.sh</code>","text":"<p>This document is auto-generated from pingauthorizepap/opt/staging/hooks/184-run-policy-db.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingauthorizepap/hooks/80-post-start.sh/","title":"Ping Identity DevOps <code>pingauthorizepap</code> Hook - <code>80-post-start.sh</code>","text":"<p>This script is used to import any configurations that are  needed after PingAuthorize Policy Editor starts</p> <p>This document is auto-generated from pingauthorizepap/opt/staging/hooks/80-post-start.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingauthorizepap/hooks/81-install-policies.sh/","title":"Ping Identity DevOps <code>pingauthorizepap</code> Hook - <code>81-install-policies.sh</code>","text":"<p>This document is auto-generated from pingauthorizepap/opt/staging/hooks/81-install-policies.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingauthorizepap/hooks/pingauthorizepap.lib.sh/","title":"Ping Identity DevOps <code>pingauthorizepap</code> Hook - <code>pingauthorizepap.lib.sh</code>","text":"<p>This document is auto-generated from pingauthorizepap/opt/staging/hooks/pingauthorizepap.lib.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingbase/","title":"Ping Identity Docker Image - <code>pingbase</code>","text":"<p>This docker image provides a base image for all Ping Identity DevOps product images.</p>"},{"location":"docker-images/pingbase/#environment-variables","title":"Environment Variables","text":"<p>The following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description BASE ${BASE:-/opt} Location of the top level directory where everything is located in image/container ROOT_USER administrator the default administrative user for PingData JAVA_HOME /opt/java STAGING_DIR ${BASE}/staging Path to the staging area where the remote and local server profiles can be merged OUT_DIR ${BASE}/out Path to the runtime volume SERVER_ROOT_DIR ${OUT_DIR}/instance Path from which the runtime executes IN_DIR ${BASE}/in Location of a local server-profile volume SERVER_BITS_DIR ${BASE}/server Path to the server bits BAK_DIR ${BASE}/backup Path to a volume generically used to export or backup data LOGS_DIR ${BASE}/logs Path to a volume generically used for logging PING_IDENTITY_ACCEPT_EULA NO Must be set to 'YES' for the container to start PING_IDENTITY_DEVOPS_FILE devops-secret File name for devops-creds passed as a Docker secret STAGING_MANIFEST ${BASE}/staging-manifest.txt Path to a manifest of files expected in the staging dir on first image startup CLEAN_STAGING_DIR false Whether to clean the staging dir when the image starts SECRETS_DIR /run/secrets Default path to the secrets TOPOLOGY_FILE ${STAGING_DIR}/topology.json Path to the topology file HOOKS_DIR ${STAGING_DIR}/hooks Path where all the hooks scripts are stored CONTAINER_ENV ${STAGING_DIR}/.env Environment Property file use to share variables between scripts in container SERVER_PROFILE_DIR /tmp/server-profile Path where the remote server profile is checked out or cloned before being staged prior to being applied on the runtime SERVER_PROFILE_URL A valid git HTTPS URL (not ssh) SERVER_PROFILE_URL_REDACT true When set to \"true\", the server profile git URL will not be printed to container output. SERVER_PROFILE_BRANCH A valid git branch (optional) SERVER_PROFILE_PATH The subdirectory in the git repo SERVER_PROFILE_UPDATE false Whether to update the server profile upon container restart SECURITY_CHECKS_STRICT false Requires strict checks on security SECURITY_CHECKS_FILENAME .jwk .pin Perform a check for filenames that may violate security (i.e. secret material) UNSAFE_CONTINUE_ON_ERROR If this is set to true, then the container will provide a hard warning and continue. LICENSE_DIR ${SERVER_ROOT_DIR} License directory PD_LICENSE_DIR ${STAGING_DIR}/pd.profile/server-root/pre-setup PD License directory. Separating from above LICENSE_DIR to differentiate for different products STARTUP_COMMAND The command that the entrypoint will execute in the foreground to instantiate the container STARTUP_FOREGROUND_OPTS The command-line options to provide to the the startup command when the container starts with the server in the foreground. This is the normal start flow for the container STARTUP_BACKGROUND_OPTS The command-line options to provide to the the startup command when the container starts with the server in the background. This is the debug start flow for the container PING_IDENTITY_DEVOPS_KEY_REDACT true TAIL_LOG_FILES A whitespace separated list of log files to tail to the container standard output - DO NOT USE WILDCARDS like /path/to/logs/*.log COLORIZE_LOGS true If 'true', the output logs will be colorized with GREENs and REDs, otherwise, no colorization will be done.  This is good for tools that monitor logs and colorization gets in the way. LOCATION Docker Location default value If PingDirectory is deployed in multi cluster mode, that is, K8S_CLUSTER, K8S_CLUSTERS and K8S_SEED_CLUSTER are defined, LOCATION is ignored and K8S_CLUSTER is used as the location LOCATION_VALIDATION true Any string denoting a logical/physical location MAX_HEAP_SIZE 384m Heap size (for java products) JVM_TUNING AGGRESSIVE JAVA_RAM_PERCENTAGE 75.0 Percentage of the container memory to allocate to PingFederate JVM DO NOT set to 100% or your JVM will exit with OutOfMemory errors and the container will terminate VERBOSE false Triggers verbose messages in scripts using the set -x option. PING_DEBUG false Set the server in debug mode, with increased output PING_PRODUCT The name of Ping product, i.e. PingFederate, PingDirectory - must be a valid Ping product type. This variable should be overridden by child images. PING_PRODUCT_VALIDATION true i.e. PingFederate,PingDirectory ADDITIONAL_SETUP_ARGS List of setup arguments passed to Ping Data setup-arguments.txt file LDAP_PORT 1389 Port over which to communicate for LDAP LDAPS_PORT 1636 Port over which to communicate for LDAPS HTTPS_PORT 1443 Port over which to communicate for HTTPS JMX_PORT 1689 Port for monitoring over JMX protocol ORCHESTRATION_TYPE The type of orchestration tool used to run the container, normally set in the deployment (.yaml) file.  Expected values include: - compose - swarm - kubernetes Defaults to blank (i.e. No type is set) USER_BASE_DN dc=example,dc=com Base DN for user data DOLLAR '$' Variable with a literal value of '$', to avoid unwanted variable substitution PD_ENGINE_PUBLIC_HOSTNAME localhost PD (PingDirectory) public hostname that may be used in redirects PD_ENGINE_PRIVATE_HOSTNAME pingdirectory PD (PingDirectory) private hostname PDP_ENGINE_PUBLIC_HOSTNAME localhost PDP (PingDirectoryProxy) public hostname that may be used in redirects PDP_ENGINE_PRIVATE_HOSTNAME pingdirectoryproxy PDP (PingDirectoryProxy) private hostname PDS_ENGINE_PUBLIC_HOSTNAME localhost PDS (PingDataSync) public hostname that may be used in redirects PDS_ENGINE_PRIVATE_HOSTNAME pingdatasync PDS (PingDataSync) private hostname PAZ_ENGINE_PUBLIC_HOSTNAME localhost PAZ (PingAuthorize) public hostname that may be used in redirects PAZ_ENGINE_PRIVATE_HOSTNAME pingauthorize PAZ (PingAuthorize) private hostname PAZP_ENGINE_PUBLIC_HOSTNAME localhost PAZP (PingAuthorize-PAP) public hostname that may be used in redirects PAZP_ENGINE_PRIVATE_HOSTNAME pingauthorizepap PAZP (PingAuthorize-PAP) private hostname PF_ENGINE_PUBLIC_HOSTNAME localhost PF (PingFederate) engine public hostname that may be used in redirects PF_ENGINE_PRIVATE_HOSTNAME pingfederate PF (PingFederate) engine private hostname PF_ADMIN_PUBLIC_BASEURL https://localhost:9999 PF (PingFederate) admin public baseurl that may be used in redirects PF_ADMIN_PUBLIC_HOSTNAME localhost PF (PingFederate) admin public hostname that may be used in redirects PF_ADMIN_PRIVATE_HOSTNAME pingfederate-admin PF (PingFederate) admin private hostname PA_ENGINE_PUBLIC_HOSTNAME localhost PA (PingAccess) engine public hostname that may be used in redirects PA_ENGINE_PRIVATE_HOSTNAME pingaccess PA (PingAccess) engine private hostname PA_ADMIN_PUBLIC_HOSTNAME localhost PA (PingAccess) admin public hostname that may be used in redirects PA_ADMIN_PRIVATE_HOSTNAME pingaccess-admin PA (PingAccess) admin private hostname ROOT_USER_DN cn=${ROOT_USER} DN of the server root user ENV ${BASE}/.profile PS1 \\${PING_PRODUCT}:\\h:\\w\\n&gt; Default shell prompt (i.e. productName:hostname:workingDir) PATH ${JAVA_HOME}/bin:${BASE}:${SERVER_ROOT_DIR}/bin:${PATH} PATH used by the container"},{"location":"docker-images/pingbase/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all pingbase hook scripts</p> <p>This document is auto-generated from pingbase/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingbase/hooks/","title":"Ping Identity DevOps <code>pingbase</code> Hooks","text":"<p>There are no default hooks defined for the <code>pingbase</code> image.</p> <p>Hooks defined by parent images (i.e. pingcommon/pingdatacommon) will be inherited by this image.</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcentral/","title":"Ping Identity DevOps Docker Image - <code>pingcentral</code>","text":"<p>This docker image includes the Ping Identity PingCentral product binaries and associated hook scripts to create and run PingCentral in a container.</p>"},{"location":"docker-images/pingcentral/#related-docker-images","title":"Related Docker Images","text":"<ul> <li><code>pingidentity/pingbase</code> - Parent Image <p>This image inherits, and can use, Environment Variables from pingidentity/pingbase</p> </li> <li><code>pingidentity/pingcommon</code> - Common Ping files (i.e. hook scripts)</li> </ul>"},{"location":"docker-images/pingcentral/#environment-variables","title":"Environment Variables","text":"<p>In addition to environment variables inherited from pingidentity/pingbase, the following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description SHIM ${SHIM} IMAGE_VERSION ${IMAGE_VERSION} IMAGE_GIT_REV ${IMAGE_GIT_REV} DATE ${DATE} PING_PRODUCT_VERSION ${VERSION} PING_CENTRAL_SERVER_PORT 9022 PING_PRODUCT PingCentral Ping product name LICENSE_DIR ${SERVER_ROOT_DIR}/conf License directory LICENSE_FILE_NAME pingcentral.lic Name of license file LICENSE_SHORT_NAME PC Short name used when retrieving license from License Server LICENSE_VERSION ${LICENSE_VERSION} Version used when retrieving license from License Server STARTUP_COMMAND ${SERVER_ROOT_DIR}/bin/run.sh The command that the entrypoint will execute in the foreground to instantiate the container TAIL_LOG_FILES ${SERVER_ROOT_DIR}/log/application.log Files tailed once container has started PING_CENTRAL_LOG_LEVEL INFO PING_CENTRAL_BLIND_TRUST false PING_CENTRAL_VERIFY_HOSTNAME true"},{"location":"docker-images/pingcentral/#ports-exposed","title":"Ports Exposed","text":"<p>The following ports are exposed from the container.  If a variable is used, then it may come from a parent container</p> <ul> <li>9022</li> </ul>"},{"location":"docker-images/pingcentral/#running-a-pingcentral-container","title":"Running a PingCentral container","text":"<p>To run a PingCentral container with your devops configuration file: ```shell docker run -Pt \\            --name pingcentral \\            --env-file ~/.pingidentity/config \\            --env PING_IDENTITY_ACCEPT_EULA=YES \\            --env PING_IDENTITY_DEVOPS_USER \\            --env PING_IDENTITY_DEVOPS_KEY \\            --tmpfs /run/secrets \\            pingidentity/pingcentral:edge <pre><code>or with long options in the background:\n```shell\n  docker run \\\n           --name pingcentral \\\n           --publish 9022:9022 \\\n           --detach \\\n           --env-file ~/.pingidentity/config \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER \\\n           --env PING_IDENTITY_DEVOPS_KEY \\\n           --tmpfs /run/secrets \\\n           pingidentity/pingcentral:edge\n</code></pre></p> <p>or if you want to specify everything yourself: <pre><code>  docker run \\\n           --name pingcentral \\\n           --publish 9022:9022 \\\n           --detach \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER \\\n           --env PING_IDENTITY_DEVOPS_KEY \\\n           --tmpfs /run/secrets \\\n           pingidentity/pingcentral:edge\n</code></pre></p> <p>Follow Docker logs with:</p> <pre><code>docker logs -f pingcentral\n</code></pre> <p>If using the command above with the embedded server profile, log in with: * https://localhost:9022/   * Username: Administrator   * Password: 2Federate</p>"},{"location":"docker-images/pingcentral/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all pingcentral hook scripts</p> <p>This document is auto-generated from pingcentral/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcentral/hooks/","title":"Ping Identity DevOps <code>pingcentral</code> Hooks","text":"<p>There are no default hooks defined for the <code>pingcentral</code> image.</p> <p>Hooks defined by parent images (i.e. pingcommon/pingdatacommon) will be inherited by this image.</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/","title":"Ping Identity Docker Image - <code>pingcommon</code>","text":"<p>This docker image provides a busybox image to house the base hook scripts and default entrypoint.sh used throughout the Ping Identity DevOps product images.</p>"},{"location":"docker-images/pingcommon/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all pingcommon hook scripts</p> <p>This document is auto-generated from pingcommon/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/","title":"Ping Identity DevOps <code>pingcommon</code> Hooks","text":"<p>List of available hooks: * 01-start-server.sh * 02-get-remote-server-profile.sh * 03-build-run-plan.sh * 04-check-variables.sh * 05-expand-templates.sh * 06-copy-product-bits.sh * 07-apply-server-profile.sh * 09-build-motd.sh * 10-start-sequence.sh * 17-check-license.sh * 18-setup-sequence.sh * 20-restart-sequence.sh * 50-before-post-start.sh * 90-shutdown-sequence.sh * LICENSE * pingcommon.lib.sh * pingsecrets.lib.sh * pingstate.lib.sh</p> <p>These hooks will replace hooks defined by parent images (i.e. pingcommon/pingdatacommon)</p> <p>This document is auto-generated from pingcommon/opt/staging/hooks</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/01-start-server.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>01-start-server.sh</code>","text":"<p>This document is auto-generated from pingcommon/opt/staging/hooks/01-start-server.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/02-get-remote-server-profile.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>02-get-remote-server-profile.sh</code>","text":"<p>This hook will get bits from a git repo based on SERVER_PROFILE_* variables  passed to the container.  If no SERVER_PROFILES are passed, then nothing will  occur when running this hook.  These bits will be placed into the STAGING_DIR location (defaults to  ${BASE_DIR}/staging).  Server Profiles may be layered to copy in profiles from a parent/ancestor server  profile.  An example might be a layer of profiles that look like:  - Dev Environment Configs (DEV_CONFIG)    - Dev Certificates (DEV_CERT)      - Base Configs (BASE)  This would result in a set of SERVER_PROFILE variables that looks like:  - SERVER_PROFILE_URL=...git url of DEV_CONFIG...  - SERVER_PROFILE_PARENT=DEV_CERT  - SERVER_PROFILE_DEV_CERT_URL=...git url of DEV_CERT...  - SERVER_PROFILE_DEV_CERT_PARENT=BASE  - SERVER_PROFILE_BASE_URL=...git url of BASE...  In this example, the bits for BASE would be pulled, followed by DEV_CERT, followed  by DEV_CONFIG  If other source maintenance repositories are used (i.e. bitbucket, s3, ...)  then this hook could be overridden by a different hook</p> <p>This document is auto-generated from pingcommon/opt/staging/hooks/02-get-remote-server-profile.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/03-build-run-plan.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>03-build-run-plan.sh</code>","text":"<p>This script will building a run plan for the server as it starts up  Options for the RUN_PLAN and the PD_STATE are as follows:  RUN_PLAN (Initially set to UNKNOWN)           START   - Instructs the container to start from scratch.  This is primarily                     because a STARTUP_COMMAND (i.e. /opt/out/instance/bin/run.sh) isn't present.           RESTART - Instructs the container to restart.  This is primarily because the                     STARTUP_COMMAND (i.e. /opt/out/instance/bin/run.sh) is present and typically                     signifies that the server bits have been copied and run before</p> <p>NOTE: It will be common for products to override this hook to provide RUN_PLAN directions based on product specifics.</p> <p>This document is auto-generated from pingcommon/opt/staging/hooks/03-build-run-plan.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/04-check-variables.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>04-check-variables.sh</code>","text":"<p>This document is auto-generated from pingcommon/opt/staging/hooks/04-check-variables.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/05-expand-templates.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>05-expand-templates.sh</code>","text":"<p>Using the envsubst command, this will look through any files in the  STAGING_DIR that end in <code>.subst</code> or <code>.subst.default</code>  and substitute any variables the files with the the value of those  variables, if the variable is set.  Variables may come from (in order of precedence):   - The '.env' file from the profiles and intra container env variables   - The environment variables or env-file passed to container on startup   - The container's os  If a .zip file ends with <code>.zip.subst</code> (especially useful for pingfederate  for example with data.zip) then:   - file will be unzipped   - any files ending in <code>.subst</code> will be processed to substitute variables   - zipped back up in to the same file without the <code>.subst</code> suffix  If a file ends with <code>.subst.default</code> (intended to only be expanded as a  default if the file is not found) then it will be substituted:   - If the RUN_PLAN==START and the file is not found in staging   - If the RUN_PLAN==RESTART and the file is found in staging or the OUT_DIR</p> <p>Note: If a string of $name should be ignored during a substitution, then  A special variable ${DOLLAR} should be used.  This is not required any longer  and deprecated, but available for any older server-profile versions. Example: ${DOLLAR}{username} ==&gt; ${username}</p> <p>This document is auto-generated from pingcommon/opt/staging/hooks/05-expand-templates.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/06-copy-product-bits.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>06-copy-product-bits.sh</code>","text":"<p>Copies the server bits from the image into the SERVER_ROOT_DIR if  it is a new fresh container.</p> <p>This document is auto-generated from pingcommon/opt/staging/hooks/06-copy-product-bits.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/07-apply-server-profile.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>07-apply-server-profile.sh</code>","text":"<p>The server-profiles from:  * remote (i.e. git) and  * local (i.e. /opt/in)  have been merged into the ${STAGING_DIR}/instance (ie. /opt/staging/instance).  This is a candidate to be installed or overwritten into the ${SERVER_ROOT_DIR}  if one of the following items are true:  * Start of a new server (i.e. RUN_PLAN=START)  * Restart of a server with SERVER_PROFILE_UPDATE==true  To force the overwrite of files on a restart, ensure that the variable:      SERVER_PROFILE_UPDATE=true  is passed.</p> <p>This document is auto-generated from pingcommon/opt/staging/hooks/07-apply-server-profile.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/09-build-motd.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>09-build-motd.sh</code>","text":"<p>Creates a message of the day (MOTD) file based on information provided by:  * Docker Variables  * Server-Profile motd file</p> <p>This document is auto-generated from pingcommon/opt/staging/hooks/09-build-motd.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/10-start-sequence.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>10-start-sequence.sh</code>","text":"<p>This document is auto-generated from pingcommon/opt/staging/hooks/10-start-sequence.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/17-check-license.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>17-check-license.sh</code>","text":"<p>Check for license file  - If LICENSE_FILE found make call to check-license api unless MUTE_LICENSE_VERIFICATION set to true  - If LICENSE_FILE not found and PING_IDENTITY_DEVOPS_USER and PING_IDENTITY_DEVOPS_KEY defined    make call to obtain a license from license server</p> <p>This document is auto-generated from pingcommon/opt/staging/hooks/17-check-license.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/18-setup-sequence.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>18-setup-sequence.sh</code>","text":"<p>This hook may be used to set the server if there is a setup procedure</p> <p>Note: The PingData (i.e. Directory, DataSync, PingAuthorize, DirectoryProxy)  products will all provide this</p> <p>This document is auto-generated from pingcommon/opt/staging/hooks/18-setup-sequence.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/20-restart-sequence.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>20-restart-sequence.sh</code>","text":"<p>This hook is called when the container has been built in a prior startup  and a configuration has been found.</p> <p>This document is auto-generated from pingcommon/opt/staging/hooks/20-restart-sequence.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/50-before-post-start.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>50-before-post-start.sh</code>","text":"<p>This is called after the start or restart sequence has finished and before  the server within the container starts</p> <p>This document is auto-generated from pingcommon/opt/staging/hooks/50-before-post-start.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/90-shutdown-sequence.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>90-shutdown-sequence.sh</code>","text":"<p>This script may be implemented to gracefully shutdown the container</p> <p>Note: this is most useful in Kubernetes but can be called arbitrarily by  by control/config frameworks</p> <p>This document is auto-generated from pingcommon/opt/staging/hooks/90-shutdown-sequence.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/LICENSE/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>LICENSE</code>","text":"<p>This document is auto-generated from pingcommon/opt/staging/hooks/LICENSE</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/pingcommon.lib.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>pingcommon.lib.sh</code>","text":"<p>This document is auto-generated from pingcommon/opt/staging/hooks/pingcommon.lib.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/pingsecrets.lib.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>pingsecrets.lib.sh</code>","text":"<p>This document is auto-generated from pingcommon/opt/staging/hooks/pingsecrets.lib.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingcommon/hooks/pingstate.lib.sh/","title":"Ping Identity DevOps <code>pingcommon</code> Hook - <code>pingstate.lib.sh</code>","text":"<p>This document is auto-generated from pingcommon/opt/staging/hooks/pingstate.lib.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatacommon/","title":"Ping Identity Docker Image - <code>pingdatacommon</code>","text":"<p>This docker image provides a busybox image based off of <code>pingidentity/pingcommon</code> to house the base hook scripts used throughout the Ping Identity DevOps PingData product images.</p>"},{"location":"docker-images/pingdatacommon/#related-docker-images","title":"Related Docker Images","text":"<ul> <li><code>pingidentity/pingcommon</code> - Parent Image</li> </ul>"},{"location":"docker-images/pingdatacommon/#environment-variables","title":"Environment Variables","text":"<p>The following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description REGENERATE_JAVA_PROPERTIES false Flag to force a run of dsjavaproperties --initialize. When this is false, the java.properties file will only be regenerated on a restart when there is a change in JVM or a change in the product-specific java options, such as changing the MAX_HEAP_SIZE value."},{"location":"docker-images/pingdatacommon/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all pingdatacommon hook scripts</p> <p>This document is auto-generated from pingdatacommon/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatacommon/hooks/","title":"Ping Identity DevOps <code>pingdatacommon</code> Hooks","text":"<p>List of available hooks: * 03-build-run-plan.sh * 18-setup-sequence.sh * 181-install-extensions.sh * 183-run-setup.sh * 185-apply-tools-properties.sh * 20-restart-sequence.sh * LICENSE * pingdata.lib.sh</p> <p>These hooks will replace hooks defined by parent images (i.e. pingcommon/pingdatacommon)</p> <p>This document is auto-generated from pingdatacommon/opt/staging/hooks</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatacommon/hooks/03-build-run-plan.sh/","title":"Ping Identity DevOps <code>pingdatacommon</code> Hook - <code>03-build-run-plan.sh</code>","text":"<p>This script is called to check if there is an existing server  and if so, it will return a 1, else 0</p> <p>This document is auto-generated from pingdatacommon/opt/staging/hooks/03-build-run-plan.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatacommon/hooks/18-setup-sequence.sh/","title":"Ping Identity DevOps <code>pingdatacommon</code> Hook - <code>18-setup-sequence.sh</code>","text":"<p>Quarterbacks all the scripts associated with the setup of a  PingData product</p> <p>This document is auto-generated from pingdatacommon/opt/staging/hooks/18-setup-sequence.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatacommon/hooks/181-install-extensions.sh/","title":"Ping Identity DevOps <code>pingdatacommon</code> Hook - <code>181-install-extensions.sh</code>","text":"<p>This document is auto-generated from pingdatacommon/opt/staging/hooks/181-install-extensions.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatacommon/hooks/183-run-setup.sh/","title":"Ping Identity DevOps <code>pingdatacommon</code> Hook - <code>183-run-setup.sh</code>","text":"<p>This document is auto-generated from pingdatacommon/opt/staging/hooks/183-run-setup.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatacommon/hooks/185-apply-tools-properties.sh/","title":"Ping Identity DevOps <code>pingdatacommon</code> Hook - <code>185-apply-tools-properties.sh</code>","text":"<p>This document is auto-generated from pingdatacommon/opt/staging/hooks/185-apply-tools-properties.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatacommon/hooks/20-restart-sequence.sh/","title":"Ping Identity DevOps <code>pingdatacommon</code> Hook - <code>20-restart-sequence.sh</code>","text":"<p>This hook is called when the container has been built in a prior startup  and a configuration has been found.</p> <p>This document is auto-generated from pingdatacommon/opt/staging/hooks/20-restart-sequence.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatacommon/hooks/LICENSE/","title":"Ping Identity DevOps <code>pingdatacommon</code> Hook - <code>LICENSE</code>","text":"<p>This document is auto-generated from pingdatacommon/opt/staging/hooks/LICENSE</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatacommon/hooks/pingdata.lib.sh/","title":"Ping Identity DevOps <code>pingdatacommon</code> Hook - <code>pingdata.lib.sh</code>","text":"<p>This document is auto-generated from pingdatacommon/opt/staging/hooks/pingdata.lib.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdataconsole/","title":"Ping Identity Docker Image - <code>pingdataconsole</code>","text":"<p>This docker image provides a tomcat image with the PingDataConsole deployed to be used in configuration of the PingData products.</p>"},{"location":"docker-images/pingdataconsole/#related-docker-images","title":"Related Docker Images","text":"<ul> <li><code>tomcat:11-jre17</code> - Tomcat engine to serve PingDataConsole .war file</li> </ul>"},{"location":"docker-images/pingdataconsole/#environment-variables","title":"Environment Variables","text":"<p>The following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description SHIM ${SHIM} IMAGE_VERSION ${IMAGE_VERSION} IMAGE_GIT_REV ${IMAGE_GIT_REV} DATE ${DATE} PING_PRODUCT_VERSION ${VERSION} PING_PRODUCT PingDataConsole Ping product name HTTP_PORT 8080 PingDataConsole HTTP listen port HTTPS_PORT 8443 PingDataConsole HTTPS listen port STARTUP_COMMAND ${SERVER_ROOT_DIR}/bin/catalina.sh The command that the entrypoint will execute in the foreground to instantiate the container STARTUP_FOREGROUND_OPTS run The command-line options to provide to the the startup command when the container starts with the server in the foreground. This is the normal start flow for the container STARTUP_BACKGROUND_OPTS start The command-line options to provide to the the startup command when the container starts with the server in the background. This is the debug start flow for the container TAIL_LOG_FILES ${SERVER_ROOT_DIR}/logs/console.log Files tailed once container has started"},{"location":"docker-images/pingdataconsole/#run","title":"Run","text":"<p>To run a PingDataConsole container:</p> <pre><code>  docker run \\\n           --name pingdataconsole \\\n           --publish ${HTTPS_PORT}:${HTTPS_PORT} \\\n           --detach \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER \\\n           --env PING_IDENTITY_DEVOPS_KEY \\\n           --tmpfs /run/secrets \\\n           pingidentity/pingdataconsole:edge\n</code></pre> <p>Follow Docker logs with:</p> <pre><code>docker logs -f pingdataconsole\n</code></pre> <p>If using the command above with the embedded server profile, log in with: * http://localhost:${HTTPS_PORT}/console/login <pre><code>Server: pingdirectory:1636\nUsername: administrator\nPassword: 2FederateM0re\n</code></pre></p> <p>make sure you have a PingDirectory running</p>"},{"location":"docker-images/pingdataconsole/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all pingdataconsole hook scripts</p> <p>This document is auto-generated from pingdataconsole/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdataconsole/hooks/","title":"Ping Identity DevOps <code>pingdataconsole</code> Hooks","text":"<p>List of available hooks: * 02-get-remote-server-profile.sh.post * 04-check-variables.sh * 17-check-license.sh * LICENSE</p> <p>These hooks will replace hooks defined by parent images (i.e. pingcommon/pingdatacommon)</p> <p>This document is auto-generated from pingdataconsole/opt/staging/hooks</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdataconsole/hooks/02-get-remote-server-profile.sh.post/","title":"Ping Identity DevOps <code>pingdataconsole</code> Hook - <code>02-get-remote-server-profile.sh.post</code>","text":"<p>This hook provides final steps to setup Ping Data Console.</p> <p>This document is auto-generated from pingdataconsole/opt/staging/hooks/02-get-remote-server-profile.sh.post</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdataconsole/hooks/04-check-variables.sh/","title":"Ping Identity DevOps <code>pingdataconsole</code> Hook - <code>04-check-variables.sh</code>","text":"<p>This document is auto-generated from pingdataconsole/opt/staging/hooks/04-check-variables.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdataconsole/hooks/17-check-license.sh/","title":"Ping Identity DevOps <code>pingdataconsole</code> Hook - <code>17-check-license.sh</code>","text":"<p>This document is auto-generated from pingdataconsole/opt/staging/hooks/17-check-license.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdataconsole/hooks/LICENSE/","title":"Ping Identity DevOps <code>pingdataconsole</code> Hook - <code>LICENSE</code>","text":"<p>This document is auto-generated from pingdataconsole/opt/staging/hooks/LICENSE</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatasync/","title":"Ping Identity DevOps Docker Image - <code>pingdatasync</code>","text":"<p>This docker image includes the Ping Identity PingDataSync product binaries and associated hook scripts to create and run a PingDataSync instance.</p>"},{"location":"docker-images/pingdatasync/#related-docker-images","title":"Related Docker Images","text":"<ul> <li><code>pingidentity/pingbase</code> - Parent Image <p>This image inherits, and can use, Environment Variables from pingidentity/pingbase</p> </li> <li><code>pingidentity/pingdatacommon</code> - Common Ping files (i.e. hook scripts)</li> </ul>"},{"location":"docker-images/pingdatasync/#environment-variables","title":"Environment Variables","text":"<p>In addition to environment variables inherited from pingidentity/pingbase, the following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description SHIM ${SHIM} IMAGE_VERSION ${IMAGE_VERSION} IMAGE_GIT_REV ${IMAGE_GIT_REV} DATE ${DATE} PING_PRODUCT_VERSION ${VERSION} TAIL_LOG_FILES ${SERVER_ROOT_DIR}/logs/sync Files tailed once container has started LICENSE_DIR ${PD_LICENSE_DIR} PD License directory. This value is set from the pingbase docker file LICENSE_FILE_NAME PingDirectory.lic Name of license file LICENSE_SHORT_NAME PD Short name used when retrieving license from License Server LICENSE_VERSION ${LICENSE_VERSION} Version used when retrieving license from License Server PING_PRODUCT PingDataSync Ping product name STARTUP_COMMAND ${SERVER_ROOT_DIR}/bin/start-server The command that the entrypoint will execute in the foreground to instantiate the container STARTUP_FOREGROUND_OPTS --nodetach The command-line options to provide to the the startup command when the container starts with the server in the foreground. This is the normal start flow for the container RETRY_TIMEOUT_SECONDS 180 The default retry timeout in seconds for manage-topology and remove-defunct-server ADMIN_USER_NAME admin Failover administrative user ROOT_USER_PASSWORD_FILE Location of file with the root user password (i.e. cn=directory manager). Defaults to /SECRETS_DIR/root-user-password ADMIN_USER_PASSWORD_FILE Location of file with the admin password, used as the password replication admin Defaults to /SECRETS_DIR/admin-user-password KEYSTORE_FILE Location of the keystore file containing the server certificate. If left undefined, the SECRETS_DIR will be checked for a keystore. If that keystore does not exist, the server will generate a self-signed certificate. KEYSTORE_PIN_FILE Location of the pin file for the keystore defined in KEYSTORE_FILE. You must specify a KEYSTORE_PIN_FILE when a KEYSTORE_FILE is present. This value does not need to be defined when allowing the server to generate a self-signed certificate. KEYSTORE_TYPE Format of the keystore defined in KEYSTORE_FILE. One of \"jks\", \"pkcs12\", \"pem\", or \"bcfks\" (in FIPS mode). If not defined, the keystore format will be inferred based on the file extension of the KEYSTORE_FILE, defaulting to \"jks\". TRUSTSTORE_FILE Location of the truststore file for the server. If left undefined, the SECRETS_DIR will be checked for a truststore. If that truststore does not exist, the server will generate a truststore, containing its own certificate. TRUSTSTORE_PIN_FILE Location of the pin file for the truststore defined in TRUSTSTORE_FILE. You must specify a TRUSTSTORE_PIN_FILE when a TRUSTSTORE_FILE is present. This value does not need to be defined when allowing the server to generate a truststore. TRUSTSTORE_TYPE Format of the truststore defined in TRUSTSTORE_FILE. One of \"jks\", \"pkcs12\", \"pem\", or \"bcfks\" (in FIPS mode). If not defined, the truststore format will be inferred based on the file extension of the TRUSTSTORE_FILE, defaulting to \"jks\". PD_PROFILE ${STAGING_DIR}/pd.profile Directory for the profile used by the PingData manage-profile tool UNBOUNDID_SKIP_START_PRECHECK_NODETACH true Setting this variable to true speeds up server startup time by skipping an unnecessary JVM check. PARALLEL_POD_MANAGEMENT_POLICY false Whether this container is running as a Pod in a Kubernetes StatefulSet, and that StatefulSet is using the Parallel podManagementPolicy. This property allows for starting up Pods in parallel to speed up the initial startup of PingDataSync topologies. This variable must be set to true when using the Parallel podManagementPolicy. Note: when using parallel startup, ensure the RETRY_TIMEOUT_SECONDS variable is large enough. The pods will be enabling replication simultaneously, so some pods will have to retry while waiting for others to complete. If the timeout is too low, a Pod may end up restarting unnecessarily. SKIP_WAIT_FOR_DNS false Set to true to skip the waiting for DNS step that is normally done just before attempting to join the topology. CERTIFICATE_NICKNAME There is an additional certificate-based variable used to identity the certificate alias used within the <code>KEYSTORE_FILE</code>. That variable is called <code>CERTIFICATE_NICKNAME</code>, which identifies the certificate to use by the server in the <code>KEYSTORE_FILE</code>. If a value is not provided, the container will look at the list certs found in the <code>KEYSTORE_FILE</code> and if one - and only one - certificate is found of type <code>PrivateKeyEntry</code>, that alias will be used. COLUMNS 120 Sets the number of columns in PingDataSync command-line tool output PD_REBUILD_ON_RESTART false Force a rebuild (replace-profile) of PingDataSync on restart. Used to ensure that the server configuration exactly matches the server profile. This variable will slow down startup times and should only be used when necessary."},{"location":"docker-images/pingdatasync/#ports-exposed","title":"Ports Exposed","text":"<p>The following ports are exposed from the container.  If a variable is used, then it may come from a parent container</p> <ul> <li>${LDAP_PORT}</li> <li>${LDAPS_PORT}</li> <li>${HTTPS_PORT}</li> <li>${JMX_PORT}</li> </ul>"},{"location":"docker-images/pingdatasync/#running-a-pingdatasync-container","title":"Running a PingDataSync container","text":"<pre><code>  docker run \\\n           --name pingdatasync \\\n           --publish 1389:1389 \\\n           --publish 8443:1443 \\\n           --detach \\\n           --env SERVER_PROFILE_URL=https://github.com/pingidentity/pingidentity-server-profiles.git \\\n           --env SERVER_PROFILE_PATH=simple-sync/pingdatasync \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER \\\n           --env PING_IDENTITY_DEVOPS_KEY \\\n           --tmpfs /run/secrets \\\n           pingidentity/pingdatasync:edge\n</code></pre>"},{"location":"docker-images/pingdatasync/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all pingdatasync hook scripts</p> <p>This document is auto-generated from pingdatasync/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatasync/hooks/","title":"Ping Identity DevOps <code>pingdatasync</code> Hooks","text":"<p>List of available hooks: * 03-build-run-plan.sh * 20-restart-sequence.sh * 80-post-start.sh * 90-shutdown-sequence.sh * LICENSE</p> <p>These hooks will replace hooks defined by parent images (i.e. pingcommon/pingdatacommon)</p> <p>This document is auto-generated from pingdatasync/opt/staging/hooks</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatasync/hooks/03-build-run-plan.sh/","title":"Ping Identity DevOps <code>pingdatasync</code> Hook - <code>03-build-run-plan.sh</code>","text":"<p>This script is called to determine the plan for the server as it starts up.</p> <p>This document is auto-generated from pingdatasync/opt/staging/hooks/03-build-run-plan.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatasync/hooks/20-restart-sequence.sh/","title":"Ping Identity DevOps <code>pingdatasync</code> Hook - <code>20-restart-sequence.sh</code>","text":"<p>This hook is called when the container has been built in a prior startup  and a configuration has been found.</p> <p>This document is auto-generated from pingdatasync/opt/staging/hooks/20-restart-sequence.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatasync/hooks/80-post-start.sh/","title":"Ping Identity DevOps <code>pingdatasync</code> Hook - <code>80-post-start.sh</code>","text":"<p>This script is mostly the same as the 80-post-start.sh hook in the  * Enabling PingDataSync failover</p> <p>This document is auto-generated from pingdatasync/opt/staging/hooks/80-post-start.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatasync/hooks/90-shutdown-sequence.sh/","title":"Ping Identity DevOps <code>pingdatasync</code> Hook - <code>90-shutdown-sequence.sh</code>","text":"<p>This script handles removing the server from the topology during a shutdown.</p> <p>This document is auto-generated from pingdatasync/opt/staging/hooks/90-shutdown-sequence.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdatasync/hooks/LICENSE/","title":"Ping Identity DevOps <code>pingdatasync</code> Hook - <code>LICENSE</code>","text":"<p>This document is auto-generated from pingdatasync/opt/staging/hooks/LICENSE</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdelegator/","title":"Ping Identity Docker Image - <code>pingdelegator</code>","text":"<p>This docker image provides an NGINX instance with PingDelegator that can be used in administering PingDirectory Users/Groups.</p>"},{"location":"docker-images/pingdelegator/#related-docker-images","title":"Related Docker Images","text":"<ul> <li><code>pingidentity/pingbase</code> - Parent Image <p>This image inherits, and can use, Environment Variables from pingidentity/pingbase</p> </li> <li><code>pingidentity/pingcommon</code> - Common Ping files (i.e. hook scripts)</li> </ul>"},{"location":"docker-images/pingdelegator/#environment-variables","title":"Environment Variables","text":"<p>In addition to environment variables inherited from pingidentity/pingbase, the following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description SHIM ${SHIM} IMAGE_VERSION ${IMAGE_VERSION} IMAGE_GIT_REV ${IMAGE_GIT_REV} DATE ${DATE} PING_PRODUCT_VERSION ${VERSION} PD_DELEGATOR_PUBLIC_HOSTNAME localhost PD_DELEGATOR_HTTP_PORT 6080 PD_DELEGATOR_HTTPS_PORT 6443 PING_PRODUCT PingDelegator Ping product name PF_ENGINE_PUBLIC_HOSTNAME localhost The hostname for the public Ping Federate instance used for SSO. PF_ENGINE_PUBLIC_PORT 9031 The port for the public Ping Federate instance used for SSO. NOTE: If using port 443 along with a base URL with no specified port, set to an empty string. PF_DELEGATOR_CLIENTID dadmin The client id that was set up with Ping Federate for Ping Delegator. PD_ENGINE_PUBLIC_HOSTNAME localhost The hostname for the DS instance the app will be interfacing with. PD_ENGINE_PUBLIC_PORT 1443 The HTTPS port for the DS instance the app will be interfacing with. PD_DELEGATOR_TIMEOUT_LENGTH_MINS 30 The length of time (in minutes) until the session will require a new login attempt PD_DELEGATOR_HEADER_BAR_LOGO The filename used as the logo in the header bar, relative to this application's build directory. Note about logos: The size of the image will be scaled down to fit 22px of height and a max-width of 150px. For best results, it is advised to make the image close to this height and width ratio as well as to crop out any blank spacing around the logo to maximize its presentation. e.g. '${SERVER_ROOT_DIR}/html/delegator/images/my_company_logo.png' PD_DELEGATOR_DADMIN_API_NAMESPACE The namespace for the Delegated Admin API on the DS instance. In most cases, this does not need to be set here. e.g. 'dadmin/v2' PD_DELEGATOR_PROFILE_SCOPE_ENABLED false Set to true if the \"profile\" scope is supported for the Delegated Admin OIDC client on PingFederate and you wish to use it to show the current user's name in the navigation. NGINX_WORKER_PROCESSES auto The number of NginX worker processes -- Default: auto NGINX_WORKER_CONNECTIONS 1024 The number of NginX worker connections -- Default: 1024 STARTUP_COMMAND nginx The command that the entrypoint will execute in the foreground to instantiate the container STARTUP_FOREGROUND_OPTS -c ${SERVER_ROOT_DIR}/etc/nginx.conf The command-line options to provide to the the startup command when the container starts with the server in the foreground. This is the normal start flow for the container STARTUP_BACKGROUND_OPTS ${STARTUP_FOREGROUND_OPTS} The command-line options to provide to the the startup command when the container starts with the server in the background. This is the debug start flow for the container"},{"location":"docker-images/pingdelegator/#run","title":"Run","text":"<p>To run a PingDelegator container with HTTPS_PORT=6443 (6443 is simply a convention for PingDelegator so conflicts are reduced with other container HTTPS ports):</p> <pre><code>  docker run \\\n           --name pingdelegator \\\n           --publish 6443:6443 \\\n           --detach \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER \\\n           --env PING_IDENTITY_DEVOPS_KEY \\\n           --tmpfs /run/secrets \\\n           pingidentity/pingdelegator:edge\n</code></pre> <p>PingDelegator requires running instances of PingFederate/PingDirectory.</p>"},{"location":"docker-images/pingdelegator/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all pingdelegator hook scripts</p> <p>This document is auto-generated from pingdelegator/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdelegator/hooks/","title":"Ping Identity DevOps <code>pingdelegator</code> Hooks","text":"<p>List of available hooks: * 02-get-remote-server-profile.sh.post * 04-check-variables.sh * 17-check-license.sh * LICENSE</p> <p>These hooks will replace hooks defined by parent images (i.e. pingcommon/pingdatacommon)</p> <p>This document is auto-generated from pingdelegator/opt/staging/hooks</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdelegator/hooks/02-get-remote-server-profile.sh.post/","title":"Ping Identity DevOps <code>pingdelegator</code> Hook - <code>02-get-remote-server-profile.sh.post</code>","text":"<p>This hook may be used to set the server if there is a setup procedure</p> <p>Note: The PingData (i.e. Directory, DataSync, PingAuthorize, DirectoryProxy)  products will all provide this</p> <p>This document is auto-generated from pingdelegator/opt/staging/hooks/02-get-remote-server-profile.sh.post</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdelegator/hooks/04-check-variables.sh/","title":"Ping Identity DevOps <code>pingdelegator</code> Hook - <code>04-check-variables.sh</code>","text":"<p>This document is auto-generated from pingdelegator/opt/staging/hooks/04-check-variables.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdelegator/hooks/17-check-license.sh/","title":"Ping Identity DevOps <code>pingdelegator</code> Hook - <code>17-check-license.sh</code>","text":"<p>This document is auto-generated from pingdelegator/opt/staging/hooks/17-check-license.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdelegator/hooks/LICENSE/","title":"Ping Identity DevOps <code>pingdelegator</code> Hook - <code>LICENSE</code>","text":"<p>This document is auto-generated from pingdelegator/opt/staging/hooks/LICENSE</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectory/","title":"Ping Identity DevOps Docker Image - <code>pingdirectory</code>","text":"<p>This docker image includes the Ping Identity PingDirectory product binaries and associated hook scripts to create and run a PingDirectory instance or instances.</p>"},{"location":"docker-images/pingdirectory/#related-docker-images","title":"Related Docker Images","text":"<ul> <li><code>pingidentity/pingbase</code> - Parent Image <p>This image inherits, and can use, Environment Variables from pingidentity/pingbase</p> </li> <li><code>pingidentity/pingdatacommon</code> - Common Ping files (i.e. hook scripts)</li> </ul>"},{"location":"docker-images/pingdirectory/#environment-variables","title":"Environment Variables","text":"<p>In addition to environment variables inherited from pingidentity/pingbase, the following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description SHIM ${SHIM} IMAGE_VERSION ${IMAGE_VERSION} IMAGE_GIT_REV ${IMAGE_GIT_REV} DATE ${DATE} PING_PRODUCT_VERSION ${VERSION} PING_PRODUCT PingDirectory Ping product name LICENSE_DIR ${PD_LICENSE_DIR} PD License directory. This value is set from the pingbase docker file LICENSE_FILE_NAME PingDirectory.lic Name of license File LICENSE_SHORT_NAME PD Short name used when retrieving license from License Server LICENSE_VERSION ${LICENSE_VERSION} Version used when retrieving license from License Server REPLICATION_PORT 8989 Default PingDirectory Replication Port ADMIN_USER_NAME admin Replication administrative user STARTUP_COMMAND ${SERVER_ROOT_DIR}/bin/start-server The command that the entrypoint will execute in the foreground to instantiate the container PD_DELEGATOR_PUBLIC_HOSTNAME localhost Public hostname of the DA app STARTUP_FOREGROUND_OPTS --nodetach The command-line options to provide to the the startup command when the container starts with the server in the foreground. This is the normal start flow for the container STARTUP_BACKGROUND_OPTS The command-line options to provide to the the startup command when the container starts with the server in the background. This is the debug start flow for the container ROOT_USER_PASSWORD_FILE Location of file with the root user password (i.e. cn=directory manager). Defaults to /SECRETS_DIR/root-user-password ADMIN_USER_PASSWORD_FILE Location of file with the admin password, used as the password replication admin Defaults to /SECRETS_DIR/admin-user-password ENCRYPTION_PASSWORD_FILE Location of file with the passphrase for setting up encryption Defaults to /SECRETS_DIR/encryption-password KEYSTORE_FILE Location of the keystore file containing the server certificate. If left undefined, the SECRETS_DIR will be checked for a keystore. If that keystore does not exist, the server will generate a self-signed certificate. KEYSTORE_PIN_FILE Location of the pin file for the keystore defined in KEYSTORE_FILE. You must specify a KEYSTORE_PIN_FILE when a KEYSTORE_FILE is present. This value does not need to be defined when allowing the server to generate a self-signed certificate. KEYSTORE_TYPE Format of the keystore defined in KEYSTORE_FILE. One of \"jks\", \"pkcs12\", \"pem\", or \"bcfks\" (in FIPS mode). If not defined, the keystore format will be inferred based on the file extension of the KEYSTORE_FILE, defaulting to \"jks\". TRUSTSTORE_FILE Location of the truststore file for the server. If left undefined, the SECRETS_DIR will be checked for a truststore. If that truststore does not exist, the server will generate a truststore, containing its own certificate. TRUSTSTORE_PIN_FILE Location of the pin file for the truststore defined in TRUSTSTORE_FILE. You must specify a TRUSTSTORE_PIN_FILE when a TRUSTSTORE_FILE is present. This value does not need to be defined when allowing the server to generate a truststore. TRUSTSTORE_TYPE Format of the truststore defined in TRUSTSTORE_FILE. One of \"jks\", \"pkcs12\", \"pem\", or \"bcfks\" (in FIPS mode). If not defined, the truststore format will be inferred based on the file extension of the TRUSTSTORE_FILE, defaulting to \"jks\". TAIL_LOG_FILES ${SERVER_ROOT_DIR}/logs/access ${SERVER_ROOT_DIR}/logs/errors ${SERVER_ROOT_DIR}/logs/failed-ops ${SERVER_ROOT_DIR}/logs/config-audit.log ${SERVER_ROOT_DIR}/logs/debug-trace ${SERVER_ROOT_DIR}/logs/debug-aci ${SERVER_ROOT_DIR}/logs/tools/.log ${SERVER_BITS_DIR}/logs/tools/.log Files tailed once container has started MAKELDIF_USERS 0 Number of users to auto-populate using make-ldif templates RETRY_TIMEOUT_SECONDS 180 The default retry timeout in seconds for dsreplication and remove-defunct-server PD_PROFILE ${STAGING_DIR}/pd.profile Directory for the profile used by the PingData manage-profile tool FIPS_MODE_ON false Turns on FIPS mode (currently with the Bouncy Castle FIPS provider) set to exactly \"true\" lowercase to turn on set to anything else to turn off FIPS_PROVIDER BCFIPS BCFIPS is the only provider currently supported -- do not edit PD_REBUILD_ON_RESTART false Force a rebuild (replace-profile) of a PingDirectoy on restart. Used to ensure that the server configuration exactly matches the server profile. This variable will slow down startup times and should only be used when necessary. UNBOUNDID_SKIP_START_PRECHECK_NODETACH true Setting this variable to true speeds up server startup time by skipping an unnecessary JVM check. REPLICATION_BASE_DNS Base DNs to include when enabling replication, in addition to the always-included USER_BASE_DN. Multiple base DNs can be specified here, separated by a <code>;</code> character RESTRICTED_BASE_DNS Base DNs to set as --restricted when enabling replication. Multiple base DNs can be specified here, separated by a <code>;</code> character. See the product documentation for more information on how to configure entry balancing. PARALLEL_POD_MANAGEMENT_POLICY false Whether this container is running as a Pod in a Kubernetes StatefulSet, and that StatefulSet is using the Parallel podManagementPolicy. This property allows for starting up Pods in parallel to speed up the initial startup of PingDirectory topologies. This variable must be set to true when using the Parallel podManagementPolicy. Note: when using parallel startup, ensure the RETRY_TIMEOUT_SECONDS variable is large enough. The pods will be enabling replication simultaneously, so some pods will have to retry while waiting for others to complete. If the timeout is too low, a Pod may end up restarting unnecessarily. SKIP_WAIT_FOR_DNS false Set to true to skip the waiting for DNS step that is normally done just before attempting to join the topology. CERTIFICATE_NICKNAME There is an additional certificate-based variable used to identity the certificate alias used within the <code>KEYSTORE_FILE</code>. That variable is called <code>CERTIFICATE_NICKNAME</code>, which identifies the certificate to use by the server in the <code>KEYSTORE_FILE</code>. If a value is not provided, the container will look at the list certs found in the <code>KEYSTORE_FILE</code> and if one - and only one - certificate is found of type <code>PrivateKeyEntry</code>, that alias will be used. PD_FORCE_DATA_REIMPORT false Set to true to force PingDirectory to export and re-import its backend data on restart. Note that this process can take a long time for large backends. LOAD_BALANCING_ALGORITHM_NAMES The load-balancing algorithm names to set for this server instance. This variable is only needed when enabling automatic server discovery with PingDirectoryProxy. Multiple algorithms can be specified here, separated by a <code>;</code> character FAIL_ON_DISABLED_BASE_DN false Set to true to fail the container if it is found that replication is not enabled for the USER_BASE_DN during startup. If replication is not enabled for the DN but this variable is not set to true, then a warning will be printed, but the container will not fail. FAIL_ON_UNSUCCESSFUL_REMOVE_DEFUNCT false Set to true to fail the container if it is found that a previous call to remove-defunct-server in the hook scripts failed. If there was a failure but this variable is not set to true, then a warning will be printed, but the container will not fail. Failure of remove-defunct-server is marked by a file at ${SERVER_ROOT_DIR}/logs/remove-defunct-server-marker. Logs for the tool can be found at ${SERVER_ROOT_DIR}/logs/tools/remove-defunct-server.log COLUMNS 120 Sets the number of columns in PingDirectory command-line tool output"},{"location":"docker-images/pingdirectory/#ports-exposed","title":"Ports Exposed","text":"<p>The following ports are exposed from the container.  If a variable is used, then it may come from a parent container</p> <ul> <li>${LDAP_PORT}</li> <li>${LDAPS_PORT}</li> <li>${HTTPS_PORT}</li> <li>${JMX_PORT}</li> </ul>"},{"location":"docker-images/pingdirectory/#running-a-pingdirectory-container","title":"Running a PingDirectory container","text":"<p>The easiest way to test test a simple standalone image of PingDirectory is to cut/paste the following command into a terminal on a machine with docker.</p> <pre><code>  docker run \\\n           --name pingdirectory \\\n           --publish 1389:1389 \\\n           --publish 8443:1443 \\\n           --detach \\\n           --env SERVER_PROFILE_URL=https://github.com/pingidentity/pingidentity-server-profiles.git \\\n           --env SERVER_PROFILE_PATH=getting-started/pingdirectory \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER \\\n           --env PING_IDENTITY_DEVOPS_KEY \\\n           --tmpfs /run/secrets \\\n           pingidentity/pingdirectory:edge\n</code></pre> <p>You can view the Docker logs with the command:</p> <pre><code>  docker logs -f pingdirectory\n</code></pre> <p>You should see the ouptut from a PingDirectory install and configuration, ending with a message the the PingDirectory has started.  After it starts, you will see some typical access logs.  Simply <code>Ctrl-C</code> after to stop tailing the logs.</p>"},{"location":"docker-images/pingdirectory/#running-a-sample-100sec-search-rate-test","title":"Running a sample 100/sec search rate test","text":"<p>With the PingDirectory running from the previous section, you can run a <code>searchrate</code> job that will send load to the directory at a rate of 100/sec using the following command.</p> <pre><code>docker exec -it pingdirectory \\\n        /opt/out/instance/bin/searchrate \\\n                -b dc=example,dc=com \\\n                --scope sub \\\n                --filter \"(uid=user.[1-9])\" \\\n                --attribute mail \\\n                --numThreads 2 \\\n                --ratePerSecond 100\n</code></pre>"},{"location":"docker-images/pingdirectory/#connecting-with-an-ldap-client","title":"Connecting with an LDAP Client","text":"<p>Connect an LDAP Client (such as Apache Directory Studio) to this container using the default ports and credentials</p> LDAP Port 1389 LDAP Base DN dc=example,dc=com Root Username cn=administrator Root Password 2FederateM0re"},{"location":"docker-images/pingdirectory/#stoppingremoving-the-container","title":"Stopping/Removing the container","text":"<p>To stop the container:</p> <pre><code>  docker container stop pingdirectory\n</code></pre> <p>To remove the container:</p> <pre><code>  docker container rm -f pingdirectory\n</code></pre>"},{"location":"docker-images/pingdirectory/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all pingdirectory hook scripts</p> <p>This document is auto-generated from pingdirectory/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectory/hooks/","title":"Ping Identity DevOps <code>pingdirectory</code> Hooks","text":"<p>List of available hooks: * 03-build-run-plan.sh * 07-apply-server-profile.sh * 182-pre-setup.sh * 20-restart-sequence.sh * 80-post-start.sh * 90-shutdown-sequence.sh * LICENSE * pingdirectory.lib.sh</p> <p>These hooks will replace hooks defined by parent images (i.e. pingcommon/pingdatacommon)</p> <p>This document is auto-generated from pingdirectory/opt/staging/hooks</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectory/hooks/03-build-run-plan.sh/","title":"Ping Identity DevOps <code>pingdirectory</code> Hook - <code>03-build-run-plan.sh</code>","text":"<p>This script is called to determine the plan for the server as it starts up.</p> <p>This document is auto-generated from pingdirectory/opt/staging/hooks/03-build-run-plan.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectory/hooks/07-apply-server-profile.sh/","title":"Ping Identity DevOps <code>pingdirectory</code> Hook - <code>07-apply-server-profile.sh</code>","text":"<p>The server-profiles from:  * remote (i.e. git) and  * local (i.e. /opt/in)  have been merged into the ${STAGING_DIR}/instance (ie. /opt/staging/instance).  These files will be installed or overwritten into the ${SERVER_ROOT_DIR}.</p> <p>This document is auto-generated from pingdirectory/opt/staging/hooks/07-apply-server-profile.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectory/hooks/182-pre-setup.sh/","title":"Ping Identity DevOps <code>pingdirectory</code> Hook - <code>182-pre-setup.sh</code>","text":"<p>This document is auto-generated from pingdirectory/opt/staging/hooks/182-pre-setup.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectory/hooks/20-restart-sequence.sh/","title":"Ping Identity DevOps <code>pingdirectory</code> Hook - <code>20-restart-sequence.sh</code>","text":"<p>This hook is called when the container has been built in a prior startup  and a configuration has been found.</p> <p>This document is auto-generated from pingdirectory/opt/staging/hooks/20-restart-sequence.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectory/hooks/80-post-start.sh/","title":"Ping Identity DevOps <code>pingdirectory</code> Hook - <code>80-post-start.sh</code>","text":"<p>This hook configures pingdirectory replication  * Enabling Replication  * Get the new current topology  * Initialize replication</p> <p>This document is auto-generated from pingdirectory/opt/staging/hooks/80-post-start.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectory/hooks/90-shutdown-sequence.sh/","title":"Ping Identity DevOps <code>pingdirectory</code> Hook - <code>90-shutdown-sequence.sh</code>","text":"<p>This script handles removing the server from the topology during a shutdown.</p> <p>This document is auto-generated from pingdirectory/opt/staging/hooks/90-shutdown-sequence.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectory/hooks/LICENSE/","title":"Ping Identity DevOps <code>pingdirectory</code> Hook - <code>LICENSE</code>","text":"<p>This document is auto-generated from pingdirectory/opt/staging/hooks/LICENSE</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectory/hooks/pingdirectory.lib.sh/","title":"Ping Identity DevOps <code>pingdirectory</code> Hook - <code>pingdirectory.lib.sh</code>","text":"<p>This document is auto-generated from pingdirectory/opt/staging/hooks/pingdirectory.lib.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectoryproxy/","title":"Ping Identity DevOps Docker Image - <code>pingdirectoryproxy</code>","text":"<p>This docker image includes the Ping Identity PingDirectoryProxy product binaries and associated hook scripts to create and run a PingDirectoryProxy instance or instances.</p>"},{"location":"docker-images/pingdirectoryproxy/#related-docker-images","title":"Related Docker Images","text":"<ul> <li><code>pingidentity/pingbase</code> - Parent Image <p>This image inherits, and can use, Environment Variables from pingidentity/pingbase</p> </li> <li><code>pingidentity/pingdatacommon</code> - Common Ping files (i.e. hook scripts)\\</li> </ul>"},{"location":"docker-images/pingdirectoryproxy/#environment-variables","title":"Environment Variables","text":"<p>In addition to environment variables inherited from pingidentity/pingbase, the following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description SHIM ${SHIM} IMAGE_VERSION ${IMAGE_VERSION} IMAGE_GIT_REV ${IMAGE_GIT_REV} DATE ${DATE} PING_PRODUCT_VERSION ${VERSION} PING_PRODUCT PingDirectoryProxy Ping product name LICENSE_FILE_NAME PingDirectory.lic Name of license File LICENSE_DIR ${PD_LICENSE_DIR} PD License directory. This value is set from the pingbase docker file LICENSE_SHORT_NAME PD Short name used when retrieving license from License Server LICENSE_VERSION ${LICENSE_VERSION} Version used when retrieving license from License Server ADMIN_USER_NAME admin Replication administrative user STARTUP_COMMAND ${SERVER_ROOT_DIR}/bin/start-server The command that the entrypoint will execute in the foreground to instantiate the container PD_DELEGATOR_PUBLIC_HOSTNAME localhost Public hostname of the DA app STARTUP_FOREGROUND_OPTS --nodetach The command-line options to provide to the the startup command when the container starts with the server in the foreground. This is the normal start flow for the container STARTUP_BACKGROUND_OPTS The command-line options to provide to the the startup command when the container starts with the server in the background. This is the debug start flow for the container ROOT_USER_PASSWORD_FILE Location of file with the root user password (i.e. cn=directory manager). Defaults to /SECRETS_DIR/root-user-password KEYSTORE_FILE Location of the keystore file containing the server certificate. If left undefined, the SECRETS_DIR will be checked for a keystore. If that keystore does not exist, the server will generate a self-signed certificate. KEYSTORE_PIN_FILE Location of the pin file for the keystore defined in KEYSTORE_FILE. You must specify a KEYSTORE_PIN_FILE when a KEYSTORE_FILE is present. This value does not need to be defined when allowing the server to generate a self-signed certificate. KEYSTORE_TYPE Format of the keystore defined in KEYSTORE_FILE. One of \"jks\", \"pkcs12\", \"pem\", or \"bcfks\" (in FIPS mode). If not defined, the keystore format will be inferred based on the file extension of the KEYSTORE_FILE, defaulting to \"jks\". TRUSTSTORE_FILE Location of the truststore file for the server. If left undefined, the SECRETS_DIR will be checked for a truststore. If that truststore does not exist, the server will generate a truststore, containing its own certificate. TRUSTSTORE_PIN_FILE Location of the pin file for the truststore defined in TRUSTSTORE_FILE. You must specify a TRUSTSTORE_PIN_FILE when a TRUSTSTORE_FILE is present. This value does not need to be defined when allowing the server to generate a truststore. TRUSTSTORE_TYPE Format of the truststore defined in TRUSTSTORE_FILE. One of \"jks\", \"pkcs12\", \"pem\", or \"bcfks\" (in FIPS mode). If not defined, the truststore format will be inferred based on the file extension of the TRUSTSTORE_FILE, defaulting to \"jks\". TAIL_LOG_FILES ${SERVER_ROOT_DIR}/logs/access ${SERVER_ROOT_DIR}/logs/errors ${SERVER_ROOT_DIR}/logs/failed-ops ${SERVER_ROOT_DIR}/logs/config-audit.log ${SERVER_ROOT_DIR}/logs/tools/.log ${SERVER_BITS_DIR}/logs/tools/.log Files tailed once container has started PD_PROFILE ${STAGING_DIR}/pd.profile Directory for the profile used by the PingData manage-profile tool UNBOUNDID_SKIP_START_PRECHECK_NODETACH true Setting this variable to true speeds up server startup time by skipping an unnecessary JVM check. CERTIFICATE_NICKNAME There is an additional certificate-based variable used to identity the certificate alias used within the <code>KEYSTORE_FILE</code>. That variable is called <code>CERTIFICATE_NICKNAME</code>, which identifies the certificate to use by the server in the <code>KEYSTORE_FILE</code>. If a value is not provided, the container will look at the list certs found in the <code>KEYSTORE_FILE</code> and if one - and only one - certificate is found of type <code>PrivateKeyEntry</code>, that alias will be used. RETRY_TIMEOUT_SECONDS 180 The default retry timeout in seconds for manage-topology and remove-defunct-server PINGDIRECTORY_HOSTNAME Set this variable to configure Proxy for automatic server discovery with PingDirectory hostname JOIN_PD_TOPOLOGY must be enabled for PINGDIRECTORY_HOSTNAME to take effect PINGDIRECTORY_LDAPS_PORT Set this variable to configure Proxy for automatic server discovery with PingDirectory LDAPS port JOIN_PD_TOPOLOGY must be enabled for PINGDIRECTORY_LDAPS_PORT to take effect JOIN_PD_TOPOLOGY false Setting this variable to true will configure proxy to join the topology of PingDirectory COLUMNS 120 Sets the number of columns in PingDirectoryProxy command-line tool output"},{"location":"docker-images/pingdirectoryproxy/#ports-exposed","title":"Ports Exposed","text":"<p>The following ports are exposed from the container.  If a variable is used, then it may come from a parent container</p> <ul> <li>${LDAP_PORT}</li> <li>${LDAPS_PORT}</li> <li>${HTTPS_PORT}</li> <li>${JMX_PORT}</li> </ul>"},{"location":"docker-images/pingdirectoryproxy/#running-a-pingdirectoryproxy-container","title":"Running a PingDirectoryProxy container","text":"<p>The easiest way to test test a simple standalone image of PingDirectoryProxy is to cut/paste the following command into a terminal on a machine with docker.</p> <pre><code>  docker run \\\n           --name pingdirectoryproxy \\\n           --publish 1389:1389 \\\n           --publish 8443:1443 \\\n           --detach \\\n           --env SERVER_PROFILE_URL=https://github.com/pingidentity/pingidentity-server-profiles.git \\\n           --env SERVER_PROFILE_PATH=baseline/pingdirectoryproxy \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER \\\n           --env PING_IDENTITY_DEVOPS_KEY \\\n           --tmpfs /run/secrets \\\n           pingidentity/pingdirectoryproxy:edge\n</code></pre> <p>You can view the Docker logs with the command:</p> <pre><code>  docker logs -f pingdirectoryproxy\n</code></pre> <p>You should see the output from a PingDirectoryProxy install and configuration, ending with a message the the PingDirectoryProxy has started.  After it starts, you will see some typical access logs.  Simply <code>Ctrl-C</code> after to stop tailing the logs.</p>"},{"location":"docker-images/pingdirectoryproxy/#running-a-sample-100sec-search-rate-test","title":"Running a sample 100/sec search rate test","text":"<p>With the PingDirectoryProxy running from the previous section, you can run a <code>searchrate</code> job that will send load to the directory at a rate of 100/sec using the following command.</p> <pre><code>docker exec -it pingdirectoryproxy \\\n        /opt/out/instance/bin/searchrate \\\n                -b dc=example,dc=com \\\n                --scope sub \\\n                --filter \"(uid=user.[1-9])\" \\\n                --attribute mail \\\n                --numThreads 2 \\\n                --ratePerSecond 100\n</code></pre>"},{"location":"docker-images/pingdirectoryproxy/#connecting-with-an-ldap-client","title":"Connecting with an LDAP Client","text":"<p>Connect an LDAP Client (such as Apache Directory Studio) to this container using the default ports and credentials</p> LDAP Port 1389 LDAP Base DN dc=example,dc=com Root Username cn=administrator Root Password 2FederateM0re"},{"location":"docker-images/pingdirectoryproxy/#stoppingremoving-the-container","title":"Stopping/Removing the container","text":"<p>To stop the container:</p> <pre><code>  docker container stop pingdirectoryproxy\n</code></pre> <p>To remove the container:</p> <pre><code>  docker container rm -f pingdirectoryproxy\n</code></pre>"},{"location":"docker-images/pingdirectoryproxy/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all pingdirectoryproxy hook scripts</p> <p>This document is auto-generated from pingdirectoryproxy/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectoryproxy/hooks/","title":"Ping Identity DevOps <code>pingdirectoryproxy</code> Hooks","text":"<p>List of available hooks: * 03-build-run-plan.sh * 80-post-start.sh * 90-shutdown-sequence.sh * LICENSE</p> <p>These hooks will replace hooks defined by parent images (i.e. pingcommon/pingdatacommon)</p> <p>This document is auto-generated from pingdirectoryproxy/opt/staging/hooks</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectoryproxy/hooks/03-build-run-plan.sh/","title":"Ping Identity DevOps <code>pingdirectoryproxy</code> Hook - <code>03-build-run-plan.sh</code>","text":"<p>This script is called to determine the plan for the server as it starts up.</p> <p>This document is auto-generated from pingdirectoryproxy/opt/staging/hooks/03-build-run-plan.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectoryproxy/hooks/80-post-start.sh/","title":"Ping Identity DevOps <code>pingdirectoryproxy</code> Hook - <code>80-post-start.sh</code>","text":"<p>This script is mostly the same as the 80-post-start.sh hook in the  * Enabling PingDirectoryProxy Automatic Server Discovery</p> <p>This document is auto-generated from pingdirectoryproxy/opt/staging/hooks/80-post-start.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectoryproxy/hooks/90-shutdown-sequence.sh/","title":"Ping Identity DevOps <code>pingdirectoryproxy</code> Hook - <code>90-shutdown-sequence.sh</code>","text":"<p>This script handles removing the server from the topology during a shutdown.</p> <p>This document is auto-generated from pingdirectoryproxy/opt/staging/hooks/90-shutdown-sequence.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingdirectoryproxy/hooks/LICENSE/","title":"Ping Identity DevOps <code>pingdirectoryproxy</code> Hook - <code>LICENSE</code>","text":"<p>This document is auto-generated from pingdirectoryproxy/opt/staging/hooks/LICENSE</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingfederate/","title":"Ping Identity DevOps Docker Image - <code>pingfederate</code>","text":"<p>This docker image includes the Ping Identity PingFederate product binaries and associated hook scripts to create and run both PingFederate Admin and Engine nodes.</p>"},{"location":"docker-images/pingfederate/#related-docker-images","title":"Related Docker Images","text":"<ul> <li><code>pingidentity/pingbase</code> - Parent Image <p>This image inherits, and can use, Environment Variables from pingidentity/pingbase</p> </li> <li><code>pingidentity/pingcommon</code> - Common Ping files (i.e. hook scripts)</li> </ul>"},{"location":"docker-images/pingfederate/#environment-variables","title":"Environment Variables","text":"<p>In addition to environment variables inherited from pingidentity/pingbase, the following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description BASE ${BASE:-/opt} ROOT_USER administrator the default administrative user for PingData JAVA_HOME /opt/java STAGING_DIR ${BASE}/staging Path to the staging area where the remote and local server profiles can be merged OUT_DIR ${BASE}/out Path to the runtime volume SERVER_ROOT_DIR ${OUT_DIR}/instance Path from which the runtime executes IN_DIR ${BASE}/in Location of a local server-profile volume SERVER_BITS_DIR ${BASE}/server Path to the server bits BAK_DIR ${BASE}/backup Path to a volume generically used to export or backup data LOGS_DIR ${BASE}/logs Path to a volume generically used for logging PING_IDENTITY_ACCEPT_EULA NO Must be set to 'YES' for the container to start PING_IDENTITY_DEVOPS_FILE devops-secret File name for devops-creds passed as a Docker secret STAGING_MANIFEST ${BASE}/staging-manifest.txt Path to a manifest of files expected in the staging dir on first image startup CLEAN_STAGING_DIR false Whether to clean the staging dir when the image starts SECRETS_DIR /run/secrets Default path to the secrets TOPOLOGY_FILE ${STAGING_DIR}/topology.json Path to the topology file HOOKS_DIR ${STAGING_DIR}/hooks Path where all the hooks scripts are stored CONTAINER_ENV ${STAGING_DIR}/.env Environment Property file use to share variables between scripts in container SERVER_PROFILE_DIR /tmp/server-profile Path where the remote server profile is checked out or cloned before being staged prior to being applied on the runtime SERVER_PROFILE_URL A valid git HTTPS URL (not ssh) SERVER_PROFILE_URL_REDACT true When set to \"true\", the server profile git URL will not be printed to container output. SERVER_PROFILE_BRANCH A valid git branch (optional) SERVER_PROFILE_PATH The subdirectory in the git repo SERVER_PROFILE_UPDATE false Whether to update the server profile upon container restart SECURITY_CHECKS_STRICT false Requires strict checks on security SECURITY_CHECKS_FILENAME .jwk .pin Perform a check for filenames that may violate security (i.e. secret material) UNSAFE_CONTINUE_ON_ERROR If this is set to true, then the container will provide a hard warning and continue. LICENSE_DIR ${SERVER_ROOT_DIR} License directory PD_LICENSE_DIR ${STAGING_DIR}/pd.profile/server-root/pre-setup PD License directory. Separating from above LICENSE_DIR to differentiate for different products STARTUP_FOREGROUND_OPTS The command-line options to provide to the the startup command when the container starts with the server in the foreground. This is the normal start flow for the container STARTUP_BACKGROUND_OPTS The command-line options to provide to the the startup command when the container starts with the server in the background. This is the debug start flow for the container PING_IDENTITY_DEVOPS_KEY_REDACT true TAIL_LOG_FILES A whitespace separated list of log files to tail to the container standard output - DO NOT USE WILDCARDS like /path/to/logs/*.log COLORIZE_LOGS true If 'true', the output logs will be colorized with GREENs and REDs, otherwise, no colorization will be done.  This is good for tools that monitor logs and colorization gets in the way. LOCATION Docker Location default value If PingDirectory is deployed in multi cluster mode, that is, K8S_CLUSTER, K8S_CLUSTERS and K8S_SEED_CLUSTER are defined, LOCATION is ignored and K8S_CLUSTER is used as the location LOCATION_VALIDATION true Any string denoting a logical/physical location MAX_HEAP_SIZE 384m Heap size (for java products) JVM_TUNING AGGRESSIVE JAVA_RAM_PERCENTAGE 75.0 Percentage of the container memory to allocate to PingFederate JVM DO NOT set to 100% or your JVM will exit with OutOfMemory errors and the container will terminate VERBOSE false Triggers verbose messages in scripts using the set -x option. PING_DEBUG false Set the server in debug mode, with increased output PING_PRODUCT The name of Ping product, i.e. PingFederate, PingDirectory - must be a valid Ping product type. This variable should be overridden by child images. PING_PRODUCT_VALIDATION true i.e. PingFederate,PingDirectory ADDITIONAL_SETUP_ARGS List of setup arguments passed to Ping Data setup-arguments.txt file LDAP_PORT 1389 Port over which to communicate for LDAP LDAPS_PORT 1636 Port over which to communicate for LDAPS HTTPS_PORT 1443 Port over which to communicate for HTTPS JMX_PORT 1689 Port for monitoring over JMX protocol ORCHESTRATION_TYPE The type of orchestration tool used to run the container, normally set in the deployment (.yaml) file.  Expected values include: - compose - swarm - kubernetes Defaults to blank (i.e. No type is set) USER_BASE_DN dc=example,dc=com Base DN for user data DOLLAR '$' Variable with a literal value of '$', to avoid unwanted variable substitution PD_ENGINE_PUBLIC_HOSTNAME localhost PD (PingDirectory) public hostname that may be used in redirects PD_ENGINE_PRIVATE_HOSTNAME pingdirectory PD (PingDirectory) private hostname PDP_ENGINE_PUBLIC_HOSTNAME localhost PDP (PingDirectoryProxy) public hostname that may be used in redirects PDP_ENGINE_PRIVATE_HOSTNAME pingdirectoryproxy PDP (PingDirectoryProxy) private hostname PDS_ENGINE_PUBLIC_HOSTNAME localhost PDS (PingDataSync) public hostname that may be used in redirects PDS_ENGINE_PRIVATE_HOSTNAME pingdatasync PDS (PingDataSync) private hostname PAZ_ENGINE_PUBLIC_HOSTNAME localhost PAZ (PingAuthorize) public hostname that may be used in redirects PAZ_ENGINE_PRIVATE_HOSTNAME pingauthorize PAZ (PingAuthorize) private hostname PAZP_ENGINE_PUBLIC_HOSTNAME localhost PAZP (PingAuthorize-PAP) public hostname that may be used in redirects PAZP_ENGINE_PRIVATE_HOSTNAME pingauthorizepap PAZP (PingAuthorize-PAP) private hostname PF_ENGINE_PUBLIC_HOSTNAME localhost PF (PingFederate) engine public hostname that may be used in redirects PF_ENGINE_PRIVATE_HOSTNAME pingfederate PF (PingFederate) engine private hostname PF_ADMIN_PUBLIC_BASEURL https://localhost:9999 PF (PingFederate) admin public baseurl that may be used in redirects. PF_RUN_PF_ADMIN_BASEURL will override this value for PingFederate 11.3 and later. PF_ADMIN_PUBLIC_HOSTNAME localhost PF (PingFederate) admin public hostname that may be used in redirects. PF_RUN_PF_ADMIN_HOSTNAME will override this value for PingFederate 11.3 and later. PF_ADMIN_PRIVATE_HOSTNAME pingfederate-admin PF (PingFederate) admin private hostname PA_ENGINE_PUBLIC_HOSTNAME localhost PA (PingAccess) engine public hostname that may be used in redirects PA_ENGINE_PRIVATE_HOSTNAME pingaccess PA (PingAccess) engine private hostname PA_ADMIN_PUBLIC_HOSTNAME localhost PA (PingAccess) admin public hostname that may be used in redirects PA_ADMIN_PRIVATE_HOSTNAME pingaccess-admin PA (PingAccess) admin private hostname ROOT_USER_DN cn=${ROOT_USER} DN of the server root user ENV ${BASE}/.profile PS1 \\${PING_PRODUCT}:\\h:\\w\\n&gt; Default shell prompt (i.e. productName:hostname:workingDir) PATH ${JAVA_HOME}/bin:${BASE}:${SERVER_ROOT_DIR}/bin:${PATH} PATH used by the container SHIM ${SHIM} IMAGE_VERSION ${IMAGE_VERSION} IMAGE_GIT_REV ${IMAGE_GIT_REV} DATE ${DATE} PING_PRODUCT_VERSION ${VERSION} PING_PRODUCT PingFederate Ping product name LICENSE_DIR ${SERVER_ROOT_DIR}/server/default/conf License directory LICENSE_FILE_NAME pingfederate.lic Name of license file LICENSE_SHORT_NAME PF Short name used when retrieving license from License Server LICENSE_VERSION ${LICENSE_VERSION} Version used when retrieving license from License Server STARTUP_COMMAND ${SERVER_ROOT_DIR}/bin/run.sh The command that the entrypoint will execute in the foreground to instantiate the container PING_IDENTITY_PASSWORD 2FederateM0re Specify a password for administrator user for interaction with admin API TAIL_LOG_FILES ${SERVER_ROOT_DIR}/log/server.log Files tailed once container has started PF_LOG_SIZE_MAX 10000 KB Defines the log file size max for ALL appenders PF_LOG_NUMBER 2 Defines the maximum of log files to retain upon rotation PF_ADMIN_PORT 9999 Defines the port on which the PingFederate administrative console and API runs. PF_RUN_PF_ADMIN_HTTPS_PORT will override this for PingFederate 11.3 and later. PF_ENGINE_PORT 9031 Defines the port on which PingFederate listens for encrypted HTTPS (SSL/TLS) traffic. PF_RUN_PF_HTTPS_PORT will override this for PingFederate 11.3 and later. PF_ENGINE_SECONDARY_PORT -1 Defines a secondary HTTPS port that can be used for mutual SSL/TLS (client X.509 certificate) authentication for both end users and protocol requests. PF_RUN_PF_SECONDARY_HTTPS_PORT (default 9032) will override this value. The default value of -1 disables the port in the product. PF_ENGINE_DEBUG false Flag to turn on PingFederate Engine debugging Used in run.sh PF_ADMIN_DEBUG false Flag to turn on PingFederate Admin debugging Used in run.sh PF_DEBUG_PORT 9030 Defines the port on which PingFederate opens up a java debugging port. Used in run.sh SHOW_LIBS_VER true Defines a variable to allow showing library versions in the output at startup default to true SHOW_LIBS_VER_PRE_PATCH false Defines a variable to allow showing library version prior to patches being applied default to false This is helpful to ensure that the patch process updates all libraries affected OPERATIONAL_MODE STANDALONE Operational Mode Indicates the operational mode of the runtime server in run.properties Options include STANDALONE, CLUSTERED_CONSOLE, CLUSTERED_ENGINE. PF_RUN_PF_OPERATIONAL_MODE will override this for PingFederate 11.3 and later. PF_CONSOLE_AUTHENTICATION Defines mechanism for console authentication in run.properties. Options include none, native, LDAP, cert, RADIUS, OIDC. If not set, default is native. PF_RUN_PF_CONSOLE_AUTHENTICATION will override this for PingFederate 11.3 and later. PF_ADMIN_API_AUTHENTICATION Defines mechanism for admin api authentication in run.properties. Options include none, native, LDAP, cert, RADIUS, OIDC. If not set, default is native. PF_RUN_PF_ADMIN_API_AUTHENTICATION will override this for PingFederate 11.3 and later. HSM_MODE OFF Hardware Security Module Mode in run.properties Options include OFF, AWSCLOUDHSM, NCIPHER, LUNA, BCFIPS. PF_RUN_PF_HSM_MODE will override this for PingFederate 11.3 and later. PF_BC_FIPS_APPROVED_ONLY false Defines a variable that allows instantiating non-FIPS crypto/random PF_HSM_HYBRID false Hardware Security Module Hybrid Mode   When PF is in Hybrid mode, certs/keys can be created either on the local trust store or on the HSM.   This can used as a migration strategy towards an HSM setup. PF_RUN_PF_HSM_HYBRID will override this for PingFederate 11.3 and later. PF_LDAP_TYPE PingDirectory This is the type of the LDAP directory server. This property is needed by PingFederate to determine how to handle different implementations between the available LDAP directory server types. Valid options include: ActiveDirectory, SunDirectoryServer, OracleUnifiedDirectory, PingDirectory, and Generic. PF_LDAP_USERNAME This is the username for an account within the LDAP Directory Server that can be used to perform user lookups for authentication and other user level search operations.  Set if PF_CONSOLE_AUTHENTICATION or PF_ADMIN_API_AUTHENTICATION=LDAP PF_LDAP_LDAP_USERNAME will override this for PingFederate 11.3 and later. PF_LDAP_PASSWORD This is the password for the Username specified above. This property should be obfuscated using the 'obfuscate.sh' utility. Set if PF_CONSOLE_AUTHENTICATION or PF_ADMIN_API_AUTHENTICATION=LDAP PF_LDAP_LDAP_PASSWORD will override this for PingFederate 11.3 and later. CLUSTER_BIND_ADDRESS NON_LOOPBACK IP address for cluster communication.  Set to NON_LOOPBACK to allow the system to choose an available non-loopback IP address. PF_RUN_PF_CLUSTER_BIND_ADDRESS will override this for PingFederate 11.3 and later. PF_PROVISIONER_MODE OFF Provisioner Mode in run.properties Options include OFF, STANDALONE, FAILOVER. PF_RUN_PF_PROVISIONER_MODE will override this for PingFederate 11.3 and later. PF_PROVISIONER_NODE_ID 1 Provisioner Node ID in run.properties Initial active provisioning server node ID is 1 PF_RUN_PROVISIONER_NODE_ID will override this for PingFederate 11.3 and later. PF_PROVISIONER_GRACE_PERIOD 600 Node group ID in cluster-adaptive.conf file. Does not require a .subst file. Provisioner Failover Grace Period in run.properties Grace period, in seconds. Default 600 seconds PF_RUN_PROVISIONER_FAILOVER_GRACE_PERIOD will override this for PingFederate 11.3 and later. PF_JETTY_THREADS_MIN Override the default value for the minimum size of the Jetty thread pool Leave unset to let the container automatically tune the value according to available resources PF_RUN_PF_RUNTIME_THREADS_MIN will override this for PingFederate 11.3 and later. PF_JETTY_THREADS_MAX Override the default value for the maximum size of the Jetty thread pool Leave unset to let the container automatically tune the value according to available resources PF_RUN_PF_RUNTIME_THREADS_MAX will override this for PingFederate 11.3 and later. PF_ACCEPT_QUEUE_SIZE 512 The size of the accept queue. There is generally no reason to tune this but please refer to the performance tuning guide for further tuning guidance. PF_RUN_PF_RUNTIME_ACCEPTQUEUESIZE will override this for PingFederate 11.3 and later. PF_PINGONE_REGION The region of the PingOne tenant PingFederate should connect with. Valid values are \"com\", \"eu\" and \"asia\" PF_RUN_PF_PINGONE_ADMIN_URL_REGION will override this for PingFederate 11.3 and later. PF_PINGONE_ENV_ID The PingOne environment ID to use PF_RUN_PF_PINGONE_ADMIN_URL_ENVIRONMENT_ID will override this for PingFederate 11.3 and later. PF_CONSOLE_TITLE Docker PingFederate The title featured in the administration console -- this is generally used to easily distinguish between environments PF_RUN_PF_CONSOLE_TITLE will override this for PingFederate 11.3 and later. PF_NODE_TAGS This property defines the tags associated with this PingFederate node. Configuration is optional. When configured, PingFederate takes this property into consideration when processing requests. For example, tags may be used to determine the data store location that this PingFederate node communicates with. Administrators may also use tags in conjunction with authentication selectors and policies to define authentication requirements.  Administrators may define one tag or a list of space-separated tags. Each tag cannot contain any spaces. Other characters are allowed.  Example 1: PF_NODE_TAGS=north Example 1 defines one tag: 'north' Example 2: PF_NODE_TAGS=1 123 test Example 2 defines three tags: '1', '123' and 'test'  Example 3: PF_NODE_TAGS= Example 3 is also valid because the PF_NODE_TAGS property is optional. PF_RUN_NODE_TAGS will override this for PingFederate 11.3 and later. PF_CONSOLE_ENV This property defines the name of the PingFederate environment that will be displayed in the administrative console, used to make separate environments easily identifiable. PF_RUN_PF_CONSOLE_ENVIRONMENT will override this for PingFederate 11.3 and later. JAVA_RAM_PERCENTAGE 75.0 Percentage of the container memory to allocate to PingFederate JVM DO NOT set to 100% or your JVM will exit with OutOfMemory errors and the container will terminate BULK_CONFIG_DIR ${OUT_DIR}/instance/bulk-config BULK_CONFIG_FILE data.json ADMIN_WAITFOR_TIMEOUT 300 wait-for timeout for 80-post-start.sh hook script How long to wait for the PF Admin console to be available CREATE_INITIAL_ADMIN_USER false Set to true to create the initial admin user after PingFederate starts up. The initial admin user will only be created on the first startup of the server after the license is accepted. ENABLE_AUTOMATIC_HEAP_DUMP true Set to true to add the following Java flags and enable memory dumps -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$PF_HOME_ESC/log\""},{"location":"docker-images/pingfederate/#ports-exposed","title":"Ports Exposed","text":"<p>The following ports are exposed from the container.  If a variable is used, then it may come from a parent container</p> <ul> <li>9031</li> <li>9999</li> </ul>"},{"location":"docker-images/pingfederate/#running-a-pingfederate-container","title":"Running a PingFederate container","text":"<p>To run a PingFederate container:</p> <pre><code>  docker run \\\n           --name pingfederate \\\n           --publish 9999:9999 \\\n           --detach \\\n           --env SERVER_PROFILE_URL=https://github.com/pingidentity/pingidentity-server-profiles.git \\\n           --env SERVER_PROFILE_PATH=getting-started/pingfederate \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER \\\n           --env PING_IDENTITY_DEVOPS_KEY \\\n           --tmpfs /run/secrets \\\n           pingidentity/pingfederate:edge\n</code></pre> <p>Follow Docker logs with:</p> <pre><code>docker logs -f pingfederate\n</code></pre> <p>If using the command above with the embedded server profile, log in with: * https://localhost:9999/pingfederate/app   * Username: Administrator   * Password: 2FederateM0re</p>"},{"location":"docker-images/pingfederate/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all pingfederate hook scripts</p> <p>This document is auto-generated from pingfederate/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingfederate/hooks/","title":"Ping Identity DevOps <code>pingfederate</code> Hooks","text":"<p>List of available hooks: * 04-check-variables.sh.pre * 05-expand-templates.sh.pre * 20-restart-sequence.sh.pre * 80-post-start.sh * 81-after-start-process.sh * 83-configure-admin.sh * 85-import-configuration.sh * LICENSE</p> <p>These hooks will replace hooks defined by parent images (i.e. pingcommon/pingdatacommon)</p> <p>This document is auto-generated from pingfederate/opt/staging/hooks</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingfederate/hooks/04-check-variables.sh.pre/","title":"Ping Identity DevOps <code>pingfederate</code> Hook - <code>04-check-variables.sh.pre</code>","text":"<p>This document is auto-generated from pingfederate/opt/staging/hooks/04-check-variables.sh.pre</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingfederate/hooks/05-expand-templates.sh.pre/","title":"Ping Identity DevOps <code>pingfederate</code> Hook - <code>05-expand-templates.sh.pre</code>","text":"<p>This document is auto-generated from pingfederate/opt/staging/hooks/05-expand-templates.sh.pre</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingfederate/hooks/20-restart-sequence.sh.pre/","title":"Ping Identity DevOps <code>pingfederate</code> Hook - <code>20-restart-sequence.sh.pre</code>","text":"<p>This document is auto-generated from pingfederate/opt/staging/hooks/20-restart-sequence.sh.pre</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingfederate/hooks/80-post-start.sh/","title":"Ping Identity DevOps <code>pingfederate</code> Hook - <code>80-post-start.sh</code>","text":"<p>This script is used to import any configurations that are  needed after PingFederate starts</p> <p>This document is auto-generated from pingfederate/opt/staging/hooks/80-post-start.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingfederate/hooks/81-after-start-process.sh/","title":"Ping Identity DevOps <code>pingfederate</code> Hook - <code>81-after-start-process.sh</code>","text":"<p>This document is auto-generated from pingfederate/opt/staging/hooks/81-after-start-process.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingfederate/hooks/83-configure-admin.sh/","title":"Ping Identity DevOps <code>pingfederate</code> Hook - <code>83-configure-admin.sh</code>","text":"<p>This document is auto-generated from pingfederate/opt/staging/hooks/83-configure-admin.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingfederate/hooks/85-import-configuration.sh/","title":"Ping Identity DevOps <code>pingfederate</code> Hook - <code>85-import-configuration.sh</code>","text":"<p>This document is auto-generated from pingfederate/opt/staging/hooks/85-import-configuration.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingfederate/hooks/LICENSE/","title":"Ping Identity DevOps <code>pingfederate</code> Hook - <code>LICENSE</code>","text":"<p>This document is auto-generated from pingfederate/opt/staging/hooks/LICENSE</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingintelligence/","title":"Ping Identity DevOps Docker Image - <code>pingintelligence-ase</code>","text":"<p>DEPRECATION NOTICE: As of July 2024, the PingIntelligence Docker Image is deprecated. No new image versions will be published. Existing versions will be available as indicated in the Docker Image Support Policy.</p> <p>This docker image includes the Ping Identity PingIntelligence API Security Enforcer product binaries and associated hook scripts to create and run PingIntelligence ASE instances.</p>"},{"location":"docker-images/pingintelligence/#related-docker-images","title":"Related Docker Images","text":"<ul> <li><code>pingidentity/pingbase</code> - Parent Image <p>This image inherits, and can use, Environment Variables from pingidentity/pingbase</p> </li> <li><code>pingidentity/pingcommon</code> - Common Ping files (i.e. hook scripts)</li> </ul>"},{"location":"docker-images/pingintelligence/#environment-variables","title":"Environment Variables","text":"<p>In addition to environment variables inherited from pingidentity/pingbase, the following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description SHIM ${SHIM} IMAGE_VERSION ${IMAGE_VERSION} IMAGE_GIT_REV ${IMAGE_GIT_REV} DATE ${DATE} PING_PRODUCT_VERSION ${VERSION} PING_PRODUCT PingIntelligence_ASE Ping product name LICENSE_FILE_NAME PingIntelligence.lic Name of license File LICENSE_DIR ${SERVER_ROOT_DIR}/config License directory LICENSE_SHORT_NAME pingintelligence Shortname used when retrieving license from License Server LICENSE_VERSION ${LICENSE_VERSION} Version used when retrieving license from License Server STARTUP_COMMAND ${SERVER_ROOT_DIR}/bin/start_ase.sh The command that the entrypoint will execute in the foreground to instantiate the container STARTUP_FOREGROUND_OPTS The command-line options to provide to the the startup command when the container starts with the server in the foreground. This is the normal start flow for the container STARTUP_BACKGROUND_OPTS The command-line options to provide to the the startup command when the container starts with the server in the background. This is the debug start flow for the container ROOT_USER_PASSWORD_FILE ADMIN_USER_PASSWORD_FILE ENCRYPTION_PASSWORD_FILE PING_INTELLIGENCE_ADMIN_USER admin PingIntelligence global variables PingIntelligence default administrative user (this should probably not be changed) PING_INTELLIGENCE_ADMIN_PASSWORD 2FederateM0re PingIntelligence default administrative user credentials (this should be changed) PING_INTELLIGENCE_ASE_HTTP_PORT 8000 The ASE HTTP listener port PING_INTELLIGENCE_ASE_HTTPS_PORT 8443 The ASE HTTPS listener port PING_INTELLIGENCE_ASE_MGMT_PORT 8010 the ASE management port PING_INTELLIGENCE_ASE_TIMEZONE utc The timezone the ASE container is operating in PING_INTELLIGENCE_ASE_ABS_PUBLISH true Whether the ASE should poll the ABS service that publishes discovered APIs PING_INTELLIGENCE_ASE_ABS_PUBLISH_REQUEST_MINUTES 10 The interval in minute to poll the API discovery list PING_INTELLIGENCE_ASE_MODE sideband Defines running mode for API Security Enforcer (Allowed values are inline or sideband). PING_INTELLIGENCE_ASE_ENABLE_SIDEBAND_AUTHENTICATION false Enable client-side authentication with tokens in sideband mode PING_INTELLIGENCE_ASE_HOSTNAME_REWRITE false PING_INTELLIGENCE_ASE_KEYSTORE_PASSWORD OBF:AES:sRNp0W7sSi1zrReXeHodKQ:lXcvbBhKZgDTrjQOfOkzR2mpca4bTUcwPAuerMPwvM4 PING_INTELLIGENCE_ASE_ADMIN_LOG_LEVEL 4 For controller.log and balancer.log only 1-5 (FATAL, ERROR, WARNING, INFO, DEBUG) PING_INTELLIGENCE_ASE_ENABLE_CLUSTER false enable cluster PING_INTELLIGENCE_ASE_SYSLOG_SERVER Syslog server PING_INTELLIGENCE_ASE_CA_CERT_PATH Path the to CA certificate PING_INTELLIGENCE_ASE_ENABLE_HEALTH false enable the ASE health check service PING_INTELLIGENCE_ASE_ENABLE_ABS true Set this value to true, to allow API Security Enforcer to send logs to ABS. PING_INTELLIGENCE_ASE_ENABLE_ABS_ATTACK_LIST_RETRIEVAL true Toggle ABS attack list retrieval PING_INTELLIGENCE_ASE_BLOCK_AUTODETECTED_ATTACKS false Toggle whether ASE blocks auto-detected attacks PING_INTELLIGENCE_ASE_ATTACK_LIST_REFRESH_MINUTES 10 ABS attack list retieval frequency in minutes PING_INTELLIGENCE_ASE_HOSTNAME_REFRESH_SECONDS 60 Hostname refresh interval in seconds PING_INTELLIGENCE_ASE_DECOY_ALERT_INTERVAL_MINUTES 180 Alert interval for teh decoy services PING_INTELLIGENCE_ASE_ENABLE_XFORWARDED_FOR false Toggle X-Forwarded-For PING_INTELLIGENCE_ASE_ENABLE_FIREWALL true Toggle ASE Firewall PING_INTELLIGENCE_ASE_ENABLE_SIDEBAND_KEEPALIVE false Enable connection keepalive for requests from gateway to ASE in sideband mode When enabled, ASE sends 'Connection: keep-alive' header in response When disabled, ASE sends 'Connection: close' header in response PING_INTELLIGENCE_ASE_ENABLE_GOOGLE_PUBSUB false Enable Google Pub/Sub PING_INTELLIGENCE_ASE_ENABLE_ACCESS_LOG true Toggle the access log PING_INTELLIGENCE_ASE_ENABLE_AUDIT false Toggle audit logging PING_INTELLIGENCE_ASE_FLUSH_LOG_IMMEDIATELY true Toggle whether logs are flushed to disk immediately PING_INTELLIGENCE_ASE_HTTP_PROCESS 1 The number of processes for HTTP requests PING_INTELLIGENCE_ASE_HTTPS_PROCESS 1 The number of processes for HTTPS requests PING_INTELLIGENCE_ASE_ENABLE_SSL_V3 false Toggle SSLv3 -- this should absolutely stay disabled PING_INTELLIGENCE_TCP_SEND_BUFFER_BYTES 212992 Kernel TCP send buffer size in bytes PING_INTELLIGENCE_TCP_RECEIVE_BUFFER_BYTES 212992 enrel TCP receive buffer size in bytes PING_INTELLIGENCE_ASE_ATTACK_LIST_MEMORY 128MB PING_INTELLIGENCE_CLUSTER_PEER_NODE_CSV_LIST a comma-separated list of hostname:cluster_manager_port or IPv4_address:cluster_manager_port the ASE will try to connect to each server peer in the list PING_INTELLIGENCE_CLUSTER_ID ase_cluster The ASE cluster ID -- this must be unique PING_INTELLIGENCE_CLUSTER_MGMT_PORT 8020 The ASE cluster management port PING_INTELLIGENCE_CLUSTER_SECRET_KEY OBF:AES:nPJOh3wXQWK/BOHrtKu3G2SGiAEElOSvOFYEiWfIVSdummoFwSR8rDh2bBnhTDdJ:7LFcqXQlqkW9kldQoFg0nJoLSojnzHDbD3iAy84pT84 Secret key required to join the cluster PING_INTELLIGENCE_ABS_ENDPOINT a comma-separated list of abs nodes having hostname:port or ipv4:port as an address. PING_INTELLIGENCE_ABS_ACCESS_KEY access key for ase to authenticate with abs node PING_INTELLIGENCE_ABS_SECRET_KEY secret key for ase to authenticate with abs node PING_INTELLIGENCE_ABS_ENABLE_SSL true Setting this value to true will enable encrypted communication with ABS. PING_INTELLIGENCE_ABS_CA_CERT_PATH Configure the location of ABS's trusted CA certificates. PING_INTELLIGENCE_ABS_DEPLOYMENT_TYPE cloud Default deployment type -- Supported values (onprem/cloud) PING_INTELLIGENCE_ABS_DEPLOYMENT_TYPE_VALIDATION true Must be either cloud or onprem PING_INTELLIGENCE_GATEWAY_CREDENTIALS Obtain the appropriate JWT token in PinOne under Connections-&gt;PingIntelligence PING_INTELLIGENCE_GATEWAY_CREDENTIALS_REDACT true PING_STARTUP_TIMEOUT 8 The amount of time to wait for ASE to start before exiting TAIL_LOG_FILES ${SERVER_ROOT_DIR}/logs/access.log Files tailed once container has started Other potentially useful log file to tail for debug purposes are logs/controller.log and logs/balancer.log"},{"location":"docker-images/pingintelligence/#running-a-pingintelligence-container","title":"Running a PingIntelligence container","text":"<p>To run a PingIntelligence container:</p> <pre><code>  docker run \\\n           --name pingintellgence \\\n           --publish 8443:8443 \\\n           --detach \\\n           --env PING_IDENTITY_ACCEPT_EULA=YES \\\n           --env PING_IDENTITY_DEVOPS_USER=user@pingone.com \\\n           --env PING_IDENTITY_DEVOPS_KEY=&lt;edvops key here&gt; \\\n           --env PING_INTELLIGENCE_GATEWAY_CREDENTIALS=&lt;PingIntelligence App JWT here&gt; \\\n           --ulimit nofile=65536:65536 \\\n           pingidentity/pingintelligence:edge\n</code></pre> <p>Follow Docker logs with:</p> <pre><code>docker logs -f pingintelligence\n</code></pre> <p>If using the command above, use cli.sh with:   * Username: admin   * Password: 2FederateM0re</p>"},{"location":"docker-images/pingintelligence/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all pingintelligence hook scripts</p> <p>This document is auto-generated from pingintelligence/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingintelligence/hooks/","title":"Ping Identity DevOps <code>pingintelligence</code> Hooks","text":"<p>List of available hooks: * 01-start-server.sh.pre * 04-check-variables.sh.post * 50-before-post-start.sh * 80-post-start.sh * LICENSE * pingintelligence.lib.sh</p> <p>These hooks will replace hooks defined by parent images (i.e. pingcommon/pingdatacommon)</p> <p>This document is auto-generated from pingintelligence/opt/staging/hooks</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingintelligence/hooks/01-start-server.sh.pre/","title":"Ping Identity DevOps <code>pingintelligence</code> Hook - <code>01-start-server.sh.pre</code>","text":"<p>This document is auto-generated from pingintelligence/opt/staging/hooks/01-start-server.sh.pre</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingintelligence/hooks/04-check-variables.sh.post/","title":"Ping Identity DevOps <code>pingintelligence</code> Hook - <code>04-check-variables.sh.post</code>","text":"<p>This document is auto-generated from pingintelligence/opt/staging/hooks/04-check-variables.sh.post</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingintelligence/hooks/50-before-post-start.sh/","title":"Ping Identity DevOps <code>pingintelligence</code> Hook - <code>50-before-post-start.sh</code>","text":"<p>This document is auto-generated from pingintelligence/opt/staging/hooks/50-before-post-start.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingintelligence/hooks/80-post-start.sh/","title":"Ping Identity DevOps <code>pingintelligence</code> Hook - <code>80-post-start.sh</code>","text":"<p>This hook may be used to set the server if there is a setup procedure</p> <p>Note: The PingData (i.e. Directory, DataSync, PingAuthorize, DirectoryProxy)  products will all provide this</p> <p>This document is auto-generated from pingintelligence/opt/staging/hooks/80-post-start.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingintelligence/hooks/LICENSE/","title":"Ping Identity DevOps <code>pingintelligence</code> Hook - <code>LICENSE</code>","text":"<p>This document is auto-generated from pingintelligence/opt/staging/hooks/LICENSE</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingintelligence/hooks/pingintelligence.lib.sh/","title":"Ping Identity DevOps <code>pingintelligence</code> Hook - <code>pingintelligence.lib.sh</code>","text":"<p>This document is auto-generated from pingintelligence/opt/staging/hooks/pingintelligence.lib.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingtoolkit/","title":"Ping Identity DevOps Docker Image - <code>pingtoolkit</code>","text":"<p>This docker image includes the Ping Identity PingToolkit and associated hook scripts to create a container that can pull in a SERVER_PROFILE run scripts.  The typical use case of this image would be an init container or a pod/container to perform tasks aside a running set of pods/containers.</p>"},{"location":"docker-images/pingtoolkit/#related-docker-images","title":"Related Docker Images","text":"<ul> <li><code>pingidentity/pingbase</code> - Parent Image <p>This image inherits, and can use, Environment Variables from pingidentity/pingbase</p> </li> <li><code>pingidentity/pingcommon</code> - Common Ping files (i.e. hook scripts)</li> </ul>"},{"location":"docker-images/pingtoolkit/#environment-variables","title":"Environment Variables","text":"<p>In addition to environment variables inherited from pingidentity/pingbase, the following environment <code>ENV</code> variables can be used with this image.</p> ENV Variable Default Description SHIM ${SHIM} IMAGE_VERSION ${IMAGE_VERSION} IMAGE_GIT_REV ${IMAGE_GIT_REV} DATE ${DATE} PING_PRODUCT_VERSION ${VERSION} PING_PRODUCT PingToolkit Ping product name STARTUP_COMMAND tail The command that the entrypoint will execute in the foreground to instantiate the container STARTUP_FOREGROUND_OPTS -f /dev/null The command-line options to provide to the the startup command when the container starts with the server in the foreground. This is the normal start flow for the container"},{"location":"docker-images/pingtoolkit/#docker-container-hook-scripts","title":"Docker Container Hook Scripts","text":"<p>Please go here for details on all pingtoolkit hook scripts</p> <p>This document is auto-generated from pingtoolkit/Dockerfile</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingtoolkit/hooks/","title":"Ping Identity DevOps <code>pingtoolkit</code> Hooks","text":"<p>List of available hooks: * 17-check-license.sh * LICENSE</p> <p>These hooks will replace hooks defined by parent images (i.e. pingcommon/pingdatacommon)</p> <p>This document is auto-generated from pingtoolkit/opt/staging/hooks</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingtoolkit/hooks/17-check-license.sh/","title":"Ping Identity DevOps <code>pingtoolkit</code> Hook - <code>17-check-license.sh</code>","text":"<p>This document is auto-generated from pingtoolkit/opt/staging/hooks/17-check-license.sh</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"docker-images/pingtoolkit/hooks/LICENSE/","title":"Ping Identity DevOps <code>pingtoolkit</code> Hook - <code>LICENSE</code>","text":"<p>This document is auto-generated from pingtoolkit/opt/staging/hooks/LICENSE</p> <p>Copyright \u00a9 2025 Ping Identity Corporation. All rights reserved.</p>"},{"location":"get-started/configVars/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/get-started/configVars.html.</p>"},{"location":"get-started/getStartedExample/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/get-started/getStartedExample.html.</p>"},{"location":"get-started/introduction/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/get-started/introduction.html.</p>"},{"location":"get-started/prereqs/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/get-started/prereqs.html.</p>"},{"location":"home/3rdPartySoftware/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/home/3rdPartySoftware.html.</p>"},{"location":"home/disclaimer/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/home/disclaimer.html.</p>"},{"location":"home/license/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/home/license.html.</p>"},{"location":"home/portalUpdates/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/home/portalUpdates.html.</p>"},{"location":"home/supportPolicy/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/home/supportPolicy.html.</p>"},{"location":"how-to/addMOTD/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/addMOTD.html.</p>"},{"location":"how-to/assignPFNodeId/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/assignPFNodeId.html.</p>"},{"location":"how-to/buildLocal/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/buildLocal.html.</p>"},{"location":"how-to/buildPingDirectoryProfile/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/buildPingDirectoryProfile.html.</p>"},{"location":"how-to/buildPingFederateProfile/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/buildPingFederateProfile.html.</p>"},{"location":"how-to/containerAnatomy/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/containerAnatomy.html.</p>"},{"location":"how-to/devopsRegistration/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/devopsRegistration.html.</p>"},{"location":"how-to/existingLicense/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/existingLicense.html.</p>"},{"location":"how-to/manage/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/manage.html.</p>"},{"location":"how-to/migratingRootToUnprivileged/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/migratingRootToUnprivileged.html.</p>"},{"location":"how-to/privateRepos/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/privateRepos.html.</p>"},{"location":"how-to/profiles/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/profiles.html.</p>"},{"location":"how-to/profilesLayered/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/profilesLayered.html.</p>"},{"location":"how-to/profilesPingDataExtensions/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/profilesPingDataExtensions.html.</p>"},{"location":"how-to/profilesSubstitution/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/profilesSubstitution.html.</p>"},{"location":"how-to/prometheus/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/prometheus.html.</p>"},{"location":"how-to/reEncryptPingDirectoryData/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/reEncryptPingDirectoryData.html.</p>"},{"location":"how-to/s3Archive/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/s3Archive.html.</p>"},{"location":"how-to/saveConfigs/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/saveConfigs.html.</p>"},{"location":"how-to/secureContainers/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/secureContainers.html.</p>"},{"location":"how-to/splunkLogging/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/splunkLogging.html.</p>"},{"location":"how-to/upgradePingAccess/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/upgradePingAccess.html.</p>"},{"location":"how-to/upgradePingCentral/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/upgradePingCentral.html.</p>"},{"location":"how-to/upgradePingDirectory/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/upgradePingDirectory.html.</p>"},{"location":"how-to/upgradePingfederate/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/upgradePingfederate.html.</p>"},{"location":"how-to/usingVault/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/how-to/usingVault.html.</p>"},{"location":"reference/HelmBasics/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/reference/HelmBasics.html.</p>"},{"location":"reference/awsStorage/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/reference/awsStorage.html.</p>"},{"location":"reference/config/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/reference/config.html.</p>"},{"location":"reference/containerLogging/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/reference/containerLogging.html.</p>"},{"location":"reference/faqs/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/reference/faqs.html.</p>"},{"location":"reference/hooks/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/reference/hooks.html.</p>"},{"location":"reference/k8sBasics/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/reference/k8sBasics.html.</p>"},{"location":"reference/pingone-config/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/reference/pingone-config.html.</p>"},{"location":"reference/profileStructures/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/reference/profileStructures.html.</p>"},{"location":"reference/readOnlyFilesystem/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/reference/readOnlyFilesystem.html.</p>"},{"location":"reference/troubleshooting/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/reference/troubleshooting.html.</p>"},{"location":"reference/usingCertificates/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/reference/usingCertificates.html.</p>"},{"location":"reference/variableScoping/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/reference/variableScoping.html.</p>"},{"location":"reference/yamlFiles/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/reference/yamlFiles.html.</p>"},{"location":"release-notes/currentRelease/","title":"Version 2507 Release Notes","text":"<p>Product release notes</p> <p>For information about product changes, refer to the release notes that can be found on each product's download page.</p>"},{"location":"release-notes/currentRelease/#devops-docker-builds-version-2507-aug-1-2025","title":"DevOps Docker Builds, Version 2507 (Aug 1 2025)","text":""},{"location":"release-notes/currentRelease/#enhancements","title":"Enhancements","text":"<ul> <li>Redhat UBI9 Minimal 9.6-1751286687 \u2192 9.6-1754000177</li> <li>Alpine 3.22.0 \u2192 3.22.1</li> <li>Liberica JDK17 17.0.15+10 \u2192 17.0.16+12</li> </ul>"},{"location":"release-notes/currentRelease/#features","title":"Features","text":"<ul> <li>(PDI-2252) Support for correct image tag extension when specified as DOCKER_DEFAULT_PLATFORM environment variable.</li> <li>(PDI-2253) Updated pingdataconsole 10.3 to run on tomcat 11. This fixes an issue where the console would return a 404 error when running on tomcat 9.</li> <li>(PDI-2255) Image hook script 09-build-motd.sh no longer imports external MOTD content, improving security and reliability.</li> </ul>"},{"location":"release-notes/currentRelease/#documentation","title":"Documentation","text":"<ul> <li>(PDI-2246) Migrated content to the new developer experience portal, with redirects, for both https://helm.pingidentity.com and https://devops.pingidentity.com</li> </ul>"},{"location":"release-notes/currentRelease/#supported-product-releases","title":"Supported Product Releases","text":"<ul> <li>See the Product Version, Image Release Matrix   for currently supported image and product versions.</li> </ul>"},{"location":"release-notes/relnotes-2003/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2003.html.</p>"},{"location":"release-notes/relnotes-2004/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2004.html.</p>"},{"location":"release-notes/relnotes-2005/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2005.html.</p>"},{"location":"release-notes/relnotes-2006/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2006.html.</p>"},{"location":"release-notes/relnotes-2007/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2007.html.</p>"},{"location":"release-notes/relnotes-2008/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2008.html.</p>"},{"location":"release-notes/relnotes-2009/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2009.html.</p>"},{"location":"release-notes/relnotes-2010/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2010.html.</p>"},{"location":"release-notes/relnotes-2011/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2011.html.</p>"},{"location":"release-notes/relnotes-2012/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2012.html.</p>"},{"location":"release-notes/relnotes-2101/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2101.html.</p>"},{"location":"release-notes/relnotes-2102/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2102.html.</p>"},{"location":"release-notes/relnotes-2103/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2103.html.</p>"},{"location":"release-notes/relnotes-2104/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2104.html.</p>"},{"location":"release-notes/relnotes-2105/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2105.html.</p>"},{"location":"release-notes/relnotes-2106/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2106.html.</p>"},{"location":"release-notes/relnotes-2107/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2107.html.</p>"},{"location":"release-notes/relnotes-2108/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2108.html.</p>"},{"location":"release-notes/relnotes-2109/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2109.html.</p>"},{"location":"release-notes/relnotes-2110/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2110.html.</p>"},{"location":"release-notes/relnotes-2111-1/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2111-1.html.</p>"},{"location":"release-notes/relnotes-2111/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2111.html.</p>"},{"location":"release-notes/relnotes-2112/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2112.html.</p>"},{"location":"release-notes/relnotes-2201/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2201.html.</p>"},{"location":"release-notes/relnotes-2202/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2202.html.</p>"},{"location":"release-notes/relnotes-2203/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2203.html.</p>"},{"location":"release-notes/relnotes-2204/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2204.html.</p>"},{"location":"release-notes/relnotes-2205/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2205.html.</p>"},{"location":"release-notes/relnotes-2206/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2206.html.</p>"},{"location":"release-notes/relnotes-2207/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2207.html.</p>"},{"location":"release-notes/relnotes-2208/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2208.html.</p>"},{"location":"release-notes/relnotes-2209/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2209.html.</p>"},{"location":"release-notes/relnotes-2210/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2210.html.</p>"},{"location":"release-notes/relnotes-2211/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2211.html.</p>"},{"location":"release-notes/relnotes-2212/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2212.html.</p>"},{"location":"release-notes/relnotes-2301/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2301.html.</p>"},{"location":"release-notes/relnotes-2302/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2302.html.</p>"},{"location":"release-notes/relnotes-2303/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2303.html.</p>"},{"location":"release-notes/relnotes-2304/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2304.html.</p>"},{"location":"release-notes/relnotes-2305/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2305.html.</p>"},{"location":"release-notes/relnotes-2306/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2306.html.</p>"},{"location":"release-notes/relnotes-2307-1/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2307-1.html.</p>"},{"location":"release-notes/relnotes-2307/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2307.html.</p>"},{"location":"release-notes/relnotes-2308-1/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2308-1.html.</p>"},{"location":"release-notes/relnotes-2308/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2308.html.</p>"},{"location":"release-notes/relnotes-2309/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2309.html.</p>"},{"location":"release-notes/relnotes-2310/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2310.html.</p>"},{"location":"release-notes/relnotes-2311/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2311.html.</p>"},{"location":"release-notes/relnotes-2312/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2312.html.</p>"},{"location":"release-notes/relnotes-2401/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2401.html.</p>"},{"location":"release-notes/relnotes-2402/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2402.html.</p>"},{"location":"release-notes/relnotes-2403/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2403.html.</p>"},{"location":"release-notes/relnotes-2404/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2404.html.</p>"},{"location":"release-notes/relnotes-2405/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2405.html.</p>"},{"location":"release-notes/relnotes-2406/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2406.html.</p>"},{"location":"release-notes/relnotes-2407/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2407.html.</p>"},{"location":"release-notes/relnotes-2408/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2408.html.</p>"},{"location":"release-notes/relnotes-2409/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2409.html.</p>"},{"location":"release-notes/relnotes-2410/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2410.html.</p>"},{"location":"release-notes/relnotes-2411/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2411.html.</p>"},{"location":"release-notes/relnotes-2412/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/release-notes/relnotes-2412.html.</p>"},{"location":"release-notes/relnotes-2501/","title":"Version 2501 Release Notes","text":"<p>Product release notes</p> <p>For information about product changes, refer to the release notes that can be found on each product's download page.</p>"},{"location":"release-notes/relnotes-2501/#devops-docker-builds-version-2501-feb-3-2025","title":"DevOps Docker Builds, Version 2501 (Feb 3 2025)","text":""},{"location":"release-notes/relnotes-2501/#new-product-releases","title":"New Product Releases","text":"<ul> <li>PingFederate 12.1.4 -&gt; 12.1.5</li> <li>PingData products 10.2.0.0 -&gt; 10.2.0.1<ul> <li>PingDirectory (Dockerhub)</li> <li>PingDirectory Proxy (Dockerhub)</li> <li>PingDataSync (Dockerhub)</li> <li>PingAuthorize (Dockerhub)</li> <li>PingDataConsole (Dockerhub)</li> </ul> </li> </ul>"},{"location":"release-notes/relnotes-2501/#enhancements","title":"Enhancements","text":"<ul> <li>Alpine 3.21.0 -&gt; 3.21.2</li> <li>Redhat UBI9-Minimal 9.5-1734497536 -&gt; 9.5-1736404155</li> <li>Liberica JDK17 17.0.13+12 -&gt; 17.0.14+10</li> </ul>"},{"location":"release-notes/relnotes-2501/#documentation","title":"Documentation","text":"<ul> <li>(PDI-2171) Update https://devops.pingidentity.com for clarity on multi-region with all PingData products</li> <li>(PDI-2173) Updated https://devops.pingidentity.com examples to latest releases of software and product</li> </ul>"},{"location":"release-notes/relnotes-2501/#supported-product-releases","title":"Supported Product Releases","text":"<ul> <li>See the Product Version, Image Release Matrix   for currently supported image and product versions.</li> </ul>"},{"location":"release-notes/relnotes-2502/","title":"Version 2502 Release Notes","text":"<p>Product release notes</p> <p>For information about product changes, refer to the release notes that can be found on each product's download page.</p>"},{"location":"release-notes/relnotes-2502/#devops-docker-builds-version-2502-feb-28-2025","title":"DevOps Docker Builds, Version 2502 (Feb 28 2025)","text":""},{"location":"release-notes/relnotes-2502/#new-product-releases","title":"New Product Releases","text":"<ul> <li>PingFederate 12.2.0 \u2192 12.2.1 </li> <li>PingFederate 12.1.5 \u2192 12.1.6</li> </ul>"},{"location":"release-notes/relnotes-2502/#enhancements","title":"Enhancements","text":"<ul> <li>Apache Tomcat 9.0.98 \u2192 9.0.100 </li> <li>Redhat UBI9-minimal 9.5-1736404155 \u2192 9.5-1739420147 </li> <li>Alpine 3.21.2 \u2192 3.21.3</li> </ul>"},{"location":"release-notes/relnotes-2502/#features","title":"Features","text":"<ul> <li>(PDI-2148) Update PingData images to use product-default java.properties by default in ARM images</li> <li>(PDI-2169) Update PingAccess and PingFederate Image Labels for Publication to Redhat Catalog</li> </ul>"},{"location":"release-notes/relnotes-2502/#supported-product-releases","title":"Supported Product Releases","text":"<ul> <li>See the Product Version, Image Release Matrix   for currently supported image and product versions.</li> </ul>"},{"location":"release-notes/relnotes-2503/","title":"Version 2503 Release Notes","text":"<p>Product release notes</p> <p>For information about product changes, refer to the release notes that can be found on each product's download page.</p>"},{"location":"release-notes/relnotes-2503/#devops-docker-builds-version-2503-apr-1-2025","title":"DevOps Docker Builds, Version 2503 (Apr 1 2025)","text":""},{"location":"release-notes/relnotes-2503/#new-product-releases","title":"New Product Releases","text":"<ul> <li>PingFederate 12.2.1 -&gt; 12.2.2</li> <li>PingData products 10.2.0.0 -&gt; 10.2.0.1<ul> <li>PingDirectory (Dockerhub)</li> <li>PingDirectory Proxy (Dockerhub)</li> <li>PingDataSync (Dockerhub)</li> <li>PingAuthorize (Dockerhub)</li> <li>PingDataConsole (Dockerhub)</li> </ul> </li> </ul>"},{"location":"release-notes/relnotes-2503/#enhancements","title":"Enhancements","text":"<ul> <li>Apache Tomcat 9.0.100 -&gt; 9.0.102</li> </ul>"},{"location":"release-notes/relnotes-2503/#features","title":"Features","text":"<ul> <li>(PDI-2195) Limit minimum and maximum Jetty threads for PingFederate</li> </ul>"},{"location":"release-notes/relnotes-2503/#documentation","title":"Documentation","text":"<ul> <li>(PDI-2197) Updated the DevOps portal with information regarding Iron Bank images</li> </ul>"},{"location":"release-notes/relnotes-2503/#supported-product-releases","title":"Supported Product Releases","text":"<ul> <li>See the Product Version, Image Release Matrix   for currently supported image and product versions.</li> </ul>"},{"location":"release-notes/relnotes-2504/","title":"Version 2504 Release Notes","text":"<p>Product release notes</p> <p>For information about product changes, refer to the release notes that can be found on each product's download page.</p>"},{"location":"release-notes/relnotes-2504/#devops-docker-builds-version-2504-may-1-2025","title":"DevOps Docker Builds, Version 2504 (May 1 2025)","text":""},{"location":"release-notes/relnotes-2504/#new-product-releases","title":"New Product Releases","text":"<ul> <li>PingAccess 8.2.0 \u2192 8.2.1</li> <li>PingAccess 8.1.2 \u2192 8.1.3</li> <li>PingCentral 2.3.0 and EOL 2.1.x</li> </ul>"},{"location":"release-notes/relnotes-2504/#enhancements","title":"Enhancements","text":"<ul> <li>Apache Tomcat 9.0.102 \u2192 9.0.104</li> <li>RedHat UBI9-Minimal 9.5-1739420147 \u2192 9.5-1745855087</li> <li>Liberica JDK17 17.0.14+10 \u2192 17.0.15+10</li> </ul>"},{"location":"release-notes/relnotes-2504/#features","title":"Features","text":"<ul> <li>(PDI-2196) Updated the PingDirectory docker image to support new FAIL_ON_DISABLED_BASE_DN and FAIL_ON_UNSUCCESSFUL_REMOVE_DEFUNCT environment variables, which can be enabled by being set to \"true\". The first will fail the container if it is found that replication for the USER_BASE_DN is not enabled after all topology setup is complete. The second will fail the container if it is found that a previous call to remove-defunct-server did not complete successfully, indicating that the topology is in an unknown state. In these cases, manual intervention will be required to correct the topology.</li> </ul>"},{"location":"release-notes/relnotes-2504/#documentation","title":"Documentation","text":"<ul> <li>(PDI-2199) Updated the various examples on devops.pingidentity.com to ensure stability and operations.</li> <li>(PDI-2204) Added documentation at https://devops.pingidentity.com/reference/usingCertificates/ for certificate rotation in PingData images when using read-only keystores and truststores.</li> <li>(PDI-2207) Updated the example on devops.pingidentity.com for archiving to S3 to be platform-agnostic</li> </ul>"},{"location":"release-notes/relnotes-2504/#supported-product-releases","title":"Supported Product Releases","text":"<ul> <li>See the Product Version, Image Release Matrix   for currently supported image and product versions.</li> </ul>"},{"location":"release-notes/relnotes-2505/","title":"Version 2505 Release Notes","text":"<p>Product release notes</p> <p>For information about product changes, refer to the release notes that can be found on each product's download page.</p>"},{"location":"release-notes/relnotes-2505/#devops-docker-builds-version-2505-jun-4-2025","title":"DevOps Docker Builds, Version 2505 (Jun 4 2025)","text":""},{"location":"release-notes/relnotes-2505/#new-product-releases","title":"New Product Releases","text":"<ul> <li>PingFederate 12.1.7 \u2192 12.1.8</li> </ul>"},{"location":"release-notes/relnotes-2505/#enhancements","title":"Enhancements","text":"<ul> <li>Apache Tomcat 9.0.104 \u2192 9.0.105</li> <li>Redhat UBI9 Minimal 9.5-1745855087 \u2192 9.6-1747218906</li> <li>Alpine 3.21.3 \u2192 3.22.0</li> </ul>"},{"location":"release-notes/relnotes-2505/#supported-product-releases","title":"Supported Product Releases","text":"<ul> <li>See the Product Version, Image Release Matrix   for currently supported image and product versions.</li> </ul>"},{"location":"release-notes/relnotes-2506/","title":"Version 2506 Release Notes","text":"<p>Product release notes</p> <p>For information about product changes, refer to the release notes that can be found on each product's download page.</p>"},{"location":"release-notes/relnotes-2506/#devops-docker-builds-version-2506-july-2-2025","title":"DevOps Docker Builds, Version 2506 (July 2 2025)","text":""},{"location":"release-notes/relnotes-2506/#new-product-releases","title":"New Product Releases","text":"<ul> <li>UnboundID LDAP SDK for Java 7.0.2 \u2192 7.0.3</li> <li>PingFederate 12.3.0 and EOL 12.1.x</li> <li>PingFederate 12.2.3 \u2192 12.2.4</li> <li>PingAccess 8.3.0 and EOL 8.1.x</li> <li>PingData 10.3.0.0 and EOL 10.1.x.x<ul> <li>PingDirectory (Dockerhub)</li> <li>PingDirectory Proxy (Dockerhub)</li> <li>PingDataSync (Dockerhub)</li> <li>PingAuthorize (Dockerhub)</li> <li>PingDataConsole (Dockerhub)</li> </ul> </li> </ul>"},{"location":"release-notes/relnotes-2506/#enhancements","title":"Enhancements","text":"<ul> <li>Apache Tomcat 9.0.105 \u2192 9.0.106</li> <li>Redhat UBI9 Minimal 9.6-1747218906 \u2192 9.6-1751286687</li> </ul>"},{"location":"release-notes/relnotes-2506/#supported-product-releases","title":"Supported Product Releases","text":"<ul> <li>See the Product Version, Image Release Matrix   for currently supported image and product versions.</li> </ul>"},{"location":"release-notes/relnotes-2507/","title":"Version 2507 Release Notes","text":"<p>Product release notes</p> <p>For information about product changes, refer to the release notes that can be found on each product's download page.</p>"},{"location":"release-notes/relnotes-2507/#devops-docker-builds-version-2507-aug-1-2025","title":"DevOps Docker Builds, Version 2507 (Aug 1 2025)","text":""},{"location":"release-notes/relnotes-2507/#enhancements","title":"Enhancements","text":"<ul> <li>Redhat UBI9 Minimal 9.6-1751286687 \u2192 9.6-1754000177</li> <li>Alpine 3.22.0 \u2192 3.22.1</li> <li>Liberica JDK17 17.0.15+10 \u2192 17.0.16+12</li> </ul>"},{"location":"release-notes/relnotes-2507/#features","title":"Features","text":"<ul> <li>(PDI-2252) Support for correct image tag extension when specified as DOCKER_DEFAULT_PLATFORM environment variable.</li> <li>(PDI-2253) Updated pingdataconsole 10.3 to run on tomcat 11. This fixes an issue where the console would return a 404 error when running on tomcat 9.</li> <li>(PDI-2255) Image hook script 09-build-motd.sh no longer imports external MOTD content, improving security and reliability.</li> </ul>"},{"location":"release-notes/relnotes-2507/#documentation","title":"Documentation","text":"<ul> <li>(PDI-2246) Migrated content to the new developer experience portal, with redirects, for both https://helm.pingidentity.com and https://devops.pingidentity.com</li> </ul>"},{"location":"release-notes/relnotes-2507/#supported-product-releases","title":"Supported Product Releases","text":"<ul> <li>See the Product Version, Image Release Matrix   for currently supported image and product versions.</li> </ul>"},{"location":"tools/ldapsdkUtil/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/tools/ldapsdkUtil.html.</p>"},{"location":"tools/pingDevopsUtil_Deprecated/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/tools/pingDevopsUtil_Deprecated.html.</p>"},{"location":"tools/pingDownloader_Deprecated/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/tools/pingDownloader_Deprecated.html.</p>"},{"location":"tools/pingctlUtil/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/tools/pingctlUtil.html.</p>"},{"location":"tools/commands/kubernetes/","title":"pingctl kubernetes","text":""},{"location":"tools/commands/kubernetes/#description","title":"Description","text":"<p>Manage Ping related Kubernetes resources.</p> <ul> <li>Generate <code>devops-secret</code> secret containing Ping DevOps variables <code>PING_IDENTITY_DEVOPS_KEY</code> and <code>PING_IDENTITY_DEVOPS_SECRET</code></li> <li>Generate <code>tls-secret</code> secret containing a self-signed certificate and key for a specified domain.</li> <li>Generate <code>ssh-id-secret</code> secret containing a file with ssh id (i.e. ~/.ssh/id_rsa)</li> <li>Generate <code>license-secret</code> secret containing a Ping Identity product license file or generated eval license</li> <li>Provide details about a cached kubectl oidc token</li> <li>Display the entire jwt token</li> <li>Display a specific claim</li> <li>Clear the kubectl oidc cache</li> </ul>"},{"location":"tools/commands/kubernetes/#usage","title":"Usage","text":"<pre><code>pingctl kubernetes generate devops-secret\npingctl kubernetes generate tls-secret {domain}\npingctl kubernetes generate ssh-id-secret {ssh id_rsa file}\npingctl kubernetes generate license-secret {license file}\npingctl kubernetes generate license-secret {product} {ver}\n\npingctl kubernetes oidc clear\npingctl kubernetes oidc {claim}\npingctl kubernetes oidc info\n</code></pre>"},{"location":"tools/commands/kubernetes/#options","title":"Options","text":""},{"location":"tools/commands/license/","title":"pingctl license","text":""},{"location":"tools/commands/license/#description","title":"Description","text":"<p>Provides access to Ping Identity evaluation license keys.</p> <ul> <li>Retrieve license based on product name and version</li> </ul>"},{"location":"tools/commands/license/#usage","title":"Usage","text":"<pre><code>pingctl license {product} {ver}\n</code></pre>"},{"location":"tools/commands/license/#options","title":"Options","text":"<ul> <li> <p>product: name of the product</p> <p>This name is generally a collapsed one-word representation of the product name. For example: Ping Federate is <code>pingfederate</code></p> </li> <li> <p>ver: version of the product</p> <p>This value is the <code>major.minor</code> representation of the version of the product in question.  For example, if a product had a point release of <code>10.2.3</code> you would provide <code>10.2</code></p> </li> </ul>"},{"location":"tools/commands/pingone/","title":"pingctl pingone","text":""},{"location":"tools/commands/pingone/#description","title":"Description","text":"<p>Provides ability to manage PingOne environments.  Capabilities of this command include:</p> <ul> <li>Listing, searching and retrieving PingOne resources (i.e. user, populations, groups)</li> <li>Adding PingOne resources</li> <li>Deleting PingOne resources</li> </ul>"},{"location":"tools/commands/pingone/#usage","title":"Usage","text":"<pre><code>pingctl pingone get                  # Get PingOne resource(s)\npingctl pingone add                  # Add PingOne resource\npingctl pingone delete               # Delete PingOne resource\n\npingctl pingone add-user-group       # Add group to user\npingctl pingone delete-user-group    # Delete group from user\n\npingctl pingone token                # Obtain access token\n</code></pre>"},{"location":"tools/commands/pingone/#options","title":"Options","text":""},{"location":"tools/commands/pingone/#all-subcommands","title":"All subcommands","text":"<pre><code>-r\n    Provide REST Calls\n</code></pre>"},{"location":"tools/commands/pingone/#get","title":"get","text":"<pre><code>-o [ table | csv | json ]\n    Output format (default: table)\n    also set with env variable: PINGCTL_DEFAULT_OUTPUT\n\n-i {id}\n    Search based on object guid\n\n-n {name}\n    Search based on exact filter\n\n-f {filter}\n    PingOne filter (SCIM based)\n        ex: '.name.given eq \"john\"'\n            '.email sw \"john\"'\n\n-c {columns}\n    Columns to output based on \"heading:jsonAttr\"\n    An example of available jsonAttrs can be found by using a json output first.\n        ex: 'LastName:name.family,FirstName:name.given'\n\n-s {sort column}\n    Columns to sort output on based on \"jsonAttr\"\n    The jsonAttr MUST be listed in the list of columns (-c option).\n        ex: 'name.family'\n\n-p {population name}\n    Population from which to retrieve a user/group\n    If not provided, the 'Default' population is used\n</code></pre>"},{"location":"tools/commands/pingone/#add","title":"add","text":"<pre><code>-p {population name}\n    Population into which to add a user/group\n    If not provided, the 'Default' population is used\n</code></pre>"},{"location":"videos/videos/","title":"Content Moved","text":"<p>This content has moved to developer.pingidentity.com/devops/videos/videos.html.</p>"}]}